[{"path":"https://craddm.github.io/eegUtils/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://www.contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/.","code":""},{"path":"https://craddm.github.io/eegUtils/articles/data_structures.html","id":"eegutils","dir":"Articles","previous_headings":"","what":"eegUtils","title":"A guide to eegUtils data structures","text":"eegUtils uses S3 objects store EEG data associated information channel locations. Using different object classes data structured different ways ensures various plotting functions work consistently across different types EEG data. example, different classes epoched (eeg_epochs) continuous data (eeg_data), time-frequency representations data (eeg_tfr).","code":""},{"path":"https://craddm.github.io/eegUtils/articles/data_structures.html","id":"eeg_data-objects","dir":"Articles","previous_headings":"","what":"eeg_data objects","title":"A guide to eegUtils data structures","text":"eeg_data objects base class used continuous data. raw data imported, output class. class list constituting following entries: data frame containing actual EEG data wide format. column data single electrode, row single timepoint. single numeric value giving sampling rate data Hz event_onset (samples) relative recording onset event_time (seconds) relative recording onset event_type (typically integer, others possible) Often NULL import, since BDF CNT contain (usable) electrode locations. electrode - electrode names radius - Spherical co-ordinates (Radius typically normalized 1) theta - Spherical co-ordinates (theta) phi - Spherical co-ordinates (theta) cart_x - Cartesian 3D coordinates cart_y - Cartesian 3D coordinates cart_z - Cartesian 3D coordinates x - 2D Stereographic projection spherical coordinates y - 2D Stereographic projection spherical coordinates data.frame containing description row time (s) sample numbers (samples) data.frame containing information epochs data, relevant epoched data. NA loading, absence recorded reference channel. ref_chans - Labels channels used calculate reference data. Can also “average”. excluded - Labels channels excluded reference data.","code":"head(eegUtils:::electrodeLocs) #> # A tibble: 6 × 9 #>   electrode radius theta   phi cart_x cart_y cart_z      x     y #>   <fct>      <dbl> <dbl> <dbl>  <dbl>  <dbl>  <dbl>  <dbl> <dbl> #> 1 LPA            1  -119    13 -86.1   -20.0 -48.0  -116.  -26.8 #> 2 RPA            1   119   -13  85.8   -20.0 -48.0   116.  -26.8 #> 3 Nz             1   115    90   0.01   86.8 -40.0     0   115   #> 4 Fp1            1   -94   -71 -29.4    83.9  -6.99  -30.6  88.9 #> 5 Fpz            1    91    90   0.11   88.2  -1.71    0    91   #> 6 Fp2            1    94    71  29.9    84.9  -7.08   30.6  88.9"},{"path":"https://craddm.github.io/eegUtils/articles/data_structures.html","id":"eeg_epochs","dir":"Articles","previous_headings":"","what":"eeg_epochs","title":"A guide to eegUtils data structures","text":"eeg_epochs objects share overall structure eeg_data objects, internals currently differ, described . epoch gives epoch number given event belongs time gives time point event occurs relative epoch onset event_time still gives time point event occurs relative recording onset epoch gives epoch number given datapoint belongs sample still uniquely identifies datapoint time now gives time relative zero-point epoch, .e. event epoch centred. data.frame containing information participant, labels applied epochs","code":"events(demo_epochs) #> # A tibble: 80 × 5 #>    event_onset event_time event_type epoch  time #>          <dbl>      <dbl>      <dbl> <dbl> <dbl> #>  1        4128       8.06        208     1     0 #>  2        7037      13.7         213     2     0 #>  3       10043      19.6         215     3     0 #>  4       12928      25.2         213     4     0 #>  5       15868      31.0         207     5     0 #>  6       18777      36.7         207     6     0 #>  7       21578      42.1         213     7     0 #>  8       24554      48.0         213     8     0 #>  9       27379      53.5         222     9     0 #> 10       30306      59.2         208    10     0 #> # ℹ 70 more rows head(demo_epochs$timings) #> # A tibble: 6 × 3 #>   epoch sample   time #>   <dbl>  <dbl>  <dbl> #> 1     1   4028 -0.197 #> 2     1   4032 -0.189 #> 3     1   4036 -0.182 #> 4     1   4040 -0.174 #> 5     1   4044 -0.166 #> 6     1   4048 -0.158 epochs(demo_epochs) #> # A tibble: 80 × 4 #>    epoch recording epoch_label participant_id #>    <dbl> <lgl>     <lgl>       <chr>          #>  1     1 NA        NA          001            #>  2     2 NA        NA          001            #>  3     3 NA        NA          001            #>  4     4 NA        NA          001            #>  5     5 NA        NA          001            #>  6     6 NA        NA          001            #>  7     7 NA        NA          001            #>  8     8 NA        NA          001            #>  9     9 NA        NA          001            #> 10    10 NA        NA          001            #> # ℹ 70 more rows"},{"path":"https://craddm.github.io/eegUtils/articles/data_structures.html","id":"eeg_tfr","dir":"Articles","previous_headings":"","what":"eeg_tfr","title":"A guide to eegUtils data structures","text":"eeg_tfr objects hold time-frequency representations eeg_epochs objects. 4D matrix - epoch time electrode frequency keeps track matrix dimension corresponds property.","code":""},{"path":"https://craddm.github.io/eegUtils/articles/data_structures.html","id":"eeg_ica","dir":"Articles","previous_headings":"","what":"eeg_ICA","title":"A guide to eegUtils data structures","text":"eeg_ICA objects contain results either ICA SSD decomposition applied eeg_epochs object. weights used convert source data original data weights used convert original data source data signals - individual component activations","code":""},{"path":"https://craddm.github.io/eegUtils/articles/eegUtils.html","id":"basic-eeg-processing","dir":"Articles","previous_headings":"","what":"Basic EEG processing","title":"EEG Utils","text":"currently suport loading raw data .BDF (typically BioSemi), .CNT (32-bit; associated Neuroscan), .vhdr/.vmrk/.dat Brain Vision Analyzer 2.0 file formats using import_raw() command. Loading data formats results eeg_data object - structure contains raw data variety metadata. experiment, participants covertly attend either left right visual field indicated visual cue (arrow pointing left right). Around 1-1.5 seconds cue, target - Gabor patch - appear either left right visual field. task determing whether target patch showed vertical horizontal grating. 80% time, target appeared cued location. can find file “Matt-task-spatcue.bdf” Open Science Framework. data recorded 1024 Hz (downsampled already 256 Hz) using BioSemi ActiveTwo amplifier active electrodes. 64 electrodes positioned named according 10-05 international system. additional electrodes (EXG1-EXG4) placed around eyes record eye movements, two reference electrodes placed left right mastoids (EXG5 EXG6). EXG7 EXG8 empty channels, electrodes attached.","code":"library(eegUtils) if (!file.exists(\"Matt-task-spatcue.bdf\")) {   temp_dir <- tempdir()   temp_file <- file.path(temp_dir, \"Matt-task-spatcue.bdf\")   download.file(\"https://osf.io/hy5wq/download\",                 temp_file,                 mode = \"wb\")   eeg_example <- import_raw(temp_file) } else {   eeg_example <- import_raw(\"Matt-task-spatcue.bdf\") } eeg_example"},{"path":"https://craddm.github.io/eegUtils/articles/eegUtils.html","id":"referencing","dir":"Articles","previous_headings":"","what":"Referencing","title":"EEG Utils","text":"common first step rereference data, can done using eeg_reference() command. default, electrodes specified, data referenced common average, calculated electrodes data. First ’ll remove two empty channels, EXG7 EXG8, using select_elecs() function.","code":"eeg_example <- select_elecs(eeg_example,                             electrode = c(\"EXG7\", \"EXG8\"),                             keep = FALSE) eeg_example <- eeg_reference(eeg_example,                              ref_chans = \"average\") eeg_example"},{"path":"https://craddm.github.io/eegUtils/articles/eegUtils.html","id":"filtering","dir":"Articles","previous_headings":"","what":"Filtering","title":"EEG Utils","text":"Filtering can performed using eeg_filter() command. uses IIR FIR filters modify frequency response signal, removing low high frequency fluctuations requested. speed, ’ll use “iir” filtering perform bandpass filtering high-pass filter .1 Hz low-pass filter 40 Hz. ’ll also plot power spectral density data filtering, using plot_psd() function.","code":"plot_psd(eeg_example,           freq_range = c(0, 60),          legend = FALSE)  eeg_example <- eeg_filter(eeg_example,                           method = \"iir\",                           low_freq = .1,                           high_freq = 40,                           filter_order = 4) # specify a bandpass filter plot_psd(eeg_example,           freq_range = c(0, 60),          legend = FALSE)"},{"path":"https://craddm.github.io/eegUtils/articles/eegUtils.html","id":"creating-epochs","dir":"Articles","previous_headings":"","what":"Creating epochs","title":"EEG Utils","text":"Data can epoched around events/triggers using epoch_data(), outputs eeg_epochs object. list event triggers found data can retrieved using list_events(eeg_example), comprehensively, events structure can retrieved using events(eeg_example). case, ’ll epoch around events 120 122. events correspond onset visual target left right fixation respectively, validly cued trials . can specify length epochs around trigger using time_lim argument, label epoch using epoch_labels. also specify data baseline corrected using average timepoints -.1s 0s (stimulus onset). epoching, use epochs() function check meta-information data epochs.","code":"list_events(eeg_example) epoched_example <-   epoch_data(     eeg_example,     events = c(120,                122),     epoch_labels = c(\"valid_left\",                      \"valid_right\"),     time_lim = c(-.1, .4),     baseline = c(-.1, 0)   ) epochs(epoched_example)"},{"path":"https://craddm.github.io/eegUtils/articles/eegUtils.html","id":"plotting","dir":"Articles","previous_headings":"","what":"Plotting","title":"EEG Utils","text":"eeg_epochs can plotted using plot_butterfly() plot_timecourse(). plot_butterfly() plot_timecourse() average epochs. plot_timecourse() also average electrodes - electrodes none specified, specified electrodes. Baseline correction can also applied plotting using baseline parameter plotting call. Standard channel locations can added using electrode_locations() command. function supplies default locations 300 typical locations accroding 10-05 system. several specific montages provided can specified using montage parameter. can inspect added locations using channels(). topoplot() can used plot topographical representation selected data. Note compulsory use locations electrode_locations(); data x y columns data frame, added chan_info element eeg_data/eeg_epochs object, used. point, eegUtils objects can transformed data frames use functions don’t natively support .","code":"plot_butterfly(epoched_example,                legend = FALSE) plot_butterfly(epoched_example,                time_lim = c(-.1, .3),                legend = FALSE) plot_timecourse(epoched_example,                 electrode = \"POz\") # Plot POz plot_timecourse(epoched_example,                 electrode = c(\"POz\", \"Oz\", \"O1\", \"O2\")) # average over four occipital electrodes epoched_example <- electrode_locations(epoched_example,                                        overwrite = TRUE) channels(epoched_example) topoplot(epoched_example,          time_lim = c(.22, .24)) library(ggplot2) library(dplyr) epoched_example %>%   select_epochs(epoch_no = 1:10) %>%   select_elecs(c(\"PO8\", \"Cz\")) %>%   as.data.frame(long = TRUE) %>%   ggplot(aes(x = time, y = amplitude)) +   geom_line(aes(group = epoch), alpha = 0.2) +    stat_summary(fun.y = mean,                geom = \"line\",                size = 2,                aes(colour = electrode)) +    facet_wrap(~electrode) +    theme_classic()"},{"path":"https://craddm.github.io/eegUtils/articles/eegUtils.html","id":"tidyverse-functions","dir":"Articles","previous_headings":"","what":"Tidyverse functions","title":"EEG Utils","text":"addition, overloaded versions dplyr functions operate signals element eeg_data eeg_epochs objects. example, select() can used choose particular electrodes, filter() can used filter epochs timepoints. mutate() can used add new columns (e.g. creating ROIs multiple electrodes).","code":"epoched_example %>%   rm_baseline(time_lim = c(-.1, 0)) %>%   mutate(occipital = (O1 + O2 + Oz) / 3) %>%   select(Oz, Fz, occipital) %>%   filter(epoch <= 60, time < .3, time > -.1) %>%   as.data.frame(long = TRUE) %>%   ggplot(aes(x = time, y = amplitude)) +   geom_line(aes(group = epoch), alpha = 0.2) +    stat_summary(fun = mean,                geom = \"line\",                size = 2,                aes(colour = electrode)) +   facet_wrap(~electrode) +    scale_colour_viridis_d() +   theme_classic()"},{"path":"https://craddm.github.io/eegUtils/articles/linear_modelling/linear_modelling.html","id":"references","dir":"Articles > Linear_modelling","previous_headings":"","what":"References","title":"Linear Modelling","text":"[^1] Guillaume, Rousselet. (2016). LIMO EEG Dataset, [dataset]. University Edinburgh, Centre Clinical Brain Sciences. https://doi.org/10.7488/ds/1556.","code":""},{"path":"https://craddm.github.io/eegUtils/articles/time-frequency-analysis.html","id":"frequency-analysis","dir":"Articles","previous_headings":"","what":"Frequency analysis","title":"Frequency analysis","text":"eegUtils, can achieved using compute_psd() plot_psd(). epoched data, compute_psd() calculates PSD trial separately. compute_psd() returns data.frame spectral power resolved frequency electrode. Note plot_psd() can called directly eeg_data eeg_epochs objects without first compute_psd(). epoched data, compute PSD epoch average epochs plotting.","code":"library(eegUtils) #>  #> Attaching package: 'eegUtils' #> The following object is masked from 'package:stats': #>  #>     filter demo_psd <- compute_psd(demo_epochs) #> Removing channel means per epoch... #> Computing Power Spectral Density using Welch's method. #> FFT length: 256 #> Segment length: 84 #> Overlapping points: 42 (50% overlap) plot_psd(demo_epochs) #> Removing channel means per epoch... #> Computing Power Spectral Density using Welch's method. #> FFT length: 256 #> Segment length: 84 #> Overlapping points: 42 (50% overlap)"},{"path":"https://craddm.github.io/eegUtils/articles/time-frequency-analysis.html","id":"time-frequency-analysis","dir":"Articles","previous_headings":"","what":"Time-frequency analysis","title":"Frequency analysis","text":"Frequency analysis necessarily discards temporal information. One problem assumes stationarity - signal remains stable terms frequency power across whole analysed time window. However, rarely case EEG data, exhibits dynamics across wide range timescales. Time-frequency analysis method accounting non-stationarity decomposing signal using moving-window analysis, tiling time-frequency space resolve power relatively shorter time-windows. eegUtils, compute_tfr() can used calculate time-frequency representation eeg_epochs(). Currently, achieved using Morlet wavelets. Morlet wavelets used window signal, controlling spectral leakage time-frequency specificity. Morlet wavelets user-defined temporal extent, turn determines frequency extent. define temporal extent wavelets cycles; define integer number cycles frequency interest. Note characteristics wavelets, terms temporal frequency standard deviations, stored inside eeg_tfr object: results time-frequency transformation can plotted using plot_tfr() function.  Baseline correction common literature, can serve two purposes. Several different methods possible. plotting , modification eeg_tfr object using rm_baseline().","code":"demo_tfr <- compute_tfr(demo_epochs,                         method = \"morlet\",                         foi = c(4, 30),                         n_freq = 12,                         n_cycles = 3) #> Computing TFR using Morlet wavelet convolution #> Output frequencies using linear spacing: 4 6.36 8.73 11.09 13.45 15.82 18.18 20.55 22.91 25.27 27.64 30 #> Removing channel means per epoch... #> Returning signal averaged over all trials. demo_tfr #> Epoched EEG TFR data #>  #> Frequency range      :    4 6.36 8.73 11.09 13.45 15.82 18.18 20.55 22.91 25.27 27.64 30  #> Number of channels   :    11  #> Electrode names      :    A5 A13 A21 A29 A31 B5 B6 B8 B16 B18 B26  #> Number of epochs :    1  #> Epoch limits     :    -0.197 - 0.451 seconds #> Sampling rate        :    128  Hz demo_tfr$freq_info$morlet_resolution #>    frequency   sigma_f    sigma_t n_cycles #> 1   4.000000  1.333333 0.11936621        3 #> 2   6.363636  2.121212 0.07503019        3 #> 3   8.727273  2.909091 0.05470951        3 #> 4  11.090909  3.696970 0.04305011        3 #> 5  13.454545  4.484848 0.03548725        3 #> 6  15.818182  5.272727 0.03018456        3 #> 7  18.181818  6.060606 0.02626057        3 #> 8  20.545455  6.848485 0.02323944        3 #> 9  22.909091  7.636364 0.02084172        3 #> 10 25.272727  8.424242 0.01889249        3 #> 11 27.636364  9.212121 0.01727669        3 #> 12 30.000000 10.000000 0.01591549        3 plot_tfr(demo_tfr) plot_tfr(demo_tfr, baseline_type = \"absolute\", baseline = c(-.1, 0)) #> Baseline: -0.1-0 s plot_tfr(demo_tfr, baseline_type = \"db\", baseline = c(-.1, 0)) #> Baseline: -0.1-0 s"},{"path":"https://craddm.github.io/eegUtils/articles/topoplot/topoplot.html","id":"ggplot2-extensions---geom_topo","dir":"Articles > Topoplot","previous_headings":"","what":"ggplot2 extensions - geom_topo()","title":"Building a topographical plot","text":"desire control plots familiar ggplot2, several custom geoms help . starter, geom_topo() creates full topographical plot, cartoon head points indicating coordinate locations. based ggplot2’s geom_raster(), many parameters common. unlike geom_raster() can handle irregular grid. required supply x, y, fill, z aesthetics use function. fortify methods included package eegUtils objects can passed directly ggplot(). complete control, one might wish convert objects using .data.frame() first, desired manipulations averaging can conducted first.   several different parameters can passed geom_topo() change appearance plot.","code":"library(ggplot2) ggplot(demo_epochs,        aes(x = x,            y = y,            fill = amplitude,            z = amplitude)) +   geom_topo() ggplot(demo_epochs,        aes(x = x,            y = y,            fill = amplitude,            z = amplitude)) +   geom_topo() +    scale_fill_distiller(palette = \"RdBu\") +    theme_void() +    coord_equal() +    labs(fill = expression(paste(\"Amplitude (\", mu,\"V)\"))) ggplot(demo_epochs,        aes(x = x,            y = y,            fill = amplitude,            z = amplitude,            label = electrode)) +   geom_topo(grid_res = 200,             interp_limit = \"head\",             chan_markers = \"text\",             chan_size = 4,             colour = \"black\") +    scale_fill_distiller(palette = \"RdBu\") +    theme_void() +    coord_equal() +    labs(fill = expression(paste(\"Amplitude (\", mu,\"V)\")))"},{"path":"https://craddm.github.io/eegUtils/articles/topoplot/topoplot.html","id":"building-from-the-ground-up","dir":"Articles > Topoplot","previous_headings":"","what":"Building from the ground up","title":"Building a topographical plot","text":"want even control, individual constituent parts can added plots . stat_scalpmap() adds interpolated surface irregular grid electrodes, rounded circular shape. geom_head() adds cartoon headshape. geom_channels() wrapper round geom_text() geom_point() prevents overplotting submitting eegUtils object directly, can used plot channel locations points text labels. geom_mask() can used draw circular masking ring around edge interpolated surface, smooth rough edges. useful using low grid resolution, advisable using facetting animation. geoms customisable standard ggplot2 geoms .","code":"ggplot(demo_epochs,         aes(x = x,             y = y,            fill = amplitude)) +    stat_scalpmap(grid_res = 60) +  #based on geom_raster()   geom_mask(r = 114, size = 6) +    #based on geom_path()   geom_head() +                   #based on geom_path() and geom_curve()   geom_channels() +               #based on geom_point() and geom_text()   scale_fill_viridis_c(limits = c(-6, 6),                        oob = scales::squish) +   coord_equal()"},{"path":"https://craddm.github.io/eegUtils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matt Craddock. Author, maintainer. Matti Vuorre. Contributor. ggplot2 authors. Copyright holder.           Routines borrowed ggplot2 allow contours drawn topoplots","code":""},{"path":"https://craddm.github.io/eegUtils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Craddock M (2024). eegUtils: Utilities Electroencephalographic (EEG) Analysis. R package version 0.8.0, https://craddm.github.io/eegUtils, https://craddm.github.io/eegUtils/, https://github.com/craddm/eegUtils.","code":"@Manual{,   title = {eegUtils: Utilities for Electroencephalographic (EEG) Analysis},   author = {Matt Craddock},   year = {2024},   note = {R package version 0.8.0, https://craddm.github.io/eegUtils, https://craddm.github.io/eegUtils/},   url = {https://github.com/craddm/eegUtils}, }"},{"path":[]},{"path":"https://craddm.github.io/eegUtils/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Utilities for Electroencephalographic (EEG) Analysis","text":"eegUtils package processing, manipulation, plotting EEG data. includes functions importing data variety file formats (including Biosemi, Brain Vision Analyzer, EEGLAB), many typical steps pre-preprocessing (filtering, referencing, artefact rejection), advanced processing techniques (time-frequency analysis, ICA), several types plot common field (ERP plots, time-frequency plots, topographical scalp maps). Although uses custom object classes, designed always translatable standard R data.frames, thus can used myriad packages methods support standard R formats.","code":""},{"path":"https://craddm.github.io/eegUtils/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utilities for Electroencephalographic (EEG) Analysis","text":"package much active development subject lot changes. , currently available CRAN. Install latest released version Github . install latest development version, install develop branch . can also find package Neuroconductor - information installing packages Neuroconductor, see Neuroconductor installation tutorial","code":"#install.packages(\"remotes\") remotes::install_github(\"craddm/eegUtils\") remotes::install_github(\"craddm/eegUtils@develop\")"},{"path":"https://craddm.github.io/eegUtils/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Utilities for Electroencephalographic (EEG) Analysis","text":"following examples show use eegUtils produce common plots EEG data simple included example data.","code":""},{"path":"https://craddm.github.io/eegUtils/index.html","id":"erp-butterfly-plots","dir":"","previous_headings":"Usage","what":"ERP butterfly plots","title":"Utilities for Electroencephalographic (EEG) Analysis","text":"","code":"library(eegUtils) #>  #> Attaching package: 'eegUtils' #> The following object is masked from 'package:stats': #>  #>     filter plot_butterfly(demo_epochs)"},{"path":"https://craddm.github.io/eegUtils/index.html","id":"topographical-plots","dir":"","previous_headings":"Usage","what":"Topographical plots","title":"Utilities for Electroencephalographic (EEG) Analysis","text":"","code":"topoplot(demo_epochs,           time_lim = c(.22, .25 )) #> Using electrode locations from data. #> Plotting head r 95 mm"},{"path":"https://craddm.github.io/eegUtils/index.html","id":"power-spectral-density","dir":"","previous_headings":"Usage","what":"Power spectral density","title":"Utilities for Electroencephalographic (EEG) Analysis","text":"","code":"plot_psd(demo_epochs) #> Removing channel means per epoch... #> Computing Power Spectral Density using Welch's method. #> FFT length: 256 #> Segment length: 84 #> Overlapping points: 42 (50% overlap)"},{"path":"https://craddm.github.io/eegUtils/index.html","id":"time-frequency-analysis","dir":"","previous_headings":"Usage","what":"Time-frequency analysis","title":"Utilities for Electroencephalographic (EEG) Analysis","text":"many potential processing steps precede production plots like . examples import process data, import data sources, see eegUtils website!","code":"plot_tfr(compute_tfr(demo_epochs,                      foi = c(4, 30),                      n_freq = 20,                      n_cycles = 3)) #> Computing TFR using Morlet wavelet convolution #> Output frequencies using linear spacing: 4 5.37 6.74 8.11 9.47 10.84 12.21 13.58 14.95 16.32 17.68 19.05 20.42 21.79 23.16 24.53 25.89 27.26 28.63 30 #> Removing channel means per epoch... #> Returning signal averaged over all trials."},{"path":"https://craddm.github.io/eegUtils/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Utilities for Electroencephalographic (EEG) Analysis","text":"bug reports feature requests, please report using Github issue tracker. like contribute code, anything documentation fix whole new feature, please begin raising issue moving file Github pull request. can find guide Github issues pull requests work .","code":""},{"path":"https://craddm.github.io/eegUtils/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Utilities for Electroencephalographic (EEG) Analysis","text":"Please note eegUtils project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/StatScalpContours.html","id":null,"dir":"Reference","previous_headings":"","what":"StatScalpcontours — StatScalpContours","title":"StatScalpcontours — StatScalpContours","text":"StatScalpcontours","code":""},{"path":"https://craddm.github.io/eegUtils/reference/StatScalpContours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"StatScalpcontours — StatScalpContours","text":"","code":"StatScalpContours"},{"path":"https://craddm.github.io/eegUtils/reference/StatScalpContours.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"StatScalpcontours — StatScalpContours","text":"object class StatScalpContours (inherits Stat, ggproto, gg) length 6.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/StatScalpmap.html","id":null,"dir":"Reference","previous_headings":"","what":"StatScalpmap — StatScalpmap","title":"StatScalpmap — StatScalpmap","text":"StatScalpmap","code":""},{"path":"https://craddm.github.io/eegUtils/reference/StatScalpmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"StatScalpmap — StatScalpmap","text":"","code":"StatScalpmap"},{"path":"https://craddm.github.io/eegUtils/reference/StatScalpmap.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"StatScalpmap — StatScalpmap","text":"object class StatScalpmap (inherits Stat, ggproto, gg) length 4.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/apply_ica.html","id":null,"dir":"Reference","previous_headings":"","what":"Recreate channel timecourses from ICA decompositions. — apply_ica","title":"Recreate channel timecourses from ICA decompositions. — apply_ica","text":"function can used either recreate \"mixed\" (.e. channel level) timecourses ICA decomposition, apply set ICA weights given dataset purpose removing specific ICA components dataset.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/apply_ica.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recreate channel timecourses from ICA decompositions. — apply_ica","text":"","code":"apply_ica(data, ...)  # S3 method for class 'eeg_ICA' apply_ica(data, comps = NULL, ...)  # S3 method for class 'eeg_epochs' apply_ica(data, decomp, comps, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/apply_ica.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recreate channel timecourses from ICA decompositions. — apply_ica","text":"data eeg_ICA eeg_epochs object. ... parameters. comps Components remove. decomp eeg_ICA object.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/apply_ica.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Recreate channel timecourses from ICA decompositions. — apply_ica","text":"apply_ica(eeg_ICA): given eeg_ICA object, recreate channel timecourses. apply_ica(eeg_epochs): Combine specific set ICA weights eeg_epochs object.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/apply_ica.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Recreate channel timecourses from ICA decompositions. — apply_ica","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/apply_ica.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recreate channel timecourses from ICA decompositions. — apply_ica","text":"","code":"test_ica <- run_ICA(demo_epochs, pca = 10) #> Reducing data to 10 dimensions using PCA. #> Running SOBI ICA. plot_butterfly(demo_epochs) #> Creating epochs based on combinations of variables: epoch_label participant_id   # Reconstruct the original data from the ICA decomposition. # Note that the ICA process subtracts the mean from each epoch, # so the reconstructed plot may look slightly different to the original. plot_butterfly(apply_ica(test_ica)) #> Creating epochs based on combinations of variables: epoch_label participant_id   # Remove component 2 from the data plot_butterfly(apply_ica(demo_epochs, test_ica, comps = 2)) #> Creating epochs based on combinations of variables: epoch_label participant_id"},{"path":"https://craddm.github.io/eegUtils/reference/ar_FASTER.html","id":null,"dir":"Reference","previous_headings":"","what":"FASTER EEG artefact rejection — ar_FASTER","title":"FASTER EEG artefact rejection — ar_FASTER","text":"implementation FASTER artefact rejection method EEG Nolan, Whelan & Reilly (2010) FASTER: Fully Automated Statistical Thresholding EEG artifact Rejection. J Neurosci Methods.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_FASTER.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FASTER EEG artefact rejection — ar_FASTER","text":"","code":"ar_FASTER(data, ...)  # S3 method for class 'eeg_epochs' ar_FASTER(   data,   exclude = NULL,   test_chans = TRUE,   test_epochs = TRUE,   test_cine = TRUE,   ... )  # S3 method for class 'eeg_group' ar_FASTER(   data,   exclude = NULL,   test_chans = TRUE,   test_epochs = TRUE,   test_cine = TRUE,   EOG = NULL,   ... )  eeg_FASTER(data, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/ar_FASTER.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FASTER EEG artefact rejection — ar_FASTER","text":"data object class eeg_epochs ... Parameters passed FASTER exclude Channels ignored FASTER. test_chans Logical. Run tests global channel statistics test_epochs Logical. Run tests globally bad epochs. test_cine Logical. Run tests locally bad channels within epochs. EOG names EOG channels used computed maximum EOG values.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_FASTER.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FASTER EEG artefact rejection — ar_FASTER","text":"eeg_epochs object artefact correction applied.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_FASTER.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"FASTER EEG artefact rejection — ar_FASTER","text":"ar_FASTER(eeg_epochs): Run FASTER eeg_epochs ar_FASTER(eeg_group): Run FASTER eeg_group objects","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_FASTER.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"FASTER EEG artefact rejection — ar_FASTER","text":"Nolan, Whelan & Reilly (2010). FASTER: Fully Automated Statistical Thresholding EEG artifact Rejection. J Neurosci Methods.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_FASTER.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"FASTER EEG artefact rejection — ar_FASTER","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_FASTER.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FASTER EEG artefact rejection — ar_FASTER","text":"","code":"ar_FASTER(demo_epochs) #> Globally bad channels:  #> Globally bad epochs: 1 26 65 #> Epoched EEG data #>  #> Number of channels\t: 11  #> Number of epochs\t: 77  #> Epoch limits\t\t: -0.197 - 0.451 seconds #> Electrode names\t\t: A5 A13 A21 A29 A31 B5 B6 B8 B16 B18 B26  #> Sampling rate\t\t: 128  Hz #> Reference\t\t: average"},{"path":"https://craddm.github.io/eegUtils/reference/ar_acf.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect low autocorrelation of ICA components — ar_acf","title":"Detect low autocorrelation of ICA components — ar_acf","text":"Low autocorrelation can sign poor quality channel component. Often noisy, poor contact, heavily contaminated muscle noise. Low autocorrelation lag 20ms often associated muscle noise.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_acf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect low autocorrelation of ICA components — ar_acf","text":"","code":"ar_acf(data, ...)  # S3 method for class 'eeg_ICA' ar_acf(data, ms = 20, plot = TRUE, verbose = TRUE, threshold = NULL, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/ar_acf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect low autocorrelation of ICA components — ar_acf","text":"data eeg_ICA object ... additional parameters ms Time lag check ACF, milliseconds. Defaults 20 ms. plot Produce plot showing ACF threshold EEG components. verbose Print informative messages. Defaults TRUE. threshold Specify threshold low ACF. NULL estimates threshold automatically.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_acf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect low autocorrelation of ICA components — ar_acf","text":"character vector component names break threshold.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_acf.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Detect low autocorrelation of ICA components — ar_acf","text":"ar_acf(eeg_ICA): Autocorrelation checker eeg_ICA objects","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_acf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Detect low autocorrelation of ICA components — ar_acf","text":"Chaumon, M., Bishop, D.V., Busch, N.. (2015). practical guide selection independent components electroencephalogram artifact correction. J Neurosci Methods. Jul 30;250:47-63. doi: 10.1016/j.jneumeth.2015.02.025","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_acf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detect low autocorrelation of ICA components — ar_acf","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_acf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect low autocorrelation of ICA components — ar_acf","text":"","code":"demo_sobi <- run_ICA(demo_epochs, pca = 10) #> Reducing data to 10 dimensions using PCA. #> Running SOBI ICA. ar_acf(demo_sobi) #> Estimating autocorrelation at 20ms lag. #> Estimated ACF threshold: -0.16  #> Subthreshold components:   #> character(0)"},{"path":"https://craddm.github.io/eegUtils/reference/ar_chanfoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect high channel focality of ICA components — ar_chanfoc","title":"Detect high channel focality of ICA components — ar_chanfoc","text":"Detect components load heavily single channel. Looks components one particular channel particularly high z-score.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_chanfoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect high channel focality of ICA components — ar_chanfoc","text":"","code":"ar_chanfoc(   data,   plot = TRUE,   threshold = NULL,   verbose = TRUE,   measure = \"max\",   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/ar_chanfoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect high channel focality of ICA components — ar_chanfoc","text":"data eeg_ICA object plot Produce plot showing max z-scores threshold ICA components. threshold Specify threshold high focality. NULL estimates threshold automatically. verbose Print informative messages. measure Use maximum \"max\" \"kurtosis\". ... additional parameters","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_chanfoc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect high channel focality of ICA components — ar_chanfoc","text":"character vector component names break threshold.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_chanfoc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Detect high channel focality of ICA components — ar_chanfoc","text":"Chaumon, M., Bishop, D.V., Busch, N.. (2015). practical guide selection independent components electroencephalogram artifact correction. J Neurosci Methods. Jul 30;250:47-63. doi: 10.1016/j.jneumeth.2015.02.025","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_chanfoc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detect high channel focality of ICA components — ar_chanfoc","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_chanfoc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect high channel focality of ICA components — ar_chanfoc","text":"","code":"demo_sobi <- run_ICA(demo_epochs, pca = 10) #> Reducing data to 10 dimensions using PCA. #> Running SOBI ICA. ar_chanfoc(demo_sobi) #> Estimated threshold: 2.95  #> Components with high channel focality:   #> character(0)"},{"path":"https://craddm.github.io/eegUtils/reference/ar_eogcor.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect high component correlation with eye channels — ar_eogcor","title":"Detect high component correlation with eye channels — ar_eogcor","text":"Checks correlation individual components eeg_ICA decomposition electrooculogram channels eeg_epochs dataset.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_eogcor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect high component correlation with eye channels — ar_eogcor","text":"","code":"ar_eogcor(decomp, data, ...)  # S3 method for class 'eeg_ICA' ar_eogcor(   decomp,   data,   HEOG,   VEOG,   threshold = NULL,   plot = TRUE,   bipolarize = TRUE,   method = c(\"pearson\", \"kendall\", \"spearman\"),   verbose = TRUE,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/ar_eogcor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect high component correlation with eye channels — ar_eogcor","text":"decomp eeg_ica object data original eeg_epochs object decomposition derived ... parameters HEOG Horizontal eye channels VEOG Vertical eye channels threshold Threshold correlation (r). Defaults NULL, automatically determining threshold. plot Plot correlation coefficient components bipolarize Bipolarize HEOG VEOG channels? method Correlation method. Defaults Pearson. verbose Print informative messages. Defaults TRUE.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_eogcor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect high component correlation with eye channels — ar_eogcor","text":"character vector component names break threshold.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_eogcor.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Detect high component correlation with eye channels — ar_eogcor","text":"ar_eogcor(eeg_ICA): Method eeg_ICA objects.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_eogcor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Detect high component correlation with eye channels — ar_eogcor","text":"Chaumon, M., Bishop, D.V., Busch, N.. (2015). practical guide selection independent components electroencephalogram artifact correction. J Neurosci Methods. Jul 30;250:47-63. doi: 10.1016/j.jneumeth.2015.02.025","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_eogcor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detect high component correlation with eye channels — ar_eogcor","text":"Matt Craddock, matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_eogreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove EOG using regression — ar_eogreg","title":"Remove EOG using regression — ar_eogreg","text":"Calculates removes contribution eye movements EEG signal using least-squares regression. Specifically, generate regression weights based EOG channels used estimate much activity eye movements responsible across channels.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_eogreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove EOG using regression — ar_eogreg","text":"","code":"ar_eogreg(data, heog, veog, bipolarize = TRUE)  # S3 method for class 'eeg_data' ar_eogreg(data, heog, veog, bipolarize = TRUE)  # S3 method for class 'eeg_epochs' ar_eogreg(data, heog, veog, bipolarize = TRUE)"},{"path":"https://craddm.github.io/eegUtils/reference/ar_eogreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove EOG using regression — ar_eogreg","text":"data Data regress - eeg_data eeg_epochs heog Horizontal EOG channel labels veog Vertical EOG channel labels bipolarize Bipolarize EOG channels. works four channels supplied (2 HEOG 2 VEOG).","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_eogreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove EOG using regression — ar_eogreg","text":"eeg_data eeg_epochs object corrections applied.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_eogreg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove EOG using regression — ar_eogreg","text":"Matt Craddock, matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_thresh.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple absolute value thresholding — ar_thresh","title":"Simple absolute value thresholding — ar_thresh","text":"Reject data based simple absolute amplitude threshold. marks timepoint electrode.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_thresh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple absolute value thresholding — ar_thresh","text":"","code":"ar_thresh(data, threshold, reject = FALSE)  # S3 method for class 'eeg_data' ar_thresh(data, threshold, reject = FALSE)  # S3 method for class 'eeg_epochs' ar_thresh(data, threshold, reject = FALSE)"},{"path":"https://craddm.github.io/eegUtils/reference/ar_thresh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple absolute value thresholding — ar_thresh","text":"data object class eeg_data eeg_epochs. threshold microvolts. one value supplied, treated +- value. reject TRUE, remove marked data immediately, otherwise mark inspection/rejection. Defaults FALSE.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_thresh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple absolute value thresholding — ar_thresh","text":"object class eeg_data eeg_epochs","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_thresh.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Simple absolute value thresholding — ar_thresh","text":"ar_thresh(eeg_data): Reject data using simple threshold. ar_thresh(eeg_epochs): Reject data using simple threshold.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_thresh.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simple absolute value thresholding — ar_thresh","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_thresh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple absolute value thresholding — ar_thresh","text":"","code":"ar_thresh(demo_epochs, c(100)) #> 0 (0%) samples above 100 uV threshold. #> 0 (0%) samples below -100 uV threshold. #> No epochs contain samples above threshold. #> Epoched EEG data #>  #> Number of channels\t: 11  #> Number of epochs\t: 80  #> Epoch limits\t\t: -0.197 - 0.451 seconds #> Electrode names\t\t: A5 A13 A21 A29 A31 B5 B6 B8 B16 B18 B26  #> Sampling rate\t\t: 128  Hz #> Reference\t\t: average"},{"path":"https://craddm.github.io/eegUtils/reference/ar_trialfoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect high trial focality of ICA components — ar_trialfoc","title":"Detect high trial focality of ICA components — ar_trialfoc","text":"Detect components load heavily small number trials. Looks components one particular trial particularly high z-score.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_trialfoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect high trial focality of ICA components — ar_trialfoc","text":"","code":"ar_trialfoc(data, plot = TRUE, threshold = NULL, verbose = TRUE)"},{"path":"https://craddm.github.io/eegUtils/reference/ar_trialfoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect high trial focality of ICA components — ar_trialfoc","text":"data eeg_ICA object plot Produce plot showing max z-scores threshold ICA components. threshold Specify threshold (z-score) high focality. NULL estimates threshold automatically. verbose Print informative messages.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_trialfoc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect high trial focality of ICA components — ar_trialfoc","text":"character vector component names break threshold.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_trialfoc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Detect high trial focality of ICA components — ar_trialfoc","text":"Chaumon, M., Bishop, D.V., Busch, N.. (2015). practical guide selection independent components electroencephalogram artifact correction. J Neurosci Methods. Jul 30;250:47-63. doi: 10.1016/j.jneumeth.2015.02.025","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_trialfoc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detect high trial focality of ICA components — ar_trialfoc","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ar_trialfoc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect high trial focality of ICA components — ar_trialfoc","text":"","code":"demo_sobi <- run_ICA(demo_epochs, pca = 10) #> Reducing data to 10 dimensions using PCA. #> Running SOBI ICA. ar_trialfoc(demo_sobi) #> Estimated trial focality threshold (z): 6.41  #> Components with high trial focality: Comp009  #> [1] \"Comp009\""},{"path":"https://craddm.github.io/eegUtils/reference/arrange_chans.html","id":null,"dir":"Reference","previous_headings":"","what":"Topographical channel ordering — arrange_chans","title":"Topographical channel ordering — arrange_chans","text":"Rearrange channels anatomical order (e.g. left right, anterior posterior).","code":""},{"path":"https://craddm.github.io/eegUtils/reference/arrange_chans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Topographical channel ordering — arrange_chans","text":"","code":"arrange_chans(chan_info, sig_names)"},{"path":"https://craddm.github.io/eegUtils/reference/arrange_chans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Topographical channel ordering — arrange_chans","text":"chan_info channel info structure sig_names names signals data","code":""},{"path":"https://craddm.github.io/eegUtils/reference/arrange_chans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Topographical channel ordering — arrange_chans","text":"Vector channel positions","code":""},{"path":"https://craddm.github.io/eegUtils/reference/arrange_chans.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Topographical channel ordering — arrange_chans","text":"Matt Craddock, matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_ICA.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert eeg_ICA object to data frame — as.data.frame.eeg_ICA","title":"Convert eeg_ICA object to data frame — as.data.frame.eeg_ICA","text":"Convert eeg_ICA object data frame","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_ICA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert eeg_ICA object to data frame — as.data.frame.eeg_ICA","text":"","code":"# S3 method for class 'eeg_ICA' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   long = FALSE,   cond_labels,   mixing = FALSE,   coords = TRUE,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_ICA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert eeg_ICA object to data frame — as.data.frame.eeg_ICA","text":"x Object class eeg_ICA row.names Kept compatibility S3 generic, ignored. optional Kept compatibility S3 generic, ignored. long Convert long format. Defaults FALSE cond_labels add condition labels data frame. Deprecated. mixing TRUE, outputs mixing matrix. FALSE, outputs source activations. coords Adds electrode coordinates TRUE; long data mixing matrix requested. ... arguments .data.frame commands","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_ICA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert eeg_ICA object to data frame — as.data.frame.eeg_ICA","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert eeg_data to data.frame — as.data.frame.eeg_data","title":"Convert eeg_data to data.frame — as.data.frame.eeg_data","text":"Convert object class eeg_data standard data.frame.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert eeg_data to data.frame — as.data.frame.eeg_data","text":"","code":"# S3 method for class 'eeg_data' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   long = FALSE,   events = FALSE,   coords = FALSE,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert eeg_data to data.frame — as.data.frame.eeg_data","text":"x Object class eeg_data row.names Kept compatibility S3 generic, ignored. optional Kept compatibility S3 generic, ignored. long Convert long format. Defaults FALSE events Include events output. coords Include electrode coordinates output. possible long = TRUE. ... arguments .data.frame commands","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert eeg_data to data.frame — as.data.frame.eeg_data","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_epochs.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert eeg_epochs object to data.frame — as.data.frame.eeg_epochs","title":"Convert eeg_epochs object to data.frame — as.data.frame.eeg_epochs","text":"Convert eeg_epochs object data.frame use whatever packages desire.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_epochs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert eeg_epochs object to data.frame — as.data.frame.eeg_epochs","text":"","code":"# S3 method for class 'eeg_epochs' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   long = FALSE,   events = FALSE,   cond_labels,   coords = TRUE,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_epochs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert eeg_epochs object to data.frame — as.data.frame.eeg_epochs","text":"x Object class eeg_epochs row.names Kept compatability S3 generic, ignored. optional Kept compatability S3 generic, ignored. long Convert long format. Defaults FALSE. events Include events output. Defaults FALSE. Currently ignored. cond_labels Add column tagging epochs events matching labels. Deprecated. Metainfo epochs structure now added automatically. coords Include electrode coordinates output. Ignored long == FALSE. ... arguments .data.frame commands","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_epochs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert eeg_epochs object to data.frame — as.data.frame.eeg_epochs","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_evoked.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert eeg_evoked object to data frame — as.data.frame.eeg_evoked","title":"Convert eeg_evoked object to data frame — as.data.frame.eeg_evoked","text":"Convert eeg_evoked object data frame","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_evoked.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert eeg_evoked object to data frame — as.data.frame.eeg_evoked","text":"","code":"# S3 method for class 'eeg_evoked' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   long = FALSE,   coords = TRUE,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_evoked.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert eeg_evoked object to data frame — as.data.frame.eeg_evoked","text":"x Object class eeg_evoked row.names Kept compatability S3 generic, ignored. optional Kept compatability S3 generic, ignored. long Convert long format. Defaults FALSE coords include electrode coordinates output. Ignored long = FALSE. ... arguments .data.frame commands","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_evoked.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert eeg_evoked object to data frame — as.data.frame.eeg_evoked","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert eeg_lm to data.frame — as.data.frame.eeg_lm","title":"Convert eeg_lm to data.frame — as.data.frame.eeg_lm","text":"Convert object class eeg_data standard data.frame.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert eeg_lm to data.frame — as.data.frame.eeg_lm","text":"","code":"# S3 method for class 'eeg_lm' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   long = FALSE,   coords = TRUE,   values = c(\"coefficients\", \"std_err\", \"t_stats\", \"r_sq\"),   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert eeg_lm to data.frame — as.data.frame.eeg_lm","text":"x Object class eeg_lm row.names Kept compatibility S3 generic, ignored. optional Kept compatibility S3 generic, ignored. long Convert long format. Defaults FALSE. coords Include electrode coordinates output. possible long = TRUE. values Defaults \"coefficients\", returning fitted coefficient values. ... arguments .data.frame commands","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_lm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert eeg_lm to data.frame — as.data.frame.eeg_lm","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert eeg_stats objects to data frames — as.data.frame.eeg_stats","title":"Convert eeg_stats objects to data frames — as.data.frame.eeg_stats","text":"Convert eeg_stats objects data frames","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert eeg_stats objects to data frames — as.data.frame.eeg_stats","text":"","code":"# S3 method for class 'eeg_stats' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   long = FALSE,   coords = FALSE,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert eeg_stats objects to data frames — as.data.frame.eeg_stats","text":"x Object class eeg_stats row.names Kept compatability S3 generic, ignored. optional Kept compatability S3 generic, ignored. long Convert long format. Defaults FALSE. coords Include electrode coordinates output (ignored long = FALSE) ... arguments .data.frame commands","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_stats.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert eeg_stats objects to data frames — as.data.frame.eeg_stats","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_tfr.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert eeg_tfr objects to a data.frame — as.data.frame.eeg_tfr","title":"Convert eeg_tfr objects to a data.frame — as.data.frame.eeg_tfr","text":"Convert eeg_tfr objects data.frame","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_tfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert eeg_tfr objects to a data.frame — as.data.frame.eeg_tfr","text":"","code":"# S3 method for class 'eeg_tfr' as.data.frame(x, row.names = NULL, optional = FALSE, long = FALSE, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_tfr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert eeg_tfr objects to a data.frame — as.data.frame.eeg_tfr","text":"x Object class eeg_tfr row.names Kept compatability S3 generic, ignored. optional Kept compatability S3 generic, ignored. long Convert long format. Defaults FALSE. ... arguments .data.frame commands","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_tfr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert eeg_tfr objects to a data.frame — as.data.frame.eeg_tfr","text":"data.frame tibble","code":""},{"path":"https://craddm.github.io/eegUtils/reference/as.data.frame.eeg_tfr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert eeg_tfr objects to a data.frame — as.data.frame.eeg_tfr","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/average_tf.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for averaging over epochs for eeg_tfr objects. — average_tf","title":"Internal function for averaging over epochs for eeg_tfr objects. — average_tf","text":"Internal function averaging epochs eeg_tfr objects.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/average_tf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for averaging over epochs for eeg_tfr objects. — average_tf","text":"","code":"average_tf(data, cols = NULL, weighted, verbose)"},{"path":"https://craddm.github.io/eegUtils/reference/average_tf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function for averaging over epochs for eeg_tfr objects. — average_tf","text":"data data average weighted Calculate weighted means TRUE (possible!)","code":""},{"path":"https://craddm.github.io/eegUtils/reference/browse_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Browse EEG data — browse_data","title":"Browse EEG data — browse_data","text":"Shiny gadget browsing EEG data ICA decompositions interactively. EEG data (epoched continuous), data can viewed butterfly plot (electrodes overlaid) individual traces (electrodes \"stacked\"). eeg_ICA objects, instead shown composite multiple properties decomposition - topography, ERP image, ERP, power spectral density plot 4-50 Hz.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/browse_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Browse EEG data — browse_data","text":"","code":"browse_data(data, ...)  # S3 method for class 'eeg_ICA' browse_data(data, ...)  # S3 method for class 'eeg_data' browse_data(data, sig_length = 5, downsample = TRUE, ...)  # S3 method for class 'eeg_epochs' browse_data(data, sig_length = 5, downsample = FALSE, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/browse_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Browse EEG data — browse_data","text":"data eeg_data, eeg_epochs, eeg_ICA object plotted. ... parameters passed browsing functions. sig_length Length signal plotted initially (seconds continuous, epochs epoched). downsample works eeg_data eeg_epochs objects. Reduces size data plotting every 4th point, speeding plotting considerably. Defaults TRUE eeg_data, FALSE eeg_epochs","code":""},{"path":"https://craddm.github.io/eegUtils/reference/browse_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Browse EEG data — browse_data","text":"character vector component names selected rejection.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/browse_data.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Browse EEG data — browse_data","text":"browse_data(eeg_ICA): View eeg_ICA component properties browse_data(eeg_data): Browse continuous EEG data. browse_data(eeg_epochs): Browse epoched EEG data.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/browse_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Browse EEG data — browse_data","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/bva_elecs.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert BVA spherical locations — bva_elecs","title":"Convert BVA spherical locations — bva_elecs","text":"Reads BrainVoyager spherical electrode locations converts Cartesian 3D 2D projections.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/bva_elecs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert BVA spherical locations — bva_elecs","text":"","code":"bva_elecs(chan_info, radius = 85)"},{"path":"https://craddm.github.io/eegUtils/reference/bva_elecs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert BVA spherical locations — bva_elecs","text":"chan_info data.frame containing electrodes radius Head radius millimetres","code":""},{"path":"https://craddm.github.io/eegUtils/reference/calc_max_elec.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate maximum electrode distance from origin. — calc_max_elec","title":"Calculate maximum electrode distance from origin. — calc_max_elec","text":"Calculate maximum electrode distance origin.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/calc_max_elec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate maximum electrode distance from origin. — calc_max_elec","text":"","code":"calc_max_elec(data)"},{"path":"https://craddm.github.io/eegUtils/reference/calculate_sem.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the standard error of the mean — calculate_sem","title":"Calculate the standard error of the mean — calculate_sem","text":"Calculate standard error mean","code":""},{"path":"https://craddm.github.io/eegUtils/reference/calculate_sem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the standard error of the mean — calculate_sem","text":"","code":"calculate_sem(data, time_lim = NULL, conditions = NULL)"},{"path":"https://craddm.github.io/eegUtils/reference/calculate_sem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the standard error of the mean — calculate_sem","text":"data eegUtils object time_lim vector time-points calculate SEM . conditions Split calculation across multiple conditions","code":""},{"path":"https://craddm.github.io/eegUtils/reference/cart_to_spherical.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert 3D Cartesian coordinates to spherical coordinates — cart_to_spherical","title":"Convert 3D Cartesian coordinates to spherical coordinates — cart_to_spherical","text":"Output theta phi degrees.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/cart_to_spherical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert 3D Cartesian coordinates to spherical coordinates — cart_to_spherical","text":"","code":"cart_to_spherical(xyz_coords)"},{"path":"https://craddm.github.io/eegUtils/reference/cart_to_spherical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert 3D Cartesian coordinates to spherical coordinates — cart_to_spherical","text":"xyz_coords 3D Cartesian electrode locations","code":""},{"path":"https://craddm.github.io/eegUtils/reference/channel_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve signal/channel names — channel_names","title":"Retrieve signal/channel names — channel_names","text":"Get names signals element eegUtils objects.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/channel_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve signal/channel names — channel_names","text":"","code":"channel_names(.data)"},{"path":"https://craddm.github.io/eegUtils/reference/channel_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve signal/channel names — channel_names","text":".data eegUtils object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/channel_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve signal/channel names — channel_names","text":"","code":"channel_names(demo_epochs) #>  [1] \"A5\"  \"A13\" \"A21\" \"A29\" \"A31\" \"B5\"  \"B6\"  \"B8\"  \"B16\" \"B18\" \"B26\""},{"path":"https://craddm.github.io/eegUtils/reference/channel_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Channel statistics — channel_stats","title":"Channel statistics — channel_stats","text":"Channel statistics","code":""},{"path":"https://craddm.github.io/eegUtils/reference/channel_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Channel statistics — channel_stats","text":"","code":"channel_stats(data, ...)  # S3 method for class 'eeg_data' channel_stats(data, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/channel_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Channel statistics — channel_stats","text":"data eeg_data eeg_epochs object. ... parameters passed functions.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/channel_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Channel statistics — channel_stats","text":"data frame statistics channel.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/channel_stats.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Channel statistics — channel_stats","text":"channel_stats(eeg_data): Calculate channel statistics eeg_data objects.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/channel_stats.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Channel statistics — channel_stats","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/channel_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Channel statistics — channel_stats","text":"","code":"channel_stats(demo_epochs) #>     electrode      means      sds variance  kurtosis   minmax #> A5         A5 -2.0201400 5.872054 34.48102 0.8110859 55.99172 #> A13       A13 -0.7884497 3.922905 15.38918 0.8728392 39.18374 #> A21       A21  3.2864957 6.088564 37.07061 1.4236771 68.28431 #> A29       A29  4.1693878 7.781989 60.55936 0.1267196 57.26694 #> A31       A31  1.0943630 5.607857 31.44806 0.8183168 47.41699 #> B5         B5 -2.1856578 7.477209 55.90865 1.0617711 73.42224 #> B6         B6 -2.8632122 5.963742 35.56622 0.3695797 46.77692 #> B8         B8 -1.6502435 6.782543 46.00289 0.9660805 66.80369 #> B16       B16 -1.4560545 5.200351 27.04365 2.0987794 51.42989 #> B18       B18 -0.4696431 5.460927 29.82173 2.3864875 63.04594 #> B26       B26  2.8831543 6.146965 37.78518 0.7989692 56.77661"},{"path":"https://craddm.github.io/eegUtils/reference/channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify channel information — channels","title":"Modify channel information — channels","text":"Get set contents channel information inside eegUtils objects.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify channel information — channels","text":"","code":"channels(.data)  channels(.data) <- value"},{"path":"https://craddm.github.io/eegUtils/reference/channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify channel information — channels","text":".data eegUtils object view value Value replace chan_info structure .","code":""},{"path":"https://craddm.github.io/eegUtils/reference/channels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Modify channel information — channels","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify channel information — channels","text":"","code":"channels(demo_epochs) #> # A tibble: 11 × 9 #>    electrode radius theta   phi cart_x cart_y cart_z     x     y #>    <chr>      <dbl> <dbl> <dbl>  <dbl>  <dbl>  <dbl> <dbl> <dbl> #>  1 A5             1   -60   -51  -46.3   57.2  42.5  -37.8  46.6 #>  2 A13            1   -46     0  -61.1    0    59.0  -46     0   #>  3 A21            1   -60    51  -46.3  -57.2  42.5  -37.8 -46.6 #>  4 A29            1    92   -90    0    -85.0  -2.97   0   -92   #>  5 A31            1    46   -90    0    -61.1  59.0    0   -46   #>  6 B5             1    69    90    0     79.4  30.5    0    69   #>  7 B6             1    46    90    0     61.1  59.0    0    46   #>  8 B8             1    60    51   46.3   57.2  42.5   37.8  46.6 #>  9 B16            1     0     0    0      0    85      0     0   #> 10 B18            1    46     0   61.1    0    59.0   46     0   #> 11 B26            1    60   -51   46.3  -57.2  42.5   37.8 -46.6"},{"path":"https://craddm.github.io/eegUtils/reference/check_ci_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if chan_info is in old format — check_ci_str","title":"Check if chan_info is in old format — check_ci_str","text":"Check chan_info old format","code":""},{"path":"https://craddm.github.io/eegUtils/reference/check_ci_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if chan_info is in old format — check_ci_str","text":"","code":"check_ci_str(chan_info)"},{"path":"https://craddm.github.io/eegUtils/reference/check_ci_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if chan_info is in old format — check_ci_str","text":"chan_info Channel info structure","code":""},{"path":"https://craddm.github.io/eegUtils/reference/check_classes.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that all classes in a list match — check_classes","title":"Check that all classes in a list match — check_classes","text":"Check classes list match","code":""},{"path":"https://craddm.github.io/eegUtils/reference/check_classes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that all classes in a list match — check_classes","text":"","code":"check_classes(data)"},{"path":"https://craddm.github.io/eegUtils/reference/check_classes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that all classes in a list match — check_classes","text":"data list objects check","code":""},{"path":"https://craddm.github.io/eegUtils/reference/check_epochs.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that all objects have the same number of trials — check_epochs","title":"Check that all objects have the same number of trials — check_epochs","text":"Check objects number trials","code":""},{"path":"https://craddm.github.io/eegUtils/reference/check_epochs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that all objects have the same number of trials — check_epochs","text":"","code":"check_epochs(data)"},{"path":"https://craddm.github.io/eegUtils/reference/check_epochs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that all objects have the same number of trials — check_epochs","text":"data list objects check","code":""},{"path":"https://craddm.github.io/eegUtils/reference/check_q.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the q factor for downsampling — check_q","title":"Validate the q factor for downsampling — check_q","text":"Validate q factor downsampling","code":""},{"path":"https://craddm.github.io/eegUtils/reference/check_q.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the q factor for downsampling — check_q","text":"","code":"check_q(q, srate)"},{"path":"https://craddm.github.io/eegUtils/reference/check_q.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the q factor for downsampling — check_q","text":"q Q factor srate Sampling rate","code":""},{"path":"https://craddm.github.io/eegUtils/reference/check_timings.html","id":null,"dir":"Reference","previous_headings":"","what":"Check consistency of event and timing tables — check_timings","title":"Check consistency of event and timing tables — check_timings","text":"Check consistency event timing tables","code":""},{"path":"https://craddm.github.io/eegUtils/reference/check_timings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check consistency of event and timing tables — check_timings","text":"","code":"check_timings(.data, verbose = TRUE)  # S3 method for class 'eeg_data' check_timings(.data, verbose = TRUE)  # S3 method for class 'eeg_epochs' check_timings(.data, verbose = TRUE)"},{"path":"https://craddm.github.io/eegUtils/reference/check_timings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check consistency of event and timing tables — check_timings","text":"verbose Print informative messages data eeg_data eeg_epochs object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/circ_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate circular mean — circ_mean","title":"Calculate circular mean — circ_mean","text":"Calculates circular mean vector phase angles. Input radians.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/circ_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate circular mean — circ_mean","text":"","code":"circ_mean(data)"},{"path":"https://craddm.github.io/eegUtils/reference/circ_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate circular mean — circ_mean","text":"data vector phase angles radians","code":""},{"path":"https://craddm.github.io/eegUtils/reference/circ_rad_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate circle as radians — circ_rad_fun","title":"Generate circle as radians — circ_rad_fun","text":"Generate circle radians","code":""},{"path":"https://craddm.github.io/eegUtils/reference/circ_rad_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate circle as radians — circ_rad_fun","text":"","code":"circ_rad_fun()"},{"path":"https://craddm.github.io/eegUtils/reference/compute_ITC.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate inter-trial coherence — compute_itc","title":"Calculate inter-trial coherence — compute_itc","text":"Calculates inter-trial coherence (ITC), measure phase consistency across single trial data. Input data must provided complex Fourier coefficients within eeg_tfr object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_ITC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate inter-trial coherence — compute_itc","text":"","code":"compute_itc(data)"},{"path":"https://craddm.github.io/eegUtils/reference/compute_ITC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate inter-trial coherence — compute_itc","text":"data eeg_tfr object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_ITC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate inter-trial coherence — compute_itc","text":"eeg_tfr object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_csd.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to Current Source Density — compute_csd","title":"Convert to Current Source Density — compute_csd","text":"Convert eeg_data eeg_epochs object using Current Source Densities. command uses spherical spline algorithm (Perrin et al., 1989) compute scalp surface Laplacian/current source density estimates scalp potentials, reference-free measure electrical activity emphasises local spatial features","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_csd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to Current Source Density — compute_csd","text":"","code":"compute_csd(data, ...)  # Default S3 method compute_csd(data, ...)  # S3 method for class 'eeg_data' compute_csd(data, m = 4, smoothing = 1e-05, scaling = 1, ...)  # S3 method for class 'eeg_epochs' compute_csd(data, m = 4, smoothing = 1e-05, scaling = 1, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/compute_csd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to Current Source Density — compute_csd","text":"data eeg_data eeg_epochs object ... parameters m smoothing constraint (higher = rigid splines) smoothing lambda constant. Added Defaults 1e-05 scaling Default scaling (1) uV / m^2. Note depends units electrode co-ordinates.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_csd.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Convert to Current Source Density — compute_csd","text":"compute_csd(default): Default method detect unknown classes. compute_csd(eeg_data): Transform eeg_data CSD compute_csd(eeg_epochs): Transform eeg_data CSD","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_csd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert to Current Source Density — compute_csd","text":"Perrin, F., Pernier, J., Bertrand, O., Echallier, J.F. (1989). Spherical splines scalp potential current density mapping. Electroencephalography Clinical Neurophysiology, 72(2), 184-187. PMID: 2464490 Kayser, J., Tenke, C.E. (2006). Principal components analysis Laplacian waveforms generic method identifying ERP generator patterns: . Evaluation auditory oddball tasks. Clinical Neurophysiology, 117(2), 348-368. Kayser, J., Tenke, C.E. (2015). Issues considerations using scalp surface Laplacian EEG/ERP research: tutorial review. International Journal Psycholphysiology, 97(3), 189-209","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_csd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert to Current Source Density — compute_csd","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_csd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to Current Source Density — compute_csd","text":"","code":"csd_epochs <- compute_csd(demo_epochs) plot_butterfly(csd_epochs) #> Creating epochs based on combinations of variables: epoch_label participant_id    # Compare the topographies of the CSD vs average referenced data topoplot(demo_epochs, c(.2, .21)) #> Creating epochs based on combinations of variables: epoch_label participant_id  #> Using electrode locations from data. #> Plotting head r 95 mm  topoplot(csd_epochs, c(.2, .21)) #> Creating epochs based on combinations of variables: epoch_label participant_id  #> Using electrode locations from data. #> Plotting head r 95 mm"},{"path":"https://craddm.github.io/eegUtils/reference/compute_g.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the g function for two sets of channel locations on the unit sphere. — compute_g","title":"Compute the g function for two sets of channel locations on the unit sphere. — compute_g","text":"Compute g function two sets channel locations unit sphere.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_g.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the g function for two sets of channel locations on the unit sphere. — compute_g","text":"","code":"compute_g(xyz_coords, xyz_elecs, m = 4, iter = 7)"},{"path":"https://craddm.github.io/eegUtils/reference/compute_g.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the g function for two sets of channel locations on the unit sphere. — compute_g","text":"xyz_coords set electrode locations unit sphere. xyz_elecs set electrode locations unit sphere. m Interpolation constant (higher = less flexible) iter Number iterations calculations","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_g.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute the g function for two sets of channel locations on the unit sphere. — compute_g","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the h function for two sets of channel locations on the unit sphere. — compute_h","title":"Compute the h function for two sets of channel locations on the unit sphere. — compute_h","text":"Compute h function two sets channel locations unit sphere.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the h function for two sets of channel locations on the unit sphere. — compute_h","text":"","code":"compute_h(xyz_coords, xyz_elecs, m = 4, iter = 50)"},{"path":"https://craddm.github.io/eegUtils/reference/compute_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the h function for two sets of channel locations on the unit sphere. — compute_h","text":"xyz_coords set electrode locations unit sphere. xyz_elecs set electrode locations unit sphere. m Interpolation constant (higher = less flexible) iter iterations calculations","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_h.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute the h function for two sets of channel locations on the unit sphere. — compute_h","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_psd.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute power spectral density — compute_psd","title":"Compute power spectral density — compute_psd","text":"compute_psd returns PSD calculated using Welch's method every channel data. output microvolts-squared divided Hertz - \\(\\muV^2 / Hz\\). object multiple epochs, perform Welch's FFT separately epoch average afterwards.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_psd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute power spectral density — compute_psd","text":"","code":"compute_psd(data, ...)  # S3 method for class 'eeg_data' compute_psd(   data,   seg_length = NULL,   noverlap = NULL,   n_fft = NULL,   method = \"Welch\",   demean = TRUE,   verbose = TRUE,   ... )  # S3 method for class 'eeg_epochs' compute_psd(   data,   seg_length = NULL,   noverlap = NULL,   n_fft = 256,   method = \"Welch\",   keep_trials = TRUE,   demean = TRUE,   verbose = TRUE,   ... )  # S3 method for class 'eeg_evoked' compute_psd(   data,   seg_length = NULL,   noverlap = NULL,   n_fft = 256,   method = \"Welch\",   demean = TRUE,   verbose = TRUE,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/compute_psd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute power spectral density — compute_psd","text":"data Data plotted. Accepts objects class eeg_data ... parameters passed specific methods seg_length Length rolling data segments. Defaults n_fft. Must <= n_fft. noverlap Number (sampling) points overlap segments. Must <= seg_length. n_fft Length FFT calculated sampling points. See details. method Defaults \"Welch\". method currently implemented. demean Remove channel/epoch means. TRUE default. verbose Print informative messages. TRUE default. keep_trials Include FFT every trial output, average FALSE.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_psd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute power spectral density — compute_psd","text":"Currently, data frame PSD channel separately.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_psd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute power spectral density — compute_psd","text":"Welch's FFT splits data multiple segments, calculates FFT separately segment, averages segments. segment windowed Hanning window counter spectral leakage. epoched data, Welch's FFT calculated separately trial. number sampling points used FFT can specified using n_fft. n_fft defaults 256 sampling points eeg_epochs data, minimum 2048 length signal continuous eeg_data. seg_length defaults n_fft, must less equal . noverlap specifies amount overlap windows sampling points. NULL, defaults 50\\","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_psd.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Compute power spectral density — compute_psd","text":"compute_psd(eeg_data): Compute PSD eeg_data object compute_psd(eeg_epochs): Compute PSD eeg_epochs object compute_psd(eeg_evoked): Compute PSD eeg_evoked object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_psd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute power spectral density — compute_psd","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_psd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute power spectral density — compute_psd","text":"","code":"out <- compute_psd(demo_epochs) #> Removing channel means per epoch... #> Computing Power Spectral Density using Welch's method. #> FFT length: 256 #> Segment length: 84 #> Overlapping points: 42 (50% overlap)  out <- compute_psd(demo_epochs, n_fft = 256, seg_length = 128) #> Removing channel means per epoch... #> Computing Power Spectral Density using Welch's method. #> FFT length: 256 #> Segment length: 84 #> Overlapping points: 42 (50% overlap)"},{"path":"https://craddm.github.io/eegUtils/reference/compute_tfr.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Time-Frequency representation of EEG data — compute_tfr","title":"Compute Time-Frequency representation of EEG data — compute_tfr","text":"function creates time frequency representation EEG time series data. Currently, possible use either Morlet wavelets Hanning tapers decomposition, uses convolution frequency domain.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_tfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Time-Frequency representation of EEG data — compute_tfr","text":"","code":"compute_tfr(data, ...)  # Default S3 method compute_tfr(data, ...)  # S3 method for class 'eeg_epochs' compute_tfr(   data,   method = \"morlet\",   foi,   n_freq,   spacing = \"linear\",   n_cycles = 7,   keep_trials = FALSE,   output = \"power\",   downsample = 1,   trim_edges = TRUE,   verbose = TRUE,   ... )  # S3 method for class 'eeg_evoked' compute_tfr(   data,   method = \"morlet\",   foi,   n_freq,   spacing = \"linear\",   n_cycles = 7,   keep_trials = FALSE,   output = \"power\",   downsample = 1,   trim_edges = TRUE,   verbose = TRUE,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/compute_tfr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Time-Frequency representation of EEG data — compute_tfr","text":"data object class eeg_epochs. ... TFR parameters method Time-frequency analysis method. Defaults \"morlet\". foi Frequencies interest. Scalar character vector lowest highest frequency resolve. n_freq Number frequencies resolved. Must integer number frequencies. spacing Use \"linear\" \"log\" spacing frequency vector number cycles. n_cycles Number cycles frequency. single integer, use constant number cycles frequency. character vector length 2, number cycles scale frequency minimum maximum. keep_trials Keep single trials average returning. Defaults FALSE. output Sets whether output power, phase, fourier coefficients. downsample Downsampling factor. Integer. Selects every n samples performing time-frequency analysis full sampling rate data. trim_edges Remove edges time-frequency representation avoid edge effects overlap wavelet timepoints outside epochs. Defaults TRUE. verbose Print informative messages console.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_tfr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Time-Frequency representation of EEG data — compute_tfr","text":"object class eeg_tfr","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_tfr.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Compute Time-Frequency representation of EEG data — compute_tfr","text":"compute_tfr(default): Default method compute_tfr compute_tfr(eeg_epochs): Default method compute_tfr compute_tfr(eeg_evoked): Method eeg_evoked objects.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_tfr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute Time-Frequency representation of EEG data — compute_tfr","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/compute_tfr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Time-Frequency representation of EEG data — compute_tfr","text":"","code":"out <- compute_tfr(demo_epochs, method = \"morlet\", foi = c(4, 30), n_freq = 10, n_cycles = 3) #> Computing TFR using Morlet wavelet convolution #> Output frequencies using linear spacing: 4 6.89 9.78 12.67 15.56 18.44 21.33 24.22 27.11 30 #> Removing channel means per epoch... #> Returning signal averaged over all trials. out #> Epoched EEG TFR data #>  #> Frequency range\t\t:\t 4 6.89 9.78 12.67 15.56 18.44 21.33 24.22 27.11 30  #> Number of channels\t:\t 11  #> Electrode names\t\t:\t A5 A13 A21 A29 A31 B5 B6 B8 B16 B18 B26  #> Number of epochs\t:\t 1  #> Epoch limits\t\t:\t -0.197 - 0.451 seconds #> Sampling rate\t\t:\t 128  Hz out$freq_info$morlet_resolution #>    frequency   sigma_f    sigma_t n_cycles #> 1   4.000000  1.333333 0.11936621        3 #> 2   6.888889  2.296296 0.06930941        3 #> 3   9.777778  3.259259 0.04883163        3 #> 4  12.666667  4.222222 0.03769459        3 #> 5  15.555556  5.185185 0.03069417        3 #> 6  18.444444  6.148148 0.02588665        3 #> 7  21.333333  7.111111 0.02238116        3 #> 8  24.222222  8.074074 0.01971185        3 #> 9  27.111111  9.037037 0.01761141        3 #> 10 30.000000 10.000000 0.01591549        3 out <- compute_tfr(demo_epochs, method = \"morlet\", foi = c(4, 30),  n_freq = 10, n_cycles = c(3, 10)) #> Computing TFR using Morlet wavelet convolution #> Output frequencies using linear spacing: 4 6.89 9.78 12.67 15.56 18.44 21.33 24.22 27.11 30 #> Removing channel means per epoch... #> Returning signal averaged over all trials. out$freq_info$morlet_resolution #>    frequency  sigma_f    sigma_t  n_cycles #> 1   4.000000 1.333333 0.11936621  3.000000 #> 2   6.888889 1.823529 0.08727852  3.777778 #> 3   9.777778 2.146341 0.07415173  4.555556 #> 4  12.666667 2.375000 0.06701261  5.333333 #> 5  15.555556 2.545455 0.06252516  6.111111 #> 6  18.444444 2.677419 0.05944341  6.888889 #> 7  21.333333 2.782609 0.05719631  7.666667 #> 8  24.222222 2.868421 0.05548521  8.444444 #> 9  27.111111 2.939759 0.05413877  9.222222 #> 10 30.000000 3.000000 0.05305165 10.000000 plot_tfr(out)  out <- compute_tfr(demo_epochs, method = \"morlet\", foi = c(4, 30),  n_freq = 10, n_cycles = c(3, 10), trim_edges = FALSE) #> Computing TFR using Morlet wavelet convolution #> Output frequencies using linear spacing: 4 6.89 9.78 12.67 15.56 18.44 21.33 24.22 27.11 30 #> Removing channel means per epoch... #> Returning signal averaged over all trials. plot_tfr(out)"},{"path":"https://craddm.github.io/eegUtils/reference/conv_to_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to 3d matrix — conv_to_mat","title":"Convert to 3d matrix — conv_to_mat","text":"Convert 3d matrix","code":""},{"path":"https://craddm.github.io/eegUtils/reference/conv_to_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to 3d matrix — conv_to_mat","text":"","code":"conv_to_mat(data, ...)  # S3 method for class 'eeg_epochs' conv_to_mat(data, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/conv_to_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to 3d matrix — conv_to_mat","text":"data data converted ... additional parameters","code":""},{"path":"https://craddm.github.io/eegUtils/reference/conv_to_mat.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Convert to 3d matrix — conv_to_mat","text":"conv_to_mat(eeg_epochs): Convert eeg_epochs 3D matrix","code":""},{"path":"https://craddm.github.io/eegUtils/reference/convert_tfr.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Fourier output to power, phase, or ITC as requested. — convert_tfr","title":"Convert Fourier output to power, phase, or ITC as requested. — convert_tfr","text":"Convert Fourier output power, phase, ITC requested.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/convert_tfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Fourier output to power, phase, or ITC as requested. — convert_tfr","text":"","code":"convert_tfr(data, output)"},{"path":"https://craddm.github.io/eegUtils/reference/convert_tfr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Fourier output to power, phase, or ITC as requested. — convert_tfr","text":"data Fourier coefficients eeg_tfr output output desired - \"power\", \"phase\"","code":""},{"path":"https://craddm.github.io/eegUtils/reference/convert_to_csd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate current source densities — convert_to_csd","title":"Calculate current source densities — convert_to_csd","text":"Calculate current source densities","code":""},{"path":"https://craddm.github.io/eegUtils/reference/convert_to_csd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate current source densities — convert_to_csd","text":"","code":"convert_to_csd(data, m = 4, smoothing = 1e-05, scaling = 1)"},{"path":"https://craddm.github.io/eegUtils/reference/convert_to_csd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate current source densities — convert_to_csd","text":"data eeg_data object m smoothing constraint (higher = rigid) smoothing lambda constant scaling Default scaling (1) uV / m^2.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/cov_epochs.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance of epoched data — cov_epochs","title":"Covariance of epoched data — cov_epochs","text":"Calculate covariance epoch, average","code":""},{"path":"https://craddm.github.io/eegUtils/reference/cov_epochs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance of epoched data — cov_epochs","text":"","code":"cov_epochs(data)"},{"path":"https://craddm.github.io/eegUtils/reference/cov_epochs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance of epoched data — cov_epochs","text":"data epoched data calculate covariance ","code":""},{"path":"https://craddm.github.io/eegUtils/reference/create_electrode_layout_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot or plotly plot showing electrode positions — create_electrode_layout_plot","title":"Create a ggplot or plotly plot showing electrode positions — create_electrode_layout_plot","text":"Create ggplot plotly plot showing electrode positions","code":""},{"path":"https://craddm.github.io/eegUtils/reference/create_electrode_layout_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot or plotly plot showing electrode positions — create_electrode_layout_plot","text":"","code":"create_electrode_layout_plot(data, interact)"},{"path":"https://craddm.github.io/eegUtils/reference/create_electrode_layout_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot or plotly plot showing electrode positions — create_electrode_layout_plot","text":"data data extract channel locations interact TRUE, use plotly create 3D interactive plot, otherwise create 2D ggplot.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/create_erpimage.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for creating an ERP image — create_erpimage","title":"Function for creating an ERP image — create_erpimage","text":"Function creating ERP image","code":""},{"path":"https://craddm.github.io/eegUtils/reference/create_erpimage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for creating an ERP image — create_erpimage","text":"","code":"create_erpimage(data, electrode, smoothing, clim, interpolate = FALSE, na.rm)"},{"path":"https://craddm.github.io/eegUtils/reference/create_erpimage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for creating an ERP image — create_erpimage","text":"data Data frame plotted. Requires amplitude column. electrode electrode generate ERP image. smoothing Number trials smooth generating image clim Character vector min max values plotting colour range. e.g. c(-5,5). Defaults min max. interpolate Turn geom_raster() interpolation smoother images. na.rm Remove trials NA amplitudes smoothing. Defaults TRUE.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/create_psd_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a PSD plot — create_psd_plot","title":"Create a PSD plot — create_psd_plot","text":"Create PSD plot","code":""},{"path":"https://craddm.github.io/eegUtils/reference/create_psd_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a PSD plot — create_psd_plot","text":"","code":"create_psd_plot(psd_out, freq_range, chan_names)"},{"path":"https://craddm.github.io/eegUtils/reference/create_psd_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a PSD plot — create_psd_plot","text":"psd_out PSD plot. freq_range Frequency range plot.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/create_psd_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a PSD plot — create_psd_plot","text":"ggplot showing power spectral density.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/create_tc.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for creation of timecourse plots — create_tc","title":"Internal function for creation of timecourse plots — create_tc","text":"Internal function creation timecourse plots","code":""},{"path":"https://craddm.github.io/eegUtils/reference/create_tc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for creation of timecourse plots — create_tc","text":"","code":"create_tc(   data,   add_CI,   colour,   quantity = amplitude,   mapping = NULL,   facets = NULL )"},{"path":"https://craddm.github.io/eegUtils/reference/create_tc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function for creation of timecourse plots — create_tc","text":"data data frame plotted add_CI whether add confidence intervals colour whether use colour quantity name column/quantity plot mapping ggplot2 aes() mapping.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/cycle_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate cycles — cycle_calc","title":"Calculate cycles — cycle_calc","text":"helper function calculating appropriate min-max cycles fixed time window/frequency resolution use compute_tfr. analyses may wish keep fixed frequency resolution across range analysed, requires using fixed time window. compute_tfr expects minimum maximum number cycles supplied. Use function calculate equivalent number cycles frequency.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/cycle_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate cycles — cycle_calc","text":"","code":"cycle_calc(time_win, frex)"},{"path":"https://craddm.github.io/eegUtils/reference/cycle_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate cycles — cycle_calc","text":"time_win Time window seconds. frex Frequencies interest.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/cycle_calc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate cycles — cycle_calc","text":"number cycles frequency interest","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/reference/cycle_calc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate cycles — cycle_calc","text":"","code":"cycle_calc(.5, seq(3, 30, length.out = 10)) #>  [1]  1.5  3.0  4.5  6.0  7.5  9.0 10.5 12.0 13.5 15.0 no_scale_tfr <- compute_tfr(demo_epochs, foi = c(3, 30),  n_cycles = range(cycle_calc(0.5, seq(3, 30, length.out = 10))),   n_freq = 10) #> Computing TFR using Morlet wavelet convolution #> Output frequencies using linear spacing: 3 6 9 12 15 18 21 24 27 30 #> Removing channel means per epoch... #> Returning signal averaged over all trials."},{"path":"https://craddm.github.io/eegUtils/reference/deg2rad.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert degrees to radians — deg2rad","title":"Convert degrees to radians — deg2rad","text":"Convert degrees radians","code":""},{"path":"https://craddm.github.io/eegUtils/reference/deg2rad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert degrees to radians — deg2rad","text":"","code":"deg2rad(x)"},{"path":"https://craddm.github.io/eegUtils/reference/deg2rad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert degrees to radians — deg2rad","text":"x Degrees convert","code":""},{"path":"https://craddm.github.io/eegUtils/reference/demo_epochs.html","id":null,"dir":"Reference","previous_headings":"","what":"A demo eeg_epochs dataset — demo_epochs","title":"A demo eeg_epochs dataset — demo_epochs","text":"small dataset 11 electrodes 80 epochs used demonstrating features eegUtils package.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/demo_epochs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A demo eeg_epochs dataset — demo_epochs","text":"","code":"demo_epochs"},{"path":"https://craddm.github.io/eegUtils/reference/demo_epochs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A demo eeg_epochs dataset — demo_epochs","text":"eeg_epochs object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/demo_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"A demo eeg_epochs dataset — demo_spatial","title":"A demo eeg_epochs dataset — demo_spatial","text":"small dataset 23 electrodes 80 epochs used demonstrating features eegUtils package. part recording visual spatial cueing task.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/demo_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A demo eeg_epochs dataset — demo_spatial","text":"","code":"demo_spatial"},{"path":"https://craddm.github.io/eegUtils/reference/demo_spatial.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A demo eeg_epochs dataset — demo_spatial","text":"eeg_epochs object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/downsample_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample the events table — downsample_events","title":"Downsample the events table — downsample_events","text":"Downsample events table","code":""},{"path":"https://craddm.github.io/eegUtils/reference/downsample_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample the events table — downsample_events","text":"","code":"downsample_events(timings, events, srate, q)"},{"path":"https://craddm.github.io/eegUtils/reference/downsample_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample the events table — downsample_events","text":"timings timings data events events table downsample srate sampling rate q downsampling factor","code":""},{"path":"https://craddm.github.io/eegUtils/reference/downsample_events.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Downsample the events table — downsample_events","text":"Matt Craddock matt@craddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/drop_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop points before downsampling — drop_points","title":"Drop points before downsampling — drop_points","text":"Drop points downsampling","code":""},{"path":"https://craddm.github.io/eegUtils/reference/drop_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop points before downsampling — drop_points","text":"","code":"drop_points(data, data_length)"},{"path":"https://craddm.github.io/eegUtils/reference/drop_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop points before downsampling — drop_points","text":"data data downsampled data_length number points drop","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eegUtils-package.html","id":null,"dir":"Reference","previous_headings":"","what":"A package for processing electroencephalographic data — eegUtils-package","title":"A package for processing electroencephalographic data — eegUtils-package","text":"Electroencephalography data processing visualization tools. Includes import functions 'BioSemi' (.BDF), 'Neuroscan' (.CNT), 'Brain Vision Analyzer' (.VHDR), 'EEGLAB' (.set) 'Fieldtrip' (.mat). Many preprocessing functions referencing, epoching, filtering, ICA available. variety visualizations possible, including timecourse topographical plotting.","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/reference/eegUtils-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A package for processing electroencephalographic data — eegUtils-package","text":"Maintainer: Matt Craddock matt@mattcraddock.com contributors: Matti Vuorre mv2521@columbia.edu [contributor] ggplot2 authors (Routines borrowed ggplot2 allow contours drawn topoplots) [copyright holder]","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_ICA.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create an S3 object of class eeg_ICA. — eeg_ICA","title":"Function to create an S3 object of class eeg_ICA. — eeg_ICA","text":"Function create S3 object class eeg_ICA.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_ICA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create an S3 object of class eeg_ICA. — eeg_ICA","text":"","code":"eeg_ICA(   mixing_matrix,   unmixing_matrix,   signals,   timings,   events,   chan_info,   srate,   epochs,   algorithm,   contents )"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_ICA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create an S3 object of class eeg_ICA. — eeg_ICA","text":"mixing_matrix ICA mixing matrix unmixing_matrix ICA unmixing matrix signals ICA component timecourses. timings Unique timepoints remaining data. events event table chan_info data frame containing electrode labels coordinates. srate Sampling rate Hz. numeric value. epochs data frame containing meta-information epochs contained data, participant ID label condition labels epochs. algorithm method used calculate decomposition. contents Whether object contains mixing unmixing matrices (\"weights\") source timecourses well (\"full\")","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_ICA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create an S3 object of class eeg_ICA. — eeg_ICA","text":"object class eeg_ICA.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_ICA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to create an S3 object of class eeg_ICA. — eeg_ICA","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_average.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate averages (e.g. event-related potentials) for single datasets — eeg_average","title":"Calculate averages (e.g. event-related potentials) for single datasets — eeg_average","text":"function used create eeg_evoked object eeg_epochs. default, try keep different conditions data separate using epochs metadata object, thus yielding one average per condition. Alternatively, user can specify averages want using cols argument.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_average.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate averages (e.g. event-related potentials) for single datasets — eeg_average","text":"","code":"eeg_average(data, ...)  # Default S3 method eeg_average(data, ...)  # S3 method for class 'eeg_epochs' eeg_average(data, cols = NULL, verbose = TRUE, ...)  # S3 method for class 'eeg_evoked' eeg_average(data, cols = NULL, weighted = TRUE, verbose = TRUE, ...)  # S3 method for class 'eeg_tfr' eeg_average(data, cols = NULL, weighted = TRUE, verbose = TRUE, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_average.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate averages (e.g. event-related potentials) for single datasets — eeg_average","text":"data eeg_epochs eeg_tfr object. ... arguments passed averaging functions cols Columns epochs structure average group . NULL, default, uses columns epoch column. verbose Print informative messages averaging. Defaults TRUE weighted Produce weighted average epochs, accounts upstream differences number epochs contribute average.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_average.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate averages (e.g. event-related potentials) for single datasets — eeg_average","text":"object class eeg_evoked applied eeg_epochs; eeg_tfr applied eeg_tfr.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_average.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Calculate averages (e.g. event-related potentials) for single datasets — eeg_average","text":"eeg_average(default): Default method averaging EEG objects eeg_average(eeg_epochs): Create evoked data eeg_epochsobjects eeg_average(eeg_evoked): average eeg_evoked object epochs. eeg_average(eeg_tfr): average eeg_tfr object epochs.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_average.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate averages (e.g. event-related potentials) for single datasets — eeg_average","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_average.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate averages (e.g. event-related potentials) for single datasets — eeg_average","text":"","code":"eeg_average(demo_spatial) #> Creating epochs based on combinations of variables: participant_id epoch_labels  #> Evoked EEG data #>  #> Number of channels\t:\t 23  #> Epoch limits\t\t: -0.301 - 0.488 seconds #> Electrode names\t\t:\t Fp1 Fp2 Fz Cz Pz P3 P4 C3 C4 P7 P8 F3 F4 T7 T8 F7 F8 Oz Fpz EXG1 EXG2 EXG3 EXG4  #> Sampling rate\t\t:\t 128  Hz eeg_average(demo_spatial, cols = \"everything\") #> Creating epochs based on combinations of variables: participant_id  #> Evoked EEG data #>  #> Number of channels\t:\t 23  #> Epoch limits\t\t: -0.301 - 0.488 seconds #> Electrode names\t\t:\t Fp1 Fp2 Fz Cz Pz P3 P4 C3 C4 P7 P8 F3 F4 T7 T8 F7 F8 Oz Fpz EXG1 EXG2 EXG3 EXG4  #> Sampling rate\t\t:\t 128  Hz"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine eegUtils objects — eeg_combine","title":"Combine eegUtils objects — eeg_combine","text":"Combine multiple eeg_epochs, eeg_data, eeg_evoked objects single object. function check participant_id entry epochs structure object see objects come single participant multiple participants. data multiple participants, create eeg_group object. individual participants, check duplicate epochs. objects, concatenate objects none found. However, eeg_data instead try correct epoch numbers. Check details advice.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine eegUtils objects — eeg_combine","text":"","code":"eeg_combine(data, ...)  # S3 method for class 'list' eeg_combine(data, ...)  # S3 method for class 'eeg_data' eeg_combine(data, ..., check_timings = TRUE)  # S3 method for class 'eeg_epochs' eeg_combine(data, ..., check_timings = TRUE)  # S3 method for class 'eeg_evoked' eeg_combine(data, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine eegUtils objects — eeg_combine","text":"data eeg_data, eeg_epochs, eeg_evoked object, list objects. ... additional eeg_data eeg_epochs objects check_timings Check whether sample times / epoch numbers continuously ascending; , modify . Useful , example, combining epochs derived multiple recording blocks. Defaults TRUE","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine eegUtils objects — eeg_combine","text":"objects participant_id, returns object class original input object. objects different participant_id numbers, object class eeg_group class original input object.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_combine.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Combine eegUtils objects — eeg_combine","text":"eeg_combine(list): Method combining lists eeg_data eeg_epochs objects. eeg_combine(eeg_data): Method combining eeg_data objects. eeg_combine(eeg_epochs): Method combining eeg_epochs objects eeg_combine(eeg_evoked): Method combining eeg_evoked objects","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_combine.html","id":"combining-eeg-data-objects","dir":"Reference","previous_headings":"","what":"Combining eeg_data objects","title":"Combine eegUtils objects — eeg_combine","text":"Combining eeg_data mainly intended used combining multiple recordings single participant prior subsequent epoching. Thus, check_timings defaults true, function change epochs timing structures resulting combined object single recording. objects combined input order, ensure objects input chronological order.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_combine.html","id":"combining-eeg-epochs-objects","dir":"Reference","previous_headings":"","what":"Combining eeg_epochs objects","title":"Combine eegUtils objects — eeg_combine","text":"several scenarios might wish combine eeg_epochs. example, user may processed continuous data smaller chunks reflecting short recording blocks epoching. wish combine single object. case, epoch numbering reflect chronological ordering needs corrected. check_timings == TRUE, function perform several checks combining objects. First, check duplicate epochs epochs structure object. object unique epochs, objects combined without correction. Thus, combining across separate recordings separate participants elicit correction. user ensure duplicates (e.g. participant one epoch numbered one recording), check missing epochs. , new trial numbering automatically determined, objects combined without manual intervention. missing epochs, check decreases epoch numbers across objects. , epoch numbers timings objects adjusted. Alternatively, user may wish combine eeg_epochs objects different participants entirely different recording sessions participant. case, correction timings epoch numbers desirable. check_timings == TRUE detect skip correction, can explicitly set FALSE.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_combine.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Combine eegUtils objects — eeg_combine","text":"Matt Craddock, matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create an S3 object of class eeg_data. — eeg_data","title":"Function to create an S3 object of class eeg_data. — eeg_data","text":"Function create S3 object class eeg_data.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create an S3 object of class eeg_data. — eeg_data","text":"","code":"eeg_data(   data,   srate,   events = NULL,   chan_info = NULL,   timings = NULL,   continuous,   reference = NULL,   epochs = NULL )"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create an S3 object of class eeg_data. — eeg_data","text":"data Raw data - signals electrodes/channels. srate Sampling rate Hz. events Event table chan_info String character names electrodes. timings Timing information - samples sample /sampling rate. continuous Whether data continuous epoched. (Deprecated.) reference Reference channel information, including names reference channels, excluded channels etc. epochs Information epochs contained data.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to create an S3 object of class eeg_data. — eeg_data","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_decompose.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized eigenvalue decomposition based methods for EEG data — eeg_decompose","title":"Generalized eigenvalue decomposition based methods for EEG data — eeg_decompose","text":"Implements selection Generalized Eigenvalue based decomposition methods EEG signals. Intended isolating oscillations specified frequencies, decomposing channel-based data components reflecting distinct combinations sources oscillatory signals. Currently, spatio-spectral decomposition (Nikulin, Nolte, & Curio, 2011) Rhythmic Entrainment Source Separation (Cohen & Gulbinate, 2017) implemented. key difference two former returns results data-derived spatial filters applied bandpass-filtered \"signal\" data, whereas latter returns results filters applied original, broadband data.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_decompose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized eigenvalue decomposition based methods for EEG data — eeg_decompose","text":"","code":"eeg_decompose(data, ...)  # S3 method for class 'eeg_epochs' eeg_decompose(   data,   sig_range,   noise_range,   method = c(\"ssd\", \"ress\"),   verbose = TRUE,   order = 2,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_decompose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized eigenvalue decomposition based methods for EEG data — eeg_decompose","text":"data eeg_epochs object ... Additional parameters sig_range Vector two inputs, lower upper bounds frequency range interest noise_range Range frequencies considered noise (e.g. bounds flanker frequencies) method Type decomposition apply. Defaults \"ssd\" verbose Informative messages printed console. Defaults TRUE. order Filter order filter applied signal/noise","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_decompose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized eigenvalue decomposition based methods for EEG data — eeg_decompose","text":"eeg_ICA object.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_decompose.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Generalized eigenvalue decomposition based methods for EEG data — eeg_decompose","text":"eeg_decompose(eeg_epochs): method eeg_epochs objects","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_decompose.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized eigenvalue decomposition based methods for EEG data — eeg_decompose","text":"Cohen, M. X., & Gulbinate, R. (2017). Rhythmic entrainment source separation: Optimizing analyses neural responses rhythmic sensory stimulation. NeuroImage, 147, 43-56. https://doi.org/10.1016/j.neuroimage.2016.11.036 Haufe, S., Dähne, S., & Nikulin, V. V. (2014). Dimensionality reduction analysis brain oscillations. NeuroImage, 101, 583–597. https://doi.org/10.1016/j.neuroimage.2014.06.073 Nikulin, V. V., Nolte, G., & Curio, G. (2011). novel method reliable fast extraction neuronal EEG/MEG oscillations basis spatio-spectral decomposition. NeuroImage, 55(4), 1528–1535. https://doi.org/10.1016/j.neuroimage.2011.01.057","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/reference/eeg_decompose.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generalized eigenvalue decomposition based methods for EEG data — eeg_decompose","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_decompose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized eigenvalue decomposition based methods for EEG data — eeg_decompose","text":"","code":"# The default method is Spatio-Spectral Decomposition, which returns # spatially and temporally filtered source timecourses.  decomposed <-    eeg_decompose(demo_epochs,                  sig_range = c(9, 11),                  noise_range = c(8, 12),                  method = \"ssd\") #> Performing ssd... #> Band-pass IIR filter from 9 - 11 Hz #> Effective filter order: 4 (two-pass) #> Removing channel means per epoch... #> Band-pass IIR filter from 8 - 12 Hz #> Effective filter order: 4 (two-pass) #> Removing channel means per epoch... #> Band-stop IIR filter from 8.5 - 11.5 Hz. #> Effective filter order: 4 (two-pass) #> Removing channel means per epoch... #> Input data is not full rank; returning 10components  plot_psd(decomposed) #> Removing channel means per epoch... #> Computing Power Spectral Density using Welch's method. #> FFT length: 256 #> Segment length: 84 #> Overlapping points: 42 (50% overlap)   # We can plot the spatial filters using `topoplot()`  topoplot(decomposed, 1:2) #> Plotting 2 components #> Using electrode locations from data. #> Plotting head r 95 mm   plot_timecourse(decomposed, 1) #> Creating epochs based on combinations of variables: epoch_label participant_id   # method = \"ress\" returns spatially but not temporally filtered timecourses.  with_RESS <-    eeg_decompose(demo_epochs,                  sig_range = c(9, 11),                  noise_range = c(8, 12),                  method = \"ress\") #> Performing ress... #> Band-pass IIR filter from 9 - 11 Hz #> Effective filter order: 4 (two-pass) #> Removing channel means per epoch... #> Band-pass IIR filter from 8 - 12 Hz #> Effective filter order: 4 (two-pass) #> Removing channel means per epoch... #> Band-stop IIR filter from 8.5 - 11.5 Hz. #> Effective filter order: 4 (two-pass) #> Removing channel means per epoch... #> Input data is not full rank; returning 10components  plot_psd(with_RESS) #> Removing channel means per epoch... #> Computing Power Spectral Density using Welch's method. #> FFT length: 256 #> Segment length: 84 #> Overlapping points: 42 (50% overlap)   # The topographical plots are identical to those using \"ssd\", as the  # spatial filters are the same.  topoplot(with_RESS, 1:2) #> Plotting 2 components #> Using electrode locations from data. #> Plotting head r 95 mm   plot_timecourse(with_RESS, 1) #> Creating epochs based on combinations of variables: epoch_label participant_id"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_downsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsampling EEG data — eeg_downsample","title":"Downsampling EEG data — eeg_downsample","text":"Performs low-pass anti-aliasing filtering downsamples EEG data specified factor. wrapper decimate signal package. Note also adjust event table, moving events nearest time remaining downsampling","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_downsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsampling EEG data — eeg_downsample","text":"","code":"eeg_downsample(data, ...)  # S3 method for class 'eeg_data' eeg_downsample(data, q, ...)  # S3 method for class 'eeg_epochs' eeg_downsample(data, q, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_downsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsampling EEG data — eeg_downsample","text":"data eeg_data object downsampled ... Parameters passed functions q Integer factor downsample ","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_downsample.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Downsampling EEG data — eeg_downsample","text":"eeg_downsample(eeg_data): Downsample eeg_data objects eeg_downsample(eeg_epochs): Downsample eeg_epochs objects","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_downsample.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Downsampling EEG data — eeg_downsample","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_downsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsampling EEG data — eeg_downsample","text":"","code":"eeg_downsample(demo_epochs, 2) #> Downsampling from 128Hz to 64Hz. #> Epoched EEG data #>  #> Number of channels\t: 11  #> Number of epochs\t: 80  #> Epoch limits\t\t: -0.197 - 0.443 seconds #> Electrode names\t\t: A5 A13 A21 A29 A31 B5 B6 B8 B16 B18 B26  #> Sampling rate\t\t: 64  Hz #> Reference\t\t: average"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_epochs.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create an S3 object of class eeg_epochs. — eeg_epochs","title":"Function to create an S3 object of class eeg_epochs. — eeg_epochs","text":"Function create S3 object class eeg_epochs.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_epochs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create an S3 object of class eeg_epochs. — eeg_epochs","text":"","code":"eeg_epochs(   data,   srate,   events = NULL,   chan_info = NULL,   timings = NULL,   reference = NULL,   epochs = NULL )"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_epochs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create an S3 object of class eeg_epochs. — eeg_epochs","text":"data Raw data - signals electrodes/channels. srate Sampling rate Hz. events Event table chan_info String character names electrodes. timings Timing information - samples sample /sampling rate. reference Reference channel information, including names reference channels, excluded channels etc. epochs Information epochs contained data.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_epochs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to create an S3 object of class eeg_epochs. — eeg_epochs","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_evoked.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create an S3 object of class ","title":"Function to create an S3 object of class ","text":"Function create S3 object class \"eeg_evoked\"","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_evoked.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create an S3 object of class ","text":"","code":"eeg_evoked(data, chan_info, timings, srate, epochs, reference = NULL, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_evoked.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create an S3 object of class ","text":"data evoked data chan_info Electrode locations etc timings vector timepoints ... parameters","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_evoked.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to create an S3 object of class ","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter EEG data — eeg_filter","title":"Filter EEG data — eeg_filter","text":"Perform IIR FIR filtering input EEG data class eeg_data eeg_epochs. WARNING: epoched data, epoch boundaries currently ignored, can result minor edge artifacts.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter EEG data — eeg_filter","text":"","code":"eeg_filter(data, ...)  # S3 method for class 'eeg_data' eeg_filter(   data,   low_freq = NULL,   high_freq = NULL,   filter_order = \"auto\",   trans_bw = \"auto\",   method = \"fir\",   window = \"hamming\",   demean = TRUE,   ... )  # S3 method for class 'eeg_epochs' eeg_filter(   data,   low_freq = NULL,   high_freq = NULL,   filter_order = \"auto\",   trans_bw = \"auto\",   method = \"fir\",   window = \"hamming\",   demean = TRUE,   ... )  # S3 method for class 'eeg_group' eeg_filter(   data,   low_freq = NULL,   high_freq = NULL,   filter_order = \"auto\",   trans_bw = \"auto\",   method = \"fir\",   window = \"hamming\",   demean = TRUE,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter EEG data — eeg_filter","text":"data eeg_data eeg_epochs object filtered. ... Additional parameters. low_freq Low cutoff frequency. high_freq High cutoff frequency. filter_order Defaults \"auto\", automatically estimates filter order specified filter characteristics (defaults 4 method = \"iir\"). trans_bw Transition bandwidth filter. \"auto\" integer. \"auto\" attempts determine suitable transition bandwidth using heuristic given . Ignored method = \"iir\". method \"fir\" (Finite Impulse Response) \"iir\" (Infinite Impulse Response). Defaults \"fir\". window Windowing function use (FIR filtering ). Defaults \"hamming\"; currently \"hamming\" available. demean Remove DC component (.e. channel/epoch mean) filtering. Defaults TRUE.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter EEG data — eeg_filter","text":"object original class signals filtered according user's specifications","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter EEG data — eeg_filter","text":"low_freq high_freq low high cutoff frequencies. Pass low freq high freq alone perform high-pass low-pass filtering respectively. band-pass band-stop filters, pass low_freq high_freq. low_freq < high_freq, bandpass filtering performed. low_freq > high_freq, bandstop filtering performed. Note recommended first zero-mean signal using either channel means -channel epoch means. function allows parallelization using future package, e.g. using plan(multisession)","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_filter.html","id":"fir-versus-iir-filtering","dir":"Reference","previous_headings":"","what":"FIR versus IIR filtering","title":"Filter EEG data — eeg_filter","text":"Finite Impulse Response (FIR) filtering performed using overlap-add FFT method. Note performs single-pass; data shifted back time group delay filter compensate phase delay imposed linear filtering process. Infinite Impulse Response (IIR) filtering performed using two-pass (forwards, reversed) method correct phase alignment. Note Butterworth filter designs used can become numerically unstable small increase filter order. purposes, use FIR filters.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter EEG data — eeg_filter","text":"","code":"plot_psd(eeg_filter(demo_epochs, low_freq = 1, high_freq = 30)) #> Band-pass FIR filter from 1 - 30 Hz #> Transition bandwidth: 1 Hz #> Filter order: 424 #> Removing channel means per epoch... #> Removing channel means per epoch... #> Computing Power Spectral Density using Welch's method. #> FFT length: 256 #> Segment length: 84 #> Overlapping points: 42 (50% overlap)  plot_psd(eeg_filter(demo_epochs, low_freq = 12, high_freq = 8)) #> Band-stop FIR filter from 8 - 12 Hz. #> Transition bandwidth: 2 Hz #> Filter order: 212 #> Removing channel means per epoch... #> Removing channel means per epoch... #> Computing Power Spectral Density using Welch's method. #> FFT length: 256 #> Segment length: 84 #> Overlapping points: 42 (50% overlap)  plot_psd(eeg_filter(demo_epochs, low_freq = 12, high_freq = 8, method = \"iir\")) #> Band-stop IIR filter from 8 - 12 Hz. #> Effective filter order: 4 (two-pass) #> Removing channel means per epoch... #> Removing channel means per epoch... #> Computing Power Spectral Density using Welch's method. #> FFT length: 256 #> Segment length: 84 #> Overlapping points: 42 (50% overlap)"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_psd.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create an object of class eeg_psd — eeg_psd","title":"Function to create an object of class eeg_psd — eeg_psd","text":"Function create object class eeg_psd","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_psd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create an object of class eeg_psd — eeg_psd","text":"","code":"eeg_psd(data, srate, chan_info = NULL, timings = NULL, freqs, epochs)"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_psd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create an object of class eeg_psd — eeg_psd","text":"data PSD transformed data srate Sampling rate Hz. chan_info String character names electrodes. timings Timing information - samples sample /samplirng rate. freqs vector frequencies epochs Epoch information","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_psd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to create an object of class eeg_psd — eeg_psd","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Referencing — eeg_reference","title":"Referencing — eeg_reference","text":"Used reference EEG data specified electrode electrodes. Defaults average reference. specific electrodes used, removed data. Meta-data referencing scheme held eeg_data structure.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Referencing — eeg_reference","text":"","code":"eeg_reference(data, ...)  # Default S3 method eeg_reference(data, ...)  # S3 method for class 'eeg_data' eeg_reference(   data,   ref_chans = \"average\",   exclude = NULL,   robust = FALSE,   implicit_ref = NULL,   verbose = TRUE,   ... )  # S3 method for class 'eeg_epochs' eeg_reference(   data,   ref_chans = \"average\",   exclude = NULL,   robust = FALSE,   implicit_ref = NULL,   verbose = TRUE,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Referencing — eeg_reference","text":"data Data re-reference. Primarily meant use data class eeg_data. ... parameters passed eeg_reference ref_chans Channels reference data . Defaults \"average\" .e. average electrodes data. Character vector channel names numbers. exclude Electrodes exclude average reference calculation. robust Use median instead mean; used average reference. Defaults FALSE. implicit_ref Implicit reference channel - use add channel back previously used reference. E.g. LM (left mastoid) channel used recording absent data, passing \"LM\" adds \"LM\" channel back data, populated zeroes. verbose Print informative messages console. Defaults TRUE.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Referencing — eeg_reference","text":"object class eeg_data, re-referenced requested.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_reference.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Referencing — eeg_reference","text":"eeg_reference(default): Default method eeg_reference(eeg_data): Rereference objects class eeg_data eeg_reference(eeg_epochs): Rereference objects class eeg_epochs","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_reference.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Referencing — eeg_reference","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_reference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Referencing — eeg_reference","text":"","code":"# demo_epochs is average referenced by default demo_epochs #> Epoched EEG data #>  #> Number of channels\t: 11  #> Number of epochs\t: 80  #> Epoch limits\t\t: -0.197 - 0.451 seconds #> Electrode names\t\t: A5 A13 A21 A29 A31 B5 B6 B8 B16 B18 B26  #> Sampling rate\t\t: 128  Hz #> Reference\t\t: average  # Rereference it but exclude B5 from calculation of the average eeg_reference(demo_epochs, exclude = \"B5\") #> You have used the existing reference channel(s), average again. #> Epoched EEG data #>  #> Number of channels\t: 11  #> Number of epochs\t: 80  #> Epoch limits\t\t: -0.197 - 0.451 seconds #> Electrode names\t\t: A5 A13 A21 A29 A31 B5 B6 B8 B16 B18 B26  #> Sampling rate\t\t: 128  Hz #> Reference\t\t: average  # Reference data using the median of the reference channels rather than the mean eeg_reference(demo_epochs, robust = TRUE) #> You have used the existing reference channel(s), average again. #> Epoched EEG data #>  #> Number of channels\t: 11  #> Number of epochs\t: 80  #> Epoch limits\t\t: -0.197 - 0.451 seconds #> Electrode names\t\t: A5 A13 A21 A29 A31 B5 B6 B8 B16 B18 B26  #> Sampling rate\t\t: 128  Hz #> Reference\t\t: average   eeg_reference(demo_spatial) #> You have used the existing reference channel(s), average again. #> Epoched EEG data #>  #> Number of channels\t: 23  #> Number of epochs\t: 80  #> Epoch limits\t\t: -0.301 - 0.488 seconds #> Electrode names\t\t: Fp1 Fp2 Fz Cz Pz P3 P4 C3 C4 P7 P8 F3 F4 T7 T8 F7 F8 Oz Fpz EXG1 EXG2 EXG3 EXG4  #> Sampling rate\t\t: 128  Hz #> Reference\t\t: average  eeg_reference(demo_spatial, ref_chans = \"Fz\") #> Epoched EEG data #>  #> Number of channels\t: 22  #> Number of epochs\t: 80  #> Epoch limits\t\t: -0.301 - 0.488 seconds #> Electrode names\t\t: Fp1 Fp2 Cz Pz P3 P4 C3 C4 P7 P8 F3 F4 T7 T8 F7 F8 Oz Fpz EXG1 EXG2 EXG3 EXG4  #> Sampling rate\t\t: 128  Hz #> Reference\t\t: Fz  eeg_reference(demo_spatial, implicit_ref = \"LM\") #> You have used the existing reference channel(s), average again. #> Epoched EEG data #>  #> Number of channels\t: 24  #> Number of epochs\t: 80  #> Epoch limits\t\t: -0.301 - 0.488 seconds #> Electrode names\t\t: Fp1 Fp2 Fz Cz Pz P3 P4 C3 C4 P7 P8 F3 F4 T7 T8 F7 F8 Oz Fpz EXG1 EXG2 EXG3 EXG4 LM  #> Sampling rate\t\t: 128  Hz #> Reference\t\t: average"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create an S3 object of class ","title":"Function to create an S3 object of class ","text":"Function create S3 object class \"eeg_stats\".","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create an S3 object of class ","text":"","code":"eeg_stats(statistic, chan_info, pvals, timings, method)"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create an S3 object of class ","text":"statistic Calculated statistic (e.g. t-statistic) chan_info String character names electrodes. pvals calculated p-values statistic timings Unique timepoints remaining data. method Type statistical test","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_stats.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to create an S3 object of class ","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_summarise.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate simple summary statistics for eeg_* objects — eeg_summarise","title":"Calculate simple summary statistics for eeg_* objects — eeg_summarise","text":"Calculate timepoint--timepoint mean, standard deviation, standard error, variance eeg_epochs objects.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_summarise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate simple summary statistics for eeg_* objects — eeg_summarise","text":"","code":"eeg_summarise(data, ...)  # S3 method for class 'eeg_epochs' eeg_summarise(   data,   statistic = c(\"sem\", \"mean\", \"sd\", \"var\"),   conditions = NULL,   time_lim = NULL,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_summarise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate simple summary statistics for eeg_* objects — eeg_summarise","text":"data eegUtils object. ... Various arguments passed specific functions statistic statistic calculate timepoint. Defaults \"sem\" conditions Conditions group data . time_lim Timepoint(s) summarise. Can range, summary statistic provided timepoint, list individual times. none supplied, function calculate summary every timepoint.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_summarise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate simple summary statistics for eeg_* objects — eeg_summarise","text":"tibble","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_summarise.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Calculate simple summary statistics for eeg_* objects — eeg_summarise","text":"eeg_summarise(eeg_epochs): Calculate summary statistics eeg_epochs objects","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_summarise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate simple summary statistics for eeg_* objects — eeg_summarise","text":"","code":"eeg_summarise(demo_spatial, statistic = \"sem\") #> # A tibble: 102 × 24 #>      time sem_Fp1 sem_Fp2 sem_Fz sem_Cz sem_Pz sem_P3 sem_P4 sem_C3 sem_C4 #>     <dbl>   <dbl>   <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl> #>  1 -0.301  0.0861  0.0769 0.0800 0.0933  0.108 0.0782 0.0879 0.0609 0.0775 #>  2 -0.293  0.0830  0.0763 0.0754 0.0981  0.105 0.0749 0.0837 0.0591 0.0733 #>  3 -0.285  0.0862  0.0733 0.0751 0.100   0.101 0.0737 0.0782 0.0598 0.0688 #>  4 -0.277  0.0907  0.0798 0.0755 0.0989  0.100 0.0730 0.0742 0.0664 0.0675 #>  5 -0.270  0.0885  0.0769 0.0743 0.0913  0.107 0.0726 0.0701 0.0647 0.0660 #>  6 -0.262  0.0857  0.0824 0.0713 0.0894  0.111 0.0795 0.0693 0.0610 0.0679 #>  7 -0.254  0.0860  0.0813 0.0763 0.0916  0.106 0.0859 0.0732 0.0598 0.0760 #>  8 -0.246  0.0877  0.0733 0.0823 0.0914  0.103 0.0823 0.0760 0.0563 0.0833 #>  9 -0.238  0.0835  0.0713 0.0793 0.0877  0.104 0.0730 0.0762 0.0563 0.0867 #> 10 -0.230  0.0847  0.0773 0.0704 0.0821  0.107 0.0739 0.0771 0.0606 0.0818 #> # ℹ 92 more rows #> # ℹ 14 more variables: sem_P7 <dbl>, sem_P8 <dbl>, sem_F3 <dbl>, sem_F4 <dbl>, #> #   sem_T7 <dbl>, sem_T8 <dbl>, sem_F7 <dbl>, sem_F8 <dbl>, sem_Oz <dbl>, #> #   sem_Fpz <dbl>, sem_EXG1 <dbl>, sem_EXG2 <dbl>, sem_EXG3 <dbl>, #> #   sem_EXG4 <dbl>"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_tfr.html","id":null,"dir":"Reference","previous_headings":"","what":"Object creator for eeg_tfr objects. — eeg_tfr","title":"Object creator for eeg_tfr objects. — eeg_tfr","text":"Object creator eeg_tfr objects.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_tfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object creator for eeg_tfr objects. — eeg_tfr","text":"","code":"eeg_tfr(   data,   srate,   events,   chan_info = NULL,   reference,   timings = NULL,   freq_info,   dimensions,   epochs = NULL )"},{"path":"https://craddm.github.io/eegUtils/reference/eeg_tfr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object creator for eeg_tfr objects. — eeg_tfr","text":"data TFR transformed data srate Sampling rate Hz. numeric value. events Event tables chan_info Standard channel information. reference Reference information timings Timing information. freq_info Frequencies useful information dimensions List dimension epochs Epoch information","code":""},{"path":"https://craddm.github.io/eegUtils/reference/eeg_tfr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Object creator for eeg_tfr objects. — eeg_tfr","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/electrode_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get standard electrode locations — electrode_locations","title":"Get standard electrode locations — electrode_locations","text":"Joins standard electrode locations EEG data eegUtils internal data.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/electrode_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get standard electrode locations — electrode_locations","text":"","code":"electrode_locations(data, ...)  # S3 method for class 'data.frame' electrode_locations(   data,   electrode = \"electrode\",   drop = FALSE,   montage = NULL,   overwrite = TRUE,   ... )  # S3 method for class 'eeg_data' electrode_locations(data, drop = FALSE, montage = NULL, overwrite = FALSE, ...)  # S3 method for class 'eeg_epochs' electrode_locations(data, drop = FALSE, montage = NULL, overwrite = FALSE, ...)  # S3 method for class 'eeg_tfr' electrode_locations(data, drop = FALSE, montage = NULL, overwrite = FALSE, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/electrode_locations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get standard electrode locations — electrode_locations","text":"data EEG dataset. ... Passed S3 methods. electrode column name containing electrode names data. (Defaults \"electrode\"). drop electrodes data default locations available removed? (Defaults FALSE). montage Name existing montage set. Defaults NULL. overwrite Overwrite existing channel info. Defaults FALSE.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/electrode_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get standard electrode locations — electrode_locations","text":"tibble (data.frame), ggplot2 object plot = TRUE.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/electrode_locations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get standard electrode locations — electrode_locations","text":"standard locations 10-05 system derived Oostenveld & Praamstra (2001). addition, multiple specific montages BioSemi systems included. can added using montage parameter: \"biosemi16\", \"biosemi32\", biosemi64\", \"biosemi64alpha\", \"biosemi128\", \"biosemi160\", \"biosemi256\"","code":""},{"path":"https://craddm.github.io/eegUtils/reference/electrode_locations.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get standard electrode locations — electrode_locations","text":"electrode_locations(data.frame): Adds standard locations data frame long format electrode_locations(eeg_data): Adds standard locations chan_info field eeg_data object. electrode_locations(eeg_epochs): Adds standard locations chan_info field eeg_data object. electrode_locations(eeg_tfr): Adds standard locations chan_info field eeg_tfr object.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/electrode_locations.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get standard electrode locations — electrode_locations","text":"Oostenveld, R. & Praamstra, P. (2001). five percent electrode system high-resolution EEG ERP measurements. Clinical Neurophysiology, 112, 4, 713-719","code":""},{"path":"https://craddm.github.io/eegUtils/reference/electrode_locations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get standard electrode locations — electrode_locations","text":"","code":"channels(demo_epochs) #> # A tibble: 11 × 9 #>    electrode radius theta   phi cart_x cart_y cart_z     x     y #>    <chr>      <dbl> <dbl> <dbl>  <dbl>  <dbl>  <dbl> <dbl> <dbl> #>  1 A5             1   -60   -51  -46.3   57.2  42.5  -37.8  46.6 #>  2 A13            1   -46     0  -61.1    0    59.0  -46     0   #>  3 A21            1   -60    51  -46.3  -57.2  42.5  -37.8 -46.6 #>  4 A29            1    92   -90    0    -85.0  -2.97   0   -92   #>  5 A31            1    46   -90    0    -61.1  59.0    0   -46   #>  6 B5             1    69    90    0     79.4  30.5    0    69   #>  7 B6             1    46    90    0     61.1  59.0    0    46   #>  8 B8             1    60    51   46.3   57.2  42.5   37.8  46.6 #>  9 B16            1     0     0    0      0    85      0     0   #> 10 B18            1    46     0   61.1    0    59.0   46     0   #> 11 B26            1    60   -51   46.3  -57.2  42.5   37.8 -46.6 electrode_locations(demo_epochs, overwrite = TRUE, montage = \"biosemi64alpha\") #> Epoched EEG data #>  #> Number of channels\t: 11  #> Number of epochs\t: 80  #> Epoch limits\t\t: -0.197 - 0.451 seconds #> Electrode names\t\t: A5 A13 A21 A29 A31 B5 B6 B8 B16 B18 B26  #> Sampling rate\t\t: 128  Hz #> Reference\t\t: average"},{"path":"https://craddm.github.io/eegUtils/reference/epoch_data.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Create epochs from EEG data — epoch_data.default","title":"Create epochs from EEG data — epoch_data.default","text":"Create epochs EEG data","code":""},{"path":"https://craddm.github.io/eegUtils/reference/epoch_data.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create epochs from EEG data — epoch_data.default","text":"","code":"# Default S3 method epoch_data(data, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/epoch_data.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create epochs from EEG data — epoch_data.default","text":"data Continuous data epoched. ... Parameters passed functions","code":""},{"path":"https://craddm.github.io/eegUtils/reference/epoch_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create epochs from EEG data — epoch_data","title":"Create epochs from EEG data — epoch_data","text":"Creates epochs around specified event triggers. Requires data class eeg_data. multiple events specified, epochs created around event.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/epoch_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create epochs from EEG data — epoch_data","text":"","code":"epoch_data(data, ...)  # S3 method for class 'eeg_data' epoch_data(   data,   events,   time_lim = c(-1, 1),   baseline = \"none\",   epoch_labels = NULL,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/epoch_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create epochs from EEG data — epoch_data","text":"data Continuous data epoched. ... Parameters passed functions events Character vector events epoch around. time_lim Time seconds form epoch around events. Defaults one second either side. baseline Baseline times subtract. Can set numeric vector length two specify time window use baseline epoch (e.g. c(-.1, 0)), \"none\", perform baseline correction, NULL use mean whole epoch. v0.6 eegUtils, default \"none\". epoch_labels Character vector length events 'll used label epochs.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/epoch_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create epochs from EEG data — epoch_data","text":"Returns epoched object class eeg_epochs","code":""},{"path":"https://craddm.github.io/eegUtils/reference/epoch_data.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Create epochs from EEG data — epoch_data","text":"epoch_data(eeg_data): Epoch eeg_data objects","code":""},{"path":"https://craddm.github.io/eegUtils/reference/epoch_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create epochs from EEG data — epoch_data","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/epoch_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Epoch statistics — epoch_stats","title":"Epoch statistics — epoch_stats","text":"Calculate various statistics epoch data","code":""},{"path":"https://craddm.github.io/eegUtils/reference/epoch_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Epoch statistics — epoch_stats","text":"","code":"epoch_stats(data, ...)  # S3 method for class 'eeg_epochs' epoch_stats(data, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/epoch_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Epoch statistics — epoch_stats","text":"data eeg_epochs object. ... parameters passed functions.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/epoch_stats.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Epoch statistics — epoch_stats","text":"epoch_stats(eeg_epochs): Calculate statistics epoch.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/epoch_stats.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Epoch statistics — epoch_stats","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/epoch_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Epoch statistics — epoch_stats","text":"","code":"epoch_stats(demo_epochs) #>      measure epoch       A5       A13       A21      A29       A31        B5 #>       <char> <num>    <num>     <num>     <num>    <num>     <num>     <num> #>   1:     max     1 11.56975  5.843069  6.950029 16.05196  5.835857 16.037969 #>   2:     max     2 11.47310  3.076121 17.336609 25.07866  5.495951 13.935791 #>   3:     max     3 10.00425  5.781016 17.194586 17.19246  9.782940 12.822427 #>   4:     max     4  9.31763 10.440170 15.260184 17.20443 13.233307  4.500334 #>   5:     max     5 13.83158  7.853081 13.628233 21.79226 11.007382 13.648832 #>  ---                                                                         #> 396:  minmax    76 46.45077 15.341318 64.726750 34.25538 45.579252 56.265198 #> 397:  minmax    77 30.11000 20.520123 29.243788 49.73817 33.340733 40.902041 #> 398:  minmax    78 18.74668 10.368268 19.936261 31.79093 23.085611 23.651198 #> 399:  minmax    79 25.99021 18.232140 19.778950 36.60640 24.057504 36.741414 #> 400:  minmax    80 33.72606 29.993020 25.637490 31.08364 28.710451 37.933588 #>             B6        B8        B16       B18       B26 #>          <num>     <num>      <num>     <num>     <num> #>   1: 15.222137  5.365861  0.8970604  2.939259 15.516402 #>   2: 10.753399 10.561023  1.4575628  8.013282  7.306200 #>   3:  9.603629  5.616830  8.1576152 16.020897 14.130052 #>   4:  8.287086 12.999384  7.1457154  6.542394  6.952915 #>   5: 11.821007 10.215768 12.8578863  8.408418 13.708609 #>  ---                                                    #> 396: 42.861184 41.866046 21.9149196 15.964518 41.049195 #> 397: 39.543097 34.720623 47.8854240 48.952999 35.531254 #> 398: 18.209071 16.666973 20.3557738 18.072725 19.773843 #> 399: 20.970510 21.315809 15.1661056 23.930244 27.508591 #> 400: 30.095758 27.686008 24.1916472 24.933046 37.598064"},{"path":"https://craddm.github.io/eegUtils/reference/epochs.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify the epochs structure — epochs","title":"Modify the epochs structure — epochs","text":"Get set epochs structure eegUtils object.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/epochs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify the epochs structure — epochs","text":"","code":"epochs(data)  epochs(data) <- value"},{"path":"https://craddm.github.io/eegUtils/reference/epochs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify the epochs structure — epochs","text":"data eegUtils object view value Structure replace epochs structure .","code":""},{"path":"https://craddm.github.io/eegUtils/reference/epochs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Modify the epochs structure — epochs","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/epochs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify the epochs structure — epochs","text":"","code":"epochs(demo_spatial) #> # A tibble: 80 × 5 #>    epoch participant_id recording         event_type epoch_labels #>    <dbl> <chr>          <chr>                  <dbl> <chr>        #>  1     1 \"\"             Matt-task-spatcue        122 valid_right  #>  2     2 \"\"             Matt-task-spatcue        120 valid_left   #>  3     3 \"\"             Matt-task-spatcue        122 valid_right  #>  4     4 \"\"             Matt-task-spatcue        122 valid_right  #>  5     5 \"\"             Matt-task-spatcue        120 valid_left   #>  6     6 \"\"             Matt-task-spatcue        122 valid_right  #>  7     7 \"\"             Matt-task-spatcue        120 valid_left   #>  8     8 \"\"             Matt-task-spatcue        120 valid_left   #>  9     9 \"\"             Matt-task-spatcue        122 valid_right  #> 10    10 \"\"             Matt-task-spatcue        122 valid_right  #> # ℹ 70 more rows"},{"path":"https://craddm.github.io/eegUtils/reference/erp_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ERP images — erp_image","title":"Plot ERP images — erp_image","text":"Plot ERP image single electrode. Uses boxcar smooth series trials order make across-trial patterns apparent.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/erp_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ERP images — erp_image","text":"","code":"erp_image(data, ...)  # S3 method for class 'data.frame' erp_image(   data,   electrode = \"Cz\",   time_lim = NULL,   smoothing = 10,   clim = NULL,   interpolate = FALSE,   na.rm = TRUE,   ... )  # S3 method for class 'eeg_epochs' erp_image(   data,   electrode = \"Cz\",   time_lim = NULL,   smoothing = 10,   clim = NULL,   interpolate = FALSE,   na.rm = TRUE,   ... )  # S3 method for class 'eeg_ICA' erp_image(   data,   component = \"Comp001\",   smoothing = 10,   clim = NULL,   interpolate = FALSE,   na.rm = TRUE,   ... )  # S3 method for class 'eeg_tfr' erp_image(   data,   electrode = \"Cz\",   time_lim = NULL,   smoothing = 10,   clim = NULL,   interpolate = FALSE,   freq_range = NULL,   na.rm = TRUE,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/erp_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ERP images — erp_image","text":"data Data frame eegUtils object plotted. ... arguments passed method. electrode Electrode generate ERP image. time_lim Time limits plot. smoothing Number trials smooth generating image. clim Character vector min max values plotting colour range. e.g. c(-5,5). Defaults min max. interpolate Perform interpolation produce smoother looking plots. Defaults FALSE. na.rm Remove trials NA amplitudes smoothing. Defaults TRUE. component eeg_ICA component plot freq_range numeric vector specify range frequencies average . single number find closest matching frequency. vector length two match average frequencies within range.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/erp_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ERP images — erp_image","text":"ggplot object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/erp_image.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Plot ERP images — erp_image","text":"erp_image(data.frame): Default function operates normal data frames erp_image(eeg_epochs): Create erp_image eeg_epochs erp_image(eeg_ICA): Plot component image eeg_ICA erp_image(eeg_tfr): Plot component image eeg_tfr","code":""},{"path":"https://craddm.github.io/eegUtils/reference/erp_image.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot ERP images — erp_image","text":"Matt craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/erp_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot ERP images — erp_image","text":"","code":"erp_image(demo_epochs, electrode = \"A31\")  erp_image(demo_epochs, electrode = \"A31\", interpolate = TRUE)  erp_image(demo_epochs, electrode = \"A31\", smoothing = 5)  erp_image(compute_tfr(demo_epochs,  foi = c(4, 30), n_cycles = 3, n_freq = 20, verbose = FALSE, keep_trials = TRUE),  electrode = \"A31\", freq_range = c(8, 12))"},{"path":"https://craddm.github.io/eegUtils/reference/erp_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"ERP raster plot — erp_raster","title":"ERP raster plot — erp_raster","text":"Create plot showing ERP every channel single ERP image. default, attempts find channel locations rearrange channels spatial patterns scalp discernible. orders rows posterior electrode right hemisphere anterior electrode left hemisphere, midline electrodes middle. locations found, simply displays data original order.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/erp_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ERP raster plot — erp_raster","text":"","code":"erp_raster(   data,   anat_order = TRUE,   time_lim = NULL,   clim = NULL,   interpolate = FALSE )"},{"path":"https://craddm.github.io/eegUtils/reference/erp_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ERP raster plot — erp_raster","text":"data eeg_epochs object anat_order Arrange channels anatomically representative order. Defaults TRUE. time_lim Time limits plot - character vector (e.g. c(-.2, .5)) clim Character vector min max values plotting colour range. e.g. c(-5,5). Defaults min max. interpolate Smooth raster plot. Defaults FALSE.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/erp_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ERP raster plot — erp_raster","text":"ggplot object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/erp_raster.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ERP raster plot — erp_raster","text":"Matt Craddock, matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/erp_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ERP raster plot — erp_raster","text":"","code":"library(ggplot2) erp_raster(demo_epochs)  erp_raster(demo_epochs, interpolate = TRUE)  erp_raster(rm_baseline(demo_epochs, c(-.1, 0)), interpolate = TRUE) #> Baseline: -0.1 - 0s  erp_raster(demo_spatial) + facet_wrap(~epoch_labels)"},{"path":"https://craddm.github.io/eegUtils/reference/erp_scalp.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot event-related potentials using a scalp based layout — erp_scalp","title":"Plot event-related potentials using a scalp based layout — erp_scalp","text":"Creates ggplot2 figure showing ERP electrode, electrode placed according location scalp.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/erp_scalp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot event-related potentials using a scalp based layout — erp_scalp","text":"","code":"erp_scalp(data, ...)  # Default S3 method erp_scalp(   data,   electrode = \"electrode\",   amplitude = \"amplitude\",   time = \"time\",   color = NULL,   colour = NULL,   size = 0.8,   linewidth = 0.8,   baseline = NULL,   show_guide = TRUE,   chan_info = NULL,   montage = NULL,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/erp_scalp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot event-related potentials using a scalp based layout — erp_scalp","text":"data eeg_epochs eeg_evoked object ... Various arguments passed specific functions electrode Column name containing electrode names data. Defaults \"electrode\". amplitude Column name containing amplitudes data. Defaults \"amplitude\". time Column name containing time data. Defaults \"time\". color Alias colour. colour Variable colour lines . variable passed, one line drawn electrode. size Size line(s) ERPs. Deprecated linewidth Size line(s) ERPs. baseline Character vector times subtract baseline correct. show_guide guide showing scale ERP plots shown. Defaults TRUE. chan_info Pass channel information standard eegUtils format directly. montage Name existing montage set. Defaults NULL, attempt us locations data. none found, attempt use standard 10-05 locations.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/erp_scalp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot event-related potentials using a scalp based layout — erp_scalp","text":"Returns ggplot2 plot object.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/erp_scalp.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Plot event-related potentials using a scalp based layout — erp_scalp","text":"erp_scalp(default): Plot ERP scalp map","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/reference/erp_scalp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot event-related potentials using a scalp based layout — erp_scalp","text":"Matti Vuorre, mv2521@columbia.edu Matt Craddock, matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/erp_scalp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot event-related potentials using a scalp based layout — erp_scalp","text":"","code":"erp_scalp(demo_epochs, montage = \"biosemi64alpha\")"},{"path":"https://craddm.github.io/eegUtils/reference/est_filt_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate filter order — est_filt_order","title":"Estimate filter order — est_filt_order","text":"Estimate filter order","code":""},{"path":"https://craddm.github.io/eegUtils/reference/est_filt_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate filter order — est_filt_order","text":"","code":"est_filt_order(window, tbw, srate)"},{"path":"https://craddm.github.io/eegUtils/reference/est_filt_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate filter order — est_filt_order","text":"window Window use (string) tbw Transition bandwidth. srate Sampling rate (Hz)","code":""},{"path":"https://craddm.github.io/eegUtils/reference/est_tbw.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate transition bandwidth — est_tbw","title":"Estimate transition bandwidth — est_tbw","text":"Estimate transition bandwidth","code":""},{"path":"https://craddm.github.io/eegUtils/reference/est_tbw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate transition bandwidth — est_tbw","text":"","code":"est_tbw(filt_pars, srate)"},{"path":"https://craddm.github.io/eegUtils/reference/est_tbw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate transition bandwidth — est_tbw","text":"filt_pars Parsed filter information parse_filt_freqs srate Sampling rate (Hz)","code":""},{"path":"https://craddm.github.io/eegUtils/reference/events.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify events structure — events","title":"Modify events structure — events","text":"Get set values events structure eegUtils object.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify events structure — events","text":"","code":"events(.data)  events(.data) <- value  # S3 method for class 'eeg_epochs' events(.data) <- value  # S3 method for class 'eeg_data' events(.data) <- value"},{"path":"https://craddm.github.io/eegUtils/reference/events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify events structure — events","text":".data eegUtils object view value Value replace events structure .","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/reference/events.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Modify events structure — events","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify events structure — events","text":"","code":"events(demo_epochs) #> # A tibble: 80 × 5 #>    event_onset event_time event_type epoch  time #>          <dbl>      <dbl>      <dbl> <dbl> <dbl> #>  1        4128       8.06        208     1     0 #>  2        7037      13.7         213     2     0 #>  3       10043      19.6         215     3     0 #>  4       12928      25.2         213     4     0 #>  5       15868      31.0         207     5     0 #>  6       18777      36.7         207     6     0 #>  7       21578      42.1         213     7     0 #>  8       24554      48.0         213     8     0 #>  9       27379      53.5         222     9     0 #> 10       30306      59.2         208    10     0 #> # ℹ 70 more rows events(demo_epochs) <- mutate(events(demo_epochs),  sf = dplyr::case_when(          event_type %% 2 == 0 ~ \"HSF\",          event_type %% 2 == 1 ~ \"LSF\",  )) events(demo_epochs) #> # A tibble: 80 × 6 #>    event_onset event_time event_type epoch  time sf    #>          <dbl>      <dbl>      <dbl> <dbl> <dbl> <chr> #>  1        4128       8.06        208     1     0 HSF   #>  2        7037      13.7         213     2     0 LSF   #>  3       10043      19.6         215     3     0 LSF   #>  4       12928      25.2         213     4     0 LSF   #>  5       15868      31.0         207     5     0 LSF   #>  6       18777      36.7         207     6     0 LSF   #>  7       21578      42.1         213     7     0 LSF   #>  8       24554      48.0         213     8     0 LSF   #>  9       27379      53.5         222     9     0 HSF   #> 10       30306      59.2         208    10     0 HSF   #> # ℹ 70 more rows"},{"path":"https://craddm.github.io/eegUtils/reference/export_bva.html","id":null,"dir":"Reference","previous_headings":"","what":"Export continuous data in Brain Vision Analyzer format — export_bva","title":"Export continuous data in Brain Vision Analyzer format — export_bva","text":"Export continuous EEG data Brain Vision Analyzer format. one recommended formats BIDS https://bids-specification.readthedocs.io/en/stable/04-modality-specific-files/03-electroencephalography.html","code":""},{"path":"https://craddm.github.io/eegUtils/reference/export_bva.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export continuous data in Brain Vision Analyzer format — export_bva","text":"","code":"export_bva(.data, filename, orientation, verbose = TRUE)  # S3 method for class 'eeg_data' export_bva(.data, filename, orientation = \"VECTORIZED\", verbose = TRUE)"},{"path":"https://craddm.github.io/eegUtils/reference/export_bva.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export continuous data in Brain Vision Analyzer format — export_bva","text":".data eeg_data object exported. filename String giving filename export . File extensions removed supplied. orientation VECTORIZED MULTIPLEXED. relates way data stored binary file. VECTORIZED default recommended. verbose print informative messages console","code":""},{"path":"https://craddm.github.io/eegUtils/reference/export_bva.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Export continuous data in Brain Vision Analyzer format — export_bva","text":"export_bva(eeg_data): Method eeg_data","code":""},{"path":"https://craddm.github.io/eegUtils/reference/faster_chans.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform global bad channel detection for FASTER — faster_chans","title":"Perform global bad channel detection for FASTER — faster_chans","text":"Perform global bad channel detection FASTER","code":""},{"path":"https://craddm.github.io/eegUtils/reference/faster_chans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform global bad channel detection for FASTER — faster_chans","text":"","code":"faster_chans(data, sds = 3, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/faster_chans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform global bad channel detection for FASTER — faster_chans","text":"data matrix EEG data signals sds Standard deviation thresholds ... parameters (tbd)","code":""},{"path":"https://craddm.github.io/eegUtils/reference/faster_cine.html","id":null,"dir":"Reference","previous_headings":"","what":"FASTER detection of bad channels in single epochs — faster_cine","title":"FASTER detection of bad channels in single epochs — faster_cine","text":"FASTER detection bad channels single epochs","code":""},{"path":"https://craddm.github.io/eegUtils/reference/faster_cine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FASTER detection of bad channels in single epochs — faster_cine","text":"","code":"faster_cine(data, exclude = NULL, max_bad = 10, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/faster_cine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FASTER detection of bad channels in single epochs — faster_cine","text":"data eeg_epochs object. exclude Channels ignored. ... parameters (tbd)","code":""},{"path":"https://craddm.github.io/eegUtils/reference/faster_epo_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate statistics for each channel in an epoch and identify bad channels — faster_epo_stat","title":"Calculate statistics for each channel in an epoch and identify bad channels — faster_epo_stat","text":"Calculate statistics channel epoch identify bad channels","code":""},{"path":"https://craddm.github.io/eegUtils/reference/faster_epo_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate statistics for each channel in an epoch and identify bad channels — faster_epo_stat","text":"","code":"faster_epo_stat(data, exclude = NULL, sds = 3, chan_means)"},{"path":"https://craddm.github.io/eegUtils/reference/faster_epo_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate statistics for each channel in an epoch and identify bad channels — faster_epo_stat","text":"data matrix signals single epoch","code":""},{"path":"https://craddm.github.io/eegUtils/reference/faster_epochs.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform global bad epoch detection for FASTER — faster_epochs","title":"Perform global bad epoch detection for FASTER — faster_epochs","text":"Perform global bad epoch detection FASTER","code":""},{"path":"https://craddm.github.io/eegUtils/reference/faster_epochs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform global bad epoch detection for FASTER — faster_epochs","text":"","code":"faster_epochs(data, sds = 3, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/faster_epochs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform global bad epoch detection for FASTER — faster_epochs","text":"data eeg_epochs object sds standard deviations threshold ... parameters (tbd)","code":""},{"path":"https://craddm.github.io/eegUtils/reference/fft_n.html","id":null,"dir":"Reference","previous_headings":"","what":"N-point FFT — fft_n","title":"N-point FFT — fft_n","text":"Either zero-pads adding trailing zeroes, truncates signal N runs FFT.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/fft_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"N-point FFT — fft_n","text":"","code":"fft_n(signal, n)"},{"path":"https://craddm.github.io/eegUtils/reference/fft_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"N-point FFT — fft_n","text":"signal signal FFT'd n Number FFT points","code":""},{"path":"https://craddm.github.io/eegUtils/reference/filt_kernel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create windowed-sinc filter kernel — filt_kernel","title":"Create windowed-sinc filter kernel — filt_kernel","text":"Supplied length filter samples, cutoff frequency, windowing function, returns windowed-sinc filter kernel use FIR filtering.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/filt_kernel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create windowed-sinc filter kernel — filt_kernel","text":"","code":"filt_kernel(filt_order, cut_off, w)"},{"path":"https://craddm.github.io/eegUtils/reference/filt_kernel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create windowed-sinc filter kernel — filt_kernel","text":"filt_order Length filter samples cut_off Cutoff frequency (normalized fraction sampling rate) w Window","code":""},{"path":"https://craddm.github.io/eegUtils/reference/filter_coefs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate filter coefficients — filter_coefs","title":"Generate filter coefficients — filter_coefs","text":"Generate filter coefficients IIR FIR filter.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/filter_coefs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate filter coefficients — filter_coefs","text":"","code":"filter_coefs(method, filt_pars, filter_order, window)"},{"path":"https://craddm.github.io/eegUtils/reference/filter_coefs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate filter coefficients — filter_coefs","text":"method IIR FIR filt_pars output parse_filt_freqs filter_order order filter samples window Ignored IIR","code":""},{"path":"https://craddm.github.io/eegUtils/reference/find_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Find times in an eeg_* object — find_times","title":"Find times in an eeg_* object — find_times","text":"Internal function find rows corresponding selected time limits","code":""},{"path":"https://craddm.github.io/eegUtils/reference/find_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find times in an eeg_* object — find_times","text":"","code":"find_times(timings, time_lim)"},{"path":"https://craddm.github.io/eegUtils/reference/find_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find times in an eeg_* object — find_times","text":"timings timing information EEG object. time_lim character vector time limits","code":""},{"path":"https://craddm.github.io/eegUtils/reference/find_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find times in an eeg_* object — find_times","text":"logical vector selected timepoints","code":""},{"path":"https://craddm.github.io/eegUtils/reference/fit_glm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a linear model to EEG data — fit_glm","title":"Fit a linear model to EEG data — fit_glm","text":"Fits linear model timepoint separately electrode.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/fit_glm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a linear model to EEG data — fit_glm","text":"","code":"fit_glm(formula, data, ...)  # S3 method for class 'eeg_epochs' fit_glm(formula, data, baseline = NULL, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/fit_glm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a linear model to EEG data — fit_glm","text":"formula object class formula. Right-hand side regression formula GLM. See ?formula notes use data eegUtils object. ... arguments passed (LM/GLM) baseline Numeric vector length 2 specifying time period used baseline.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/fit_glm.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Fit a linear model to EEG data — fit_glm","text":"fit_glm(eeg_epochs): GLM fitting eeg_epochs","code":""},{"path":"https://craddm.github.io/eegUtils/reference/fit_glm.html","id":"notes-on-usage","dir":"Reference","previous_headings":"","what":"Notes On Usage","title":"Fit a linear model to EEG data — fit_glm","text":"fit_glm function fit linear model timepoint electrode input dataset. formula standard R formula. Specify right-hand side formula .e. predictors. function allows flexible fitting baseline covariate, recognising term baseline specified formula.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/fit_glm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit a linear model to EEG data — fit_glm","text":"Matt Craddock, matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/fit_glm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a linear model to EEG data — fit_glm","text":"","code":"fit_glm(~epoch_labels, demo_spatial) #> EEG Linear Model #>  #> Formula: ~ epoch_labels  #>  #> Number of fitted channels\t:\t 23  #> Channel names\t\t\t: Fp1 F3 F7 C3 T7 P3 P7 Oz Pz Fpz Fp2 Fz F4 F8 Cz C4 T8 P4 P8 EXG1 EXG2 EXG3 EXG4  #> Epoch limits\t\t\t: -0.301 - 0.488 seconds fit_glm(~epoch_labels + baseline, demo_spatial, baseline = c(-.1, 0)) #> EEG Linear Model #>  #> Formula: ~ epoch_labels + baseline  #>  #> Number of fitted channels\t:\t 23  #> Channel names\t\t\t: Fp1 F3 F7 C3 T7 P3 P7 Oz Pz Fpz Fp2 Fz F4 F8 Cz C4 T8 P4 P8 EXG1 EXG2 EXG3 EXG4  #> Epoch limits\t\t\t: -0.301 - 0.488 seconds"},{"path":"https://craddm.github.io/eegUtils/reference/fix_grpdelay.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix group delay — fix_grpdelay","title":"Fix group delay — fix_grpdelay","text":"Corrects signal group delay FIR filter.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/fix_grpdelay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix group delay — fix_grpdelay","text":"","code":"fix_grpdelay(x, n, grp_delay)"},{"path":"https://craddm.github.io/eegUtils/reference/flip_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Flip x-axis coords — flip_x","title":"Flip x-axis coords — flip_x","text":"Flip x-axis coords","code":""},{"path":"https://craddm.github.io/eegUtils/reference/flip_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flip x-axis coords — flip_x","text":"","code":"flip_x(chan_info)"},{"path":"https://craddm.github.io/eegUtils/reference/flip_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flip x-axis coords — flip_x","text":"chan_info chan-info structure","code":""},{"path":"https://craddm.github.io/eegUtils/reference/gauss_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian filter — gauss_filter","title":"Gaussian filter — gauss_filter","text":"Gaussian filtering frequency domain.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/gauss_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gaussian filter — gauss_filter","text":"","code":"gauss_filter(data, srate, freq, fwhm)"},{"path":"https://craddm.github.io/eegUtils/reference/gauss_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian filter — gauss_filter","text":"data Data filtered srate Sampling rate data freq Peak frequency filter fwhm Standard deviation filter","code":""},{"path":"https://craddm.github.io/eegUtils/reference/geom_topo.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a topographical plot — geom_topo","title":"Create a topographical plot — geom_topo","text":"geom_topo() creates topographical plot ggplot2 object. function automatically combines number distinct geom_* stat_* functions create default topographical scalp map. Since geom_raster allow unevenly spaced grids, function creates interpolated surface.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/geom_topo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a topographical plot — geom_topo","text":"","code":"geom_topo(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   show.legend = NA,   na.rm = TRUE,   inherit.aes = TRUE,   interpolate = FALSE,   interp_limit = \"skirt\",   chan_markers = \"point\",   chan_size = rel(2),   head_size = rel(1.5),   r = NULL,   grid_res = 200,   method = \"biharmonic\",   bins = 6,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/geom_topo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a topographical plot — geom_topo","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). interpolate TRUE interpolate linearly, FALSE (default) interpolate. interp_limit Topoplot \"skirt\" inside \"head\". chan_markers Defaults \"point\". Mark electrode positions points text. chan_size Size channel markers, . head_size Size head shape. r Head circumference grid_res Smoothness interpolation grid. method \"biharmonic\" \"\"gam\". bins Number bins use contour lines. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend.","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/reference/geom_topo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a topographical plot — geom_topo","text":"","code":"library(ggplot2) ggplot(demo_epochs, aes(x = x, y = y, fill = amplitude, z = amplitude)) + geom_topo()"},{"path":"https://craddm.github.io/eegUtils/reference/get_epoch_baselines.html","id":null,"dir":"Reference","previous_headings":"","what":"Get epoch baselines — get_epoch_baselines","title":"Get epoch baselines — get_epoch_baselines","text":"Gets baseline values every epoch separately","code":""},{"path":"https://craddm.github.io/eegUtils/reference/get_epoch_baselines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get epoch baselines — get_epoch_baselines","text":"","code":"get_epoch_baselines(data, time_lim)"},{"path":"https://craddm.github.io/eegUtils/reference/get_epoch_baselines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get epoch baselines — get_epoch_baselines","text":"data data calculate baselines time_lim time limits baseline period. numeric vector length two, c(start, end)","code":""},{"path":"https://craddm.github.io/eegUtils/reference/get_epoch_baselines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get epoch baselines — get_epoch_baselines","text":"numeric matrix n_epochs x n_channels.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/get_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate coefficients and standard errors — get_lm","title":"Calculate coefficients and standard errors — get_lm","text":"Calculate coefficients standard errors","code":""},{"path":"https://craddm.github.io/eegUtils/reference/get_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate coefficients and standard errors — get_lm","text":"","code":"get_lm(mdf, x, inverted_dm, resid_df, robust = FALSE)"},{"path":"https://craddm.github.io/eegUtils/reference/get_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate coefficients and standard errors — get_lm","text":"mdf model matrix x data modelled (matrix trials x channels) inverted_dm inverted matrix - unscaled covariance resid_df residual degrees freedom model robust Use heteroskedasticity-consistent covariance (HC3).","code":""},{"path":"https://craddm.github.io/eegUtils/reference/get_participant_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Query and set elements of the epochs metadata structures — get_participant_id","title":"Query and set elements of the epochs metadata structures — get_participant_id","text":"functions used query set participant_id recording fields epochs structure within eegUtils object. Note two set_* functions operate eeg_group objects.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/get_participant_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query and set elements of the epochs metadata structures — get_participant_id","text":"","code":"get_participant_id(data)  get_recording(data)  set_participant_id(data, participant_id)  set_recording(data, recording)"},{"path":"https://craddm.github.io/eegUtils/reference/get_participant_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query and set elements of the epochs metadata structures — get_participant_id","text":"data eegUtils object. participant_id character vector giving name use participant_id particular object. recording character vector giving name use EEG recording.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/get_participant_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query and set elements of the epochs metadata structures — get_participant_id","text":"get_participant_id() returns character vector containing participant_id get_recording() returns character vector containing recording values recording eegUtils object set_participant_id() returns full eegUtils object participant_id field modified epochs structure set_recording() returns full eegUtilsobject recording field modified epochs structure","code":""},{"path":"https://craddm.github.io/eegUtils/reference/get_participant_id.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Query and set elements of the epochs metadata structures — get_participant_id","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/get_participant_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query and set elements of the epochs metadata structures — get_participant_id","text":"","code":"get_participant_id(demo_epochs) #> [1] \"001\" get_recording(demo_epochs) #> [1] NA set_participant_id(demo_epochs, \"002\") #> Epoched EEG data #>  #> Number of channels\t: 11  #> Number of epochs\t: 80  #> Epoch limits\t\t: -0.197 - 0.451 seconds #> Electrode names\t\t: A5 A13 A21 A29 A31 B5 B6 B8 B16 B18 B26  #> Sampling rate\t\t: 128  Hz #> Reference\t\t: average  set_recording(demo_epochs, \"test_recording\") #> Epoched EEG data #>  #> Number of channels\t: 11  #> Number of epochs\t: 80  #> Epoch limits\t\t: -0.197 - 0.451 seconds #> Electrode names\t\t: A5 A13 A21 A29 A31 B5 B6 B8 B16 B18 B26  #> Sampling rate\t\t: 128  Hz #> Reference\t\t: average"},{"path":"https://craddm.github.io/eegUtils/reference/get_scalpmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate an interpolated scalpmap — get_scalpmap","title":"Calculate an interpolated scalpmap — get_scalpmap","text":"Calculate return interpolated scalpmap data.frame eeg_epochs object. provides basis raster plot, used create topographical plots.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/get_scalpmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate an interpolated scalpmap — get_scalpmap","text":"","code":"get_scalpmap(data, ...)  # S3 method for class 'data.frame' get_scalpmap(   data,   method = \"biharmonic\",   grid_res = 100,   interp_limit = \"skirt\",   quantity = \"amplitude\",   facets = NULL,   r = 95,   k = -1,   ... )  # S3 method for class 'eeg_epochs' get_scalpmap(   data,   method = \"biharmonic\",   grid_res = 100,   interp_limit = \"skirt\",   quantity = \"amplitude\",   facets = NULL,   r = 95,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/get_scalpmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate an interpolated scalpmap — get_scalpmap","text":"data object class 'data.frame` ... arguments method \"biharmonic\" \"gam\" smooth grid_res Grid resolution interp_limit Interpolate \"head\" add \"skirt\" quantity Quantity plotted. Defaults \"amplitude\". facets facets plan use r Size headshape k Degrees freedom used spline using method = gam. Defaults -1, attempts automatically determine k.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/get_scalpmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate an interpolated scalpmap — get_scalpmap","text":"tibble columns x, y, fill","code":""},{"path":"https://craddm.github.io/eegUtils/reference/get_scalpmap.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Calculate an interpolated scalpmap — get_scalpmap","text":"get_scalpmap(data.frame): Get scalpmap data.frame get_scalpmap(eeg_epochs): Get scalpmap eeg_epochs object.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/get_scalpmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate an interpolated scalpmap — get_scalpmap","text":"","code":"head(get_scalpmap(demo_epochs)) #> Joining with `by = join_by(electrode)` #> # A tibble: 6 × 3 #>       x     y  fill #>   <dbl> <dbl> <dbl> #> 1 -113. -9.60  5.77 #> 2 -113. -5.76  5.54 #> 3 -113. -1.92  5.33 #> 4 -113.  1.92  5.14 #> 5 -113.  5.76  4.96 #> 6 -113.  9.60  4.81"},{"path":"https://craddm.github.io/eegUtils/reference/import_chans.html","id":null,"dir":"Reference","previous_headings":"","what":"Import channel locations from various file formats — import_chans","title":"Import channel locations from various file formats — import_chans","text":"Currently ASA .elc format Cartesian x-y-z coordinates supported.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_chans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import channel locations from various file formats — import_chans","text":"","code":"import_chans(file_name, format = \"spherical\", file_format = \"auto\")"},{"path":"https://craddm.github.io/eegUtils/reference/import_chans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import channel locations from various file formats — import_chans","text":"file_name Name full path file loaded. format file .elc format, \"spherical\", \"geographic\". Default \"spherical\". file_format Default auto, use file extension determine file format. options include ced, besa, elp, elc","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_chans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import channel locations from various file formats — import_chans","text":"tibble containing electrode names locations several different coordinate systems.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_chans.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import channel locations from various file formats — import_chans","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_cnt.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Neuroscan .CNT file — import_cnt","title":"Import Neuroscan .CNT file — import_cnt","text":"Beta version function import Neuroscan .CNT files. intended import 32-bit files.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_cnt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Neuroscan .CNT file — import_cnt","text":"","code":"import_cnt(file_name)"},{"path":"https://craddm.github.io/eegUtils/reference/import_cnt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Neuroscan .CNT file — import_cnt","text":"file_name Name .CNT file loaded.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_elc.html","id":null,"dir":"Reference","previous_headings":"","what":"Import ASA '.elc' electrode location files — import_elc","title":"Import ASA '.elc' electrode location files — import_elc","text":"Loads process ASA electrode locations. ASA electrode locations given Cartesian XYZ.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_elc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import ASA '.elc' electrode location files — import_elc","text":"","code":"import_elc(file_name)"},{"path":"https://craddm.github.io/eegUtils/reference/import_elc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import ASA '.elc' electrode location files — import_elc","text":"file_name file name","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_elp.html","id":null,"dir":"Reference","previous_headings":"","what":"Import electrode locations from '.elp' file — import_elp","title":"Import electrode locations from '.elp' file — import_elp","text":"'.elp' files BESA.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_elp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import electrode locations from '.elp' file — import_elp","text":"","code":"import_elp(file_name)"},{"path":"https://craddm.github.io/eegUtils/reference/import_elp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import electrode locations from '.elp' file — import_elp","text":"file_name file name '.elp' electrode locations import.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_elp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import electrode locations from '.elp' file — import_elp","text":"tibble containing channel locations.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_erplab.html","id":null,"dir":"Reference","previous_headings":"","what":"Import from ERPLAB .erp files — import_erplab","title":"Import from ERPLAB .erp files — import_erplab","text":"ERPLAB toolbox Event Related Potential analysis associated EEGLAB. exports files Matlab v6.5 format, either .erp .mat extension. Note ERPLAB files can contain data multiple subjects, individual subjects, averaged multiple subjects. files distinguish possibilities, users need apply knowledge contents import correctly.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_erplab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import from ERPLAB .erp files — import_erplab","text":"","code":"import_erplab(   file_name,   df_out = FALSE,   participant_id = NULL,   recording = NULL )"},{"path":"https://craddm.github.io/eegUtils/reference/import_erplab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import from ERPLAB .erp files — import_erplab","text":"file_name Filename (path present working directory) df_out Defaults FALSE - outputs object class eeg_epochs. Set TRUE output data frame. participant_id default, filename used id participant. recording default, filename used name recording.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_erplab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import from ERPLAB .erp files — import_erplab","text":"object class eeg_epochs data.frame.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_erplab.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import from ERPLAB .erp files — import_erplab","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_erplab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import from ERPLAB .erp files — import_erplab","text":"","code":"if (FALSE) import_set(\"your_data.set\") # \\dontrun{}"},{"path":"https://craddm.github.io/eegUtils/reference/import_ft.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Fieldtrip files — import_ft","title":"Import Fieldtrip files — import_ft","text":"Fieldtrip Matlab package EEG/MEG processing analysis.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_ft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Fieldtrip files — import_ft","text":"","code":"import_ft(file_name, participant_id = NULL, recording = NULL, verbose = TRUE)"},{"path":"https://craddm.github.io/eegUtils/reference/import_ft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Fieldtrip files — import_ft","text":"file_name Name file imported. participant_id Identifier participant. recording Name recording. default, filename used. verbose Informative messages printed console. Defaults TRUE.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_ft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Fieldtrip files — import_ft","text":"object class eeg_data, eeg_epochs, eeg_tfr, depending type input data.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_ft.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import Fieldtrip files — import_ft","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_ft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Fieldtrip files — import_ft","text":"","code":"if (FALSE) import_ft(\"fieldtrip_test.mat\") # \\dontrun{}"},{"path":"https://craddm.github.io/eegUtils/reference/import_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for reading raw data. — import_raw","title":"Function for reading raw data. — import_raw","text":"Currently BDF/EDF, 32-bit .CNT, Brain Vision Analyzer files supported. Filetype determined file extension.edfReader package used load BDF/EDF files, whereas custom code used .CNT BVA files. function creates eeg_data structure subsequent use.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for reading raw data. — import_raw","text":"","code":"import_raw(   file_name,   file_path = NULL,   recording = NULL,   participant_id = NA,   fast_bdf = TRUE )"},{"path":"https://craddm.github.io/eegUtils/reference/import_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for reading raw data. — import_raw","text":"file_name File import. include file extension. file_path Path file name, included filename. recording Name recording. default, filename used. participant_id Identifier participant. Defaults NA. fast_bdf New, faster method loading BDF files. Experimental.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for reading raw data. — import_raw","text":"object class eeg_data","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_raw.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function for reading raw data. — import_raw","text":"Matt Craddock, matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for reading raw data. — import_raw","text":"","code":"if (FALSE) { # \\dontrun{ import_raw(\"test_bdf.bdf\") } # }"},{"path":"https://craddm.github.io/eegUtils/reference/import_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Load EEGLAB .set files — import_set","title":"Load EEGLAB .set files — import_set","text":"Load EEGLAB .set files convert eeg_epochs objects. Supports import files saved either Matlab v6.5 Matlab v7.3 formats. Currently, ICA weights decompositions discarded.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load EEGLAB .set files — import_set","text":"","code":"import_set(   file_name,   df_out = FALSE,   participant_id = NULL,   recording = NULL,   drop_custom = FALSE,   verbose = TRUE )"},{"path":"https://craddm.github.io/eegUtils/reference/import_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load EEGLAB .set files — import_set","text":"file_name Filename (path present working directory) df_out Defaults FALSE - outputs object class eeg_epochs. Set TRUE normal data frame. participant_id Character vector. default, filename used id participant. recording Character vector. default, filename used name recording. drop_custom Drop custom event fields. TRUE default. verbose Print informative messages. TRUE default.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load EEGLAB .set files — import_set","text":"object class eeg_epochs","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_set.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load EEGLAB .set files — import_set","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load EEGLAB .set files — import_set","text":"","code":"if (FALSE) import_set(\"your_data.set\") # \\dontrun{}"},{"path":"https://craddm.github.io/eegUtils/reference/import_txt.html","id":null,"dir":"Reference","previous_headings":"","what":"Import electrode locations from text — import_txt","title":"Import electrode locations from text — import_txt","text":"Currently supports locations given spherical coordinates. attempt check file EEGLAB","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import electrode locations from text — import_txt","text":"","code":"import_txt(file_name)"},{"path":"https://craddm.github.io/eegUtils/reference/import_txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import electrode locations from text — import_txt","text":"file_name file name .txt electrode locations import.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_txt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import electrode locations from text — import_txt","text":"data frame containing standard channel_info","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_vhdr.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for importing Brain Vision Analyzer files — import_vhdr","title":"Function for importing Brain Vision Analyzer files — import_vhdr","text":"Function importing Brain Vision Analyzer files","code":""},{"path":"https://craddm.github.io/eegUtils/reference/import_vhdr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for importing Brain Vision Analyzer files — import_vhdr","text":"","code":"import_vhdr(file_name, participant_id, recording)"},{"path":"https://craddm.github.io/eegUtils/reference/import_vhdr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for importing Brain Vision Analyzer files — import_vhdr","text":"file_name file name header file.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/interactive_scalp.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive scalp maps — interactive_scalp","title":"Interactive scalp maps — interactive_scalp","text":"Launches Shiny Gadget interactive version erp_scalp, allowing clicking individual electrodes plot separate panel. panel, can averaged plotted individual electrodes.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/interactive_scalp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive scalp maps — interactive_scalp","text":"","code":"interactive_scalp(data, ...)  # S3 method for class 'eeg_epochs' interactive_scalp(data, colour = NULL, baseline = NULL, montage = NULL, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/interactive_scalp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive scalp maps — interactive_scalp","text":"data EEG dataset. ... Additional arguments colour Variable colour lines . variable passed, one line drawn electrode. baseline Character vector times subtract baseline correction. montage Name existing montage set. Defaults NULL; (currently 'biosemi64alpha' available default 10/20 system)","code":""},{"path":"https://craddm.github.io/eegUtils/reference/interactive_scalp.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Interactive scalp maps — interactive_scalp","text":"interactive_scalp(eeg_epochs): Method eeg_epochs objects","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/reference/interactive_scalp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interactive scalp maps — interactive_scalp","text":"Matt Craddock, matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/interp_chans.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate channels — interp_chans","title":"Interpolate channels — interp_chans","text":"Interpolate channels","code":""},{"path":"https://craddm.github.io/eegUtils/reference/interp_chans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate channels — interp_chans","text":"","code":"interp_chans(.data, bad_chans, missing_coords = FALSE, weights)"},{"path":"https://craddm.github.io/eegUtils/reference/interp_chans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate channels — interp_chans","text":".data Channel data containing data bad_chans Vector names bad channels missing_coords Logical vector indicating channels data associated coordinates weights Spherical spline weights interpolation","code":""},{"path":"https://craddm.github.io/eegUtils/reference/interp_elecs.html","id":null,"dir":"Reference","previous_headings":"","what":"Channel interpolation — interp_elecs","title":"Channel interpolation — interp_elecs","text":"Interpolate EEG channels using spherical spline (Perrin et al., 1989; 1990). data must channel locations attached.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/interp_elecs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Channel interpolation — interp_elecs","text":"","code":"interp_elecs(data, bad_elecs, ...)  # S3 method for class 'eeg_data' interp_elecs(data, bad_elecs, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/interp_elecs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Channel interpolation — interp_elecs","text":"data Data eeg_data eeg_epochs object. bad_elecs Name(s) electrode(s) interpolate. ... parameters passed functions.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/interp_elecs.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Channel interpolation — interp_elecs","text":"interp_elecs(eeg_data): Interpolate EEG channel(s)","code":""},{"path":"https://craddm.github.io/eegUtils/reference/interp_elecs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Channel interpolation — interp_elecs","text":"Perrin, F., Pernier, J., Bertrand, O., & Echallier, J. F. (1989). Spherical splines scalp potential current density mapping. Electroencephalography Clinical Neurophysiology, 72, 184-187 Perrin, F., Pernier, J., Bertrand, O., & Echallier, J. F. (1990). Corrigenda EEG 02274. Electroencephalography Clinical Neurophysiology, 76, 565","code":""},{"path":"https://craddm.github.io/eegUtils/reference/interp_elecs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Channel interpolation — interp_elecs","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_ICA.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is of class eeg_ICA — is.eeg_ICA","title":"Check if object is of class eeg_ICA — is.eeg_ICA","text":"Check object class eeg_ICA","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_ICA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is of class eeg_ICA — is.eeg_ICA","text":"","code":"is.eeg_ICA(x)"},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_ICA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is of class eeg_ICA — is.eeg_ICA","text":"x Object check.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_ICA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if object is of class eeg_ICA — is.eeg_ICA","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is of class eeg_data. — is.eeg_data","title":"Check if object is of class eeg_data. — is.eeg_data","text":"Check object class eeg_data.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is of class eeg_data. — is.eeg_data","text":"","code":"is.eeg_data(x)"},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is of class eeg_data. — is.eeg_data","text":"x Object check.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if object is of class eeg_data. — is.eeg_data","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_epochs.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is of class eeg_epochs. — is.eeg_epochs","title":"Check if object is of class eeg_epochs. — is.eeg_epochs","text":"Check object class eeg_epochs.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_epochs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is of class eeg_epochs. — is.eeg_epochs","text":"","code":"is.eeg_epochs(x)"},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_epochs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is of class eeg_epochs. — is.eeg_epochs","text":"x Object check.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_epochs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if object is of class eeg_epochs. — is.eeg_epochs","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_evoked.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is of class eeg_evoked — is.eeg_evoked","title":"Check if object is of class eeg_evoked — is.eeg_evoked","text":"Check object class eeg_evoked","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_evoked.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is of class eeg_evoked — is.eeg_evoked","text":"","code":"is.eeg_evoked(x)"},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_evoked.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is of class eeg_evoked — is.eeg_evoked","text":"x Object check.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_evoked.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if object is of class eeg_evoked — is.eeg_evoked","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is of class eeg_group — is.eeg_group","title":"Check if object is of class eeg_group — is.eeg_group","text":"Check object class eeg_group","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is of class eeg_group — is.eeg_group","text":"","code":"is.eeg_group(x)"},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is of class eeg_group — is.eeg_group","text":"x Object check.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is of class eeg_stats — is.eeg_stats","title":"Check if object is of class eeg_stats — is.eeg_stats","text":"Check object class eeg_stats","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is of class eeg_stats — is.eeg_stats","text":"","code":"is.eeg_stats(x)"},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is of class eeg_stats — is.eeg_stats","text":"x Object check.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_tfr.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is of class eeg_tfr — is.eeg_tfr","title":"Check if object is of class eeg_tfr — is.eeg_tfr","text":"Check object class eeg_tfr","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_tfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is of class eeg_tfr — is.eeg_tfr","text":"","code":"is.eeg_tfr(x)"},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_tfr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is of class eeg_tfr — is.eeg_tfr","text":"x Object check.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/is.eeg_tfr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if object is of class eeg_tfr — is.eeg_tfr","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/kurtosis.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate kurtosis — kurtosis","title":"Calculate kurtosis — kurtosis","text":"Calculate kurtosis","code":""},{"path":"https://craddm.github.io/eegUtils/reference/kurtosis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate kurtosis — kurtosis","text":"","code":"kurtosis(data)"},{"path":"https://craddm.github.io/eegUtils/reference/kurtosis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate kurtosis — kurtosis","text":"data Data calculate kurtosis ","code":""},{"path":"https://craddm.github.io/eegUtils/reference/label_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check consistency of labels — label_check","title":"Check consistency of labels — label_check","text":"Internal function checking 1) whether labels submitted mixture hierarchical non-hierarchical types 2) whether labels submitted present data","code":""},{"path":"https://craddm.github.io/eegUtils/reference/label_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check consistency of labels — label_check","text":"","code":"label_check(cond_labs, data_labs)"},{"path":"https://craddm.github.io/eegUtils/reference/label_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check consistency of labels — label_check","text":"cond_labs labels submitted user data_labs labels actual data","code":""},{"path":"https://craddm.github.io/eegUtils/reference/label_check.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check consistency of labels — label_check","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/legendre_polynomials.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Legendre polynomials up to degree n — legendre_polynomials","title":"Calculate Legendre polynomials up to degree n — legendre_polynomials","text":"Calculate Legendre polynomials degree n","code":""},{"path":"https://craddm.github.io/eegUtils/reference/legendre_polynomials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Legendre polynomials up to degree n — legendre_polynomials","text":"","code":"legendre_polynomials(n, x)"},{"path":"https://craddm.github.io/eegUtils/reference/legendre_polynomials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Legendre polynomials up to degree n — legendre_polynomials","text":"n Maximum degree Legendre polynomials x Input values","code":""},{"path":"https://craddm.github.io/eegUtils/reference/legendre_polynomials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Legendre polynomials up to degree n — legendre_polynomials","text":"Matrix Legendre polynomial values","code":""},{"path":"https://craddm.github.io/eegUtils/reference/list_epochs.html","id":null,"dir":"Reference","previous_headings":"","what":"List epochs — list_epochs","title":"List epochs — list_epochs","text":"List trigger types labels found eeg_epochs object.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/list_epochs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List epochs — list_epochs","text":"","code":"list_epochs(data, ...)  # S3 method for class 'eeg_epochs' list_epochs(data, ...)  # S3 method for class 'eeg_ICA' list_epochs(data, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/list_epochs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List epochs — list_epochs","text":"data object class eeg_epochs ... Additional arguments","code":""},{"path":"https://craddm.github.io/eegUtils/reference/list_epochs.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"List epochs — list_epochs","text":"list_epochs(eeg_epochs): List epochs associated events eeg_epochs objects list_epochs(eeg_ICA): List epochs associated events eeg_ICA objects","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/reference/list_epochs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"List epochs — list_epochs","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/list_events.html","id":null,"dir":"Reference","previous_headings":"","what":"List events — list_events","title":"List events — list_events","text":"List trigger types labels found eeg_data object.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/list_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List events — list_events","text":"","code":"list_events(data)"},{"path":"https://craddm.github.io/eegUtils/reference/list_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List events — list_events","text":"data object class eeg_data","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/reference/list_events.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"List events — list_events","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/list_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List events — list_events","text":"","code":"list_events(demo_epochs) #>   event_type #> 1        208 #> 2        213 #> 3        215 #> 4        207 #> 5        222 #> 6        219"},{"path":"https://craddm.github.io/eegUtils/reference/make_head.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a headshape — make_head","title":"Create a headshape — make_head","text":"Create headshape","code":""},{"path":"https://craddm.github.io/eegUtils/reference/make_head.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a headshape — make_head","text":"","code":"make_head(r)"},{"path":"https://craddm.github.io/eegUtils/reference/make_l_ear.html","id":null,"dir":"Reference","previous_headings":"","what":"Make left ear — make_l_ear","title":"Make left ear — make_l_ear","text":"Make left ear","code":""},{"path":"https://craddm.github.io/eegUtils/reference/make_l_ear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make left ear — make_l_ear","text":"","code":"make_l_ear(r)"},{"path":"https://craddm.github.io/eegUtils/reference/make_l_ear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make left ear — make_l_ear","text":"r Radius head","code":""},{"path":"https://craddm.github.io/eegUtils/reference/make_r_ear.html","id":null,"dir":"Reference","previous_headings":"","what":"Make right ear — make_r_ear","title":"Make right ear — make_r_ear","text":"Make right ear","code":""},{"path":"https://craddm.github.io/eegUtils/reference/make_r_ear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make right ear — make_r_ear","text":"","code":"make_r_ear(r)"},{"path":"https://craddm.github.io/eegUtils/reference/make_r_ear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make right ear — make_r_ear","text":"r Radius head","code":""},{"path":"https://craddm.github.io/eegUtils/reference/montage_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Montage check — montage_check","title":"Montage check — montage_check","text":"Montage check","code":""},{"path":"https://craddm.github.io/eegUtils/reference/montage_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Montage check — montage_check","text":"","code":"montage_check(montage)"},{"path":"https://craddm.github.io/eegUtils/reference/montage_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Montage check — montage_check","text":"montage Name montage","code":""},{"path":"https://craddm.github.io/eegUtils/reference/morlet.html","id":null,"dir":"Reference","previous_headings":"","what":"Morlet wavelet — morlet","title":"Morlet wavelet — morlet","text":"Generate Morlet wavelet family","code":""},{"path":"https://craddm.github.io/eegUtils/reference/morlet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Morlet wavelet — morlet","text":"","code":"morlet(frex, srate, n_cycles, n_freq, gauss_width = 3)"},{"path":"https://craddm.github.io/eegUtils/reference/morlet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Morlet wavelet — morlet","text":"frex Frequency range interest srate Sampling rate signal n_cycles Length wavelet cycles n_freq number frequencies resolve gauss_width Size filter kernel standard deviations","code":""},{"path":"https://craddm.github.io/eegUtils/reference/morlet_res.html","id":null,"dir":"Reference","previous_headings":"","what":"Morlet wavelet resolutions — morlet_res","title":"Morlet wavelet resolutions — morlet_res","text":"Calculate frequency temporal standard deviations Morlet wavelets","code":""},{"path":"https://craddm.github.io/eegUtils/reference/morlet_res.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Morlet wavelet resolutions — morlet_res","text":"","code":"morlet_res(frex, n_cycles)"},{"path":"https://craddm.github.io/eegUtils/reference/morlet_res.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Morlet wavelet resolutions — morlet_res","text":"frex Frequencies interest n_cycles Number cycles frequency","code":""},{"path":"https://craddm.github.io/eegUtils/reference/norm_sphere.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize 3d Cartesian co-ordinates to unit sphere — norm_sphere","title":"Normalize 3d Cartesian co-ordinates to unit sphere — norm_sphere","text":"Normalize 3d Cartesian co-ordinates unit sphere","code":""},{"path":"https://craddm.github.io/eegUtils/reference/norm_sphere.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize 3d Cartesian co-ordinates to unit sphere — norm_sphere","text":"","code":"norm_sphere(xyz_coords)"},{"path":"https://craddm.github.io/eegUtils/reference/norm_sphere.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize 3d Cartesian co-ordinates to unit sphere — norm_sphere","text":"xyz_coords 3D Cartesian electrode locations","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ortho_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Orthographic electrode projection — ortho_norm","title":"Orthographic electrode projection — ortho_norm","text":"Produce set x y coordinates plotting 3D Cartesian coordinates. orthographic projection 3D coordinates, resulting bunching electrodes reaches head.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ortho_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Orthographic electrode projection — ortho_norm","text":"","code":"ortho_norm(chan_info)"},{"path":"https://craddm.github.io/eegUtils/reference/ortho_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Orthographic electrode projection — ortho_norm","text":"chan_info Channel information eegUtils objects","code":""},{"path":"https://craddm.github.io/eegUtils/reference/ortho_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Orthographic electrode projection — ortho_norm","text":"data.frame x y columns indictating electrode positions mm","code":""},{"path":"https://craddm.github.io/eegUtils/reference/pad.html","id":null,"dir":"Reference","previous_headings":"","what":"Pad a vector with zeros — pad","title":"Pad a vector with zeros — pad","text":"Pads vector zeros beginning end.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/pad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pad a vector with zeros — pad","text":"","code":"pad(x, n, startval = 0, endval = 0)"},{"path":"https://craddm.github.io/eegUtils/reference/pad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pad a vector with zeros — pad","text":"x vector pad n number zeros pad startval value add start vector - defaults zero endval value add end vector - defaults zero","code":""},{"path":"https://craddm.github.io/eegUtils/reference/parse_args.html","id":null,"dir":"Reference","previous_headings":"","what":"This function checks which elements of the object need to be accessed/filtered — parse_args","title":"This function checks which elements of the object need to be accessed/filtered — parse_args","text":"function checks elements object need accessed/filtered","code":""},{"path":"https://craddm.github.io/eegUtils/reference/parse_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function checks which elements of the object need to be accessed/filtered — parse_args","text":"","code":"parse_args(arg_list, data)"},{"path":"https://craddm.github.io/eegUtils/reference/parse_chaninfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse channel info from an EEGLAB set file — parse_chaninfo","title":"Parse channel info from an EEGLAB set file — parse_chaninfo","text":"Internal function convert EEGLAB chan_info eegUtils style","code":""},{"path":"https://craddm.github.io/eegUtils/reference/parse_chaninfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse channel info from an EEGLAB set file — parse_chaninfo","text":"","code":"parse_chaninfo(chan_info, drop = FALSE)"},{"path":"https://craddm.github.io/eegUtils/reference/parse_chaninfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse channel info from an EEGLAB set file — parse_chaninfo","text":"chan_info Channel info list EEGLAB set file drop additional columns, remove columns except electrode TRUE, just unexpected columns FALSE.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/parse_filt_freqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse filter frequency input — parse_filt_freqs","title":"Parse filter frequency input — parse_filt_freqs","text":"Parses frequencies input user, converting fraction sampling rate setting filter type (low-pass, high-pass, band-pass, band-stop) appropriately.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/parse_filt_freqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse filter frequency input — parse_filt_freqs","text":"","code":"parse_filt_freqs(low_freq, high_freq, srate, method)"},{"path":"https://craddm.github.io/eegUtils/reference/parse_filt_freqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse filter frequency input — parse_filt_freqs","text":"low_freq low frequency cutoff (Hz) high_freq High frequency cutoff (Hz) srate Sampling rate (Hz) method \"iir\" \"fir\" method.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/parse_for_bf.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse data for butterfly plots — parse_for_bf","title":"Parse data for butterfly plots — parse_for_bf","text":"Internal command parsing various data structures suitable format plot_butterfly","code":""},{"path":"https://craddm.github.io/eegUtils/reference/parse_for_bf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse data for butterfly plots — parse_for_bf","text":"","code":"parse_for_bf(data, time_lim = NULL, baseline = NULL, quantity = \"coefficients\")"},{"path":"https://craddm.github.io/eegUtils/reference/parse_for_bf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse data for butterfly plots — parse_for_bf","text":"data data parsed time_lim time limits returned. baseline baseline times average subtracted","code":""},{"path":"https://craddm.github.io/eegUtils/reference/parse_for_tc.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse data for timecourses — parse_for_tc","title":"Parse data for timecourses — parse_for_tc","text":"Internal command parsing various data structures suitable format tc_plot","code":""},{"path":"https://craddm.github.io/eegUtils/reference/parse_for_tc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse data for timecourses — parse_for_tc","text":"","code":"parse_for_tc(   data,   time_lim,   electrode,   baseline,   add_CI,   facets,   mapping,   colour )"},{"path":"https://craddm.github.io/eegUtils/reference/parse_for_tc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse data for timecourses — parse_for_tc","text":"data data parsed time_lim time limits returned. electrode electrodes selected baseline baseline times average subtracted add_CI Logical whether CIS required facets RHS-formula use ggplot2::facet_wrap mapping ggplot2 aes() call axis mappings colour character vector indicating variable use colour.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/parse_vhdr_chans.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse BVA channel info — parse_vhdr_chans","title":"Parse BVA channel info — parse_vhdr_chans","text":"Parse BVA channel info","code":""},{"path":"https://craddm.github.io/eegUtils/reference/parse_vhdr_chans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse BVA channel info — parse_vhdr_chans","text":"","code":"parse_vhdr_chans(chan_labels, chan_info, verbose = TRUE)"},{"path":"https://craddm.github.io/eegUtils/reference/parse_vhdr_chans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse BVA channel info — parse_vhdr_chans","text":"chan_labels Channel Infos section BVA vhdr file chan_info Coordinates section BVA vhdr file","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_butterfly.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a butterfly plot from timecourse data — plot_butterfly","title":"Create a butterfly plot from timecourse data — plot_butterfly","text":"Typically event-related potentials/fields, also timecourses frequency analyses single frequencies. Output ggplot2 object. CIs possible.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_butterfly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a butterfly plot from timecourse data — plot_butterfly","text":"","code":"plot_butterfly(data, ...)  # Default S3 method plot_butterfly(   data,   time_lim = NULL,   baseline = NULL,   legend = TRUE,   continuous = FALSE,   browse_mode = FALSE,   allow_facets = FALSE,   ... )  # S3 method for class 'eeg_evoked' plot_butterfly(   data,   time_lim = NULL,   baseline = NULL,   legend = TRUE,   continuous = FALSE,   browse_mode = FALSE,   allow_facets = FALSE,   ... )  # S3 method for class 'eeg_data' plot_butterfly(   data,   time_lim = NULL,   baseline = NULL,   legend = TRUE,   allow_facets = FALSE,   browse_mode = FALSE,   ... )  # S3 method for class 'eeg_epochs' plot_butterfly(   data,   time_lim = NULL,   baseline = NULL,   legend = TRUE,   allow_facets = FALSE,   browse_mode = FALSE,   ... )  # S3 method for class 'eeg_stats' plot_butterfly(   data,   time_lim = NULL,   baseline = NULL,   legend = TRUE,   allow_facets = FALSE,   browse_mode = FALSE,   quantity = \"statistic\",   ... )  # S3 method for class 'eeg_lm' plot_butterfly(   data,   time_lim = NULL,   baseline = NULL,   legend = TRUE,   allow_facets = FALSE,   browse_mode = FALSE,   quantity = \"coefficients\",   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/plot_butterfly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a butterfly plot from timecourse data — plot_butterfly","text":"data EEG dataset. multiple timepoints. ... parameters passed plot_butterfly time_lim Character vector. Numbers whatever time unit used specifying beginning end time-range plot. e.g. c(-.1,.3) baseline Character vector. Times use baseline. Takes mean specified period subtracts. e.g. c(-.1, 0) legend Include plot legend. Defaults TRUE. continuous data continuous (.e. epoched) browse_mode Applies custom theme used browse_data(). allow_facets Allow use ggplot2 facetting. See note . Defaults FALSE. quantity aspect linear model want plotted. applies eeg_lm objects","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_butterfly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a butterfly plot from timecourse data — plot_butterfly","text":"ggplot2 object showing ERPs electrodes overlaid single plot.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_butterfly.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Create a butterfly plot from timecourse data — plot_butterfly","text":"plot_butterfly(default): Default plot_butterfly method data.frames, eeg_data plot_butterfly(eeg_evoked): Plot butterfly eeg_evoked objects plot_butterfly(eeg_data): Create butterfly plot eeg_data objects plot_butterfly(eeg_epochs): Create butterfly plot eeg_epochs objects plot_butterfly(eeg_stats): Create butterfly plot eeg_stats objects plot_butterfly(eeg_lm): Create butterfly plot eeg_lm objects","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_butterfly.html","id":"notes-on-ggplot-facetting","dir":"Reference","previous_headings":"","what":"Notes on ggplot2 facetting","title":"Create a butterfly plot from timecourse data — plot_butterfly","text":"order ggplot2 facetting work, data plotted using stat_summary() rather geom_line(), plots can still made categorical variables reflected facets. e.g. two variables two levels , want average one variables, stat_summary() required. However, stat_summary() can extremely slow large number timepoints, electrodes, epochs.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_butterfly.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a butterfly plot from timecourse data — plot_butterfly","text":"Matt Craddock, matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_butterfly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a butterfly plot from timecourse data — plot_butterfly","text":"","code":"plot_butterfly(demo_epochs) #> Creating epochs based on combinations of variables: epoch_label participant_id   plot_butterfly(demo_epochs, time_lim = c(-.1, .4), legend = FALSE) #> Creating epochs based on combinations of variables: epoch_label participant_id"},{"path":"https://craddm.github.io/eegUtils/reference/plot_difference.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ERP difference waves — plot_difference","title":"Plot ERP difference waves — plot_difference","text":"Calculates difference event-related potentials two conditions plots .","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_difference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ERP difference waves — plot_difference","text":"","code":"plot_difference(data, ...)  # S3 method for class 'eeg_epochs' plot_difference(   data,   electrode = NULL,   time_lim = NULL,   baseline = NULL,   colour = NULL,   color = NULL,   mapping = NULL,   conditions = \"epoch_labels\",   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/plot_difference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ERP difference waves — plot_difference","text":"data eegUtils object. multiple timepoints. ... arguments passed methods. electrode Electrode(s) plot. time_lim Character vector. Numbers whatever time unit used specifying beginning end time-range plot. e.g. c(-.1, .3) baseline Character vector. Times use baseline. Takes mean specified period subtracts. e.g. c(-.1,0) colour Variable colour lines . variable passed, one line drawn. color Alias colour. mapping ggplot2 aes() mapping. conditions Defaults \"epoch_labels\".","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_difference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ERP difference waves — plot_difference","text":"Returns ggplot2 plot object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_difference.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Plot ERP difference waves — plot_difference","text":"plot_difference(eeg_epochs): Plot ERP difference wave eeg_epochs object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_difference.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot ERP difference waves — plot_difference","text":"Matt Craddock, matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_difference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot ERP difference waves — plot_difference","text":"","code":"plot_difference(demo_spatial, conditions = \"epoch_labels\", electrode = \"P8\") #> Creating epochs based on combinations of variables: participant_id epoch_labels"},{"path":"https://craddm.github.io/eegUtils/reference/plot_electrodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot electrode locations — plot_electrodes","title":"Plot electrode locations — plot_electrodes","text":"Produces either 2D plot electrode locations interactive plot electrode locations 3D space.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_electrodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot electrode locations — plot_electrodes","text":"","code":"plot_electrodes(data, interact = FALSE)  # Default S3 method plot_electrodes(data, interact = FALSE)  # S3 method for class 'eeg_data' plot_electrodes(data, interact = FALSE)  # S3 method for class 'eeg_evoked' plot_electrodes(data, interact = FALSE)  # S3 method for class 'eeg_tfr' plot_electrodes(data, interact = FALSE)"},{"path":"https://craddm.github.io/eegUtils/reference/plot_electrodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot electrode locations — plot_electrodes","text":"data Data associated electrode locations plotted. interact Choose 2D cartesian layout, , set TRUE, interactive 3D plot electrode locations. Defaults FALSE.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_electrodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot electrode locations — plot_electrodes","text":"ggplot plotly figure showing locations electrodes","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_electrodes.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Plot electrode locations — plot_electrodes","text":"plot_electrodes(default): generic plot electrodes function plot_electrodes(eeg_data): Plot electrodes associated eeg_data object. plot_electrodes(eeg_evoked): Plot electrodes associated eeg_evoked object. plot_electrodes(eeg_tfr): Plot electrodes associated eeg_data object.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_electrodes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot electrode locations — plot_electrodes","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_electrodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot electrode locations — plot_electrodes","text":"","code":"plot_electrodes(demo_epochs)"},{"path":"https://craddm.github.io/eegUtils/reference/plot_gfp.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Global Field Power of EEG Signals — plot_gfp","title":"Plot Global Field Power of EEG Signals — plot_gfp","text":"Global Field Power (Lehmann & Skrandies, 1980) way quantify amount activity overall electroencephalographic signal given timepoint. corresponds spatial standard deviation.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_gfp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Global Field Power of EEG Signals — plot_gfp","text":"","code":"plot_gfp(data, cols = NULL, keep_trials = FALSE)"},{"path":"https://craddm.github.io/eegUtils/reference/plot_gfp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Global Field Power of EEG Signals — plot_gfp","text":"data eeg_epochs object cols Condition columns epochs metadata calculate GFP separately different conditions. keep_trials Calculate GFP epoch separately, average epochs.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_gfp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Global Field Power of EEG Signals — plot_gfp","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_gfp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Global Field Power of EEG Signals — plot_gfp","text":"","code":"plot_gfp(demo_spatial) #> Creating epochs based on combinations of variables: participant_id   plot_gfp(demo_spatial, keep_trials = TRUE)  plot_gfp(demo_spatial, cols = \"epoch_labels\") #> Creating epochs based on combinations of variables: participant_id epoch_labels   plot_gfp(demo_spatial, cols = \"epoch_labels\", keep_trials = TRUE)"},{"path":"https://craddm.github.io/eegUtils/reference/plot_psd.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Power Spectral Density — plot_psd","title":"Plot Power Spectral Density — plot_psd","text":"Calculate plot PSD eeg_* objects. Output units dB. PSD calculated using Welch's method.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_psd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Power Spectral Density — plot_psd","text":"","code":"plot_psd(data, freq_range = NULL, ...)  # S3 method for class 'eeg_epochs' plot_psd(   data,   freq_range = NULL,   n_fft = 256,   seg_length = NULL,   noverlap = NULL,   demean = TRUE,   keep_trials = TRUE,   ... )  # S3 method for class 'eeg_data' plot_psd(   data,   freq_range = NULL,   n_fft = 2048,   noverlap = NULL,   seg_length = NULL,   ... )  # S3 method for class 'eeg_ICA' plot_psd(   data,   freq_range = NULL,   components = NULL,   seg_length = NULL,   noverlap = NULL,   n_fft = 256,   ... )  # S3 method for class 'data.frame' plot_psd(data, freq_range = NULL, ...)  # S3 method for class 'eeg_evoked' plot_psd(   data,   freq_range = NULL,   n_fft = 256,   seg_length = NULL,   noverlap = NULL,   keep_trials = TRUE,   ... )  # S3 method for class 'eeg_group' plot_psd(   data,   freq_range = NULL,   n_fft = 256,   seg_length = NULL,   noverlap = NULL,   demean = TRUE,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/plot_psd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Power Spectral Density — plot_psd","text":"data Object class eeg_epochs, eeg_data, eeg_ICA. freq_range Vector lower upper frequencies plot. (e.g. c(1, 40)) ... Additional parameters. n_fft Number points use underlying FFTs. Defaults 256 eeg_epochs minimum 2048 signal length eeg_data. seg_length Length individual segments. Defaults n_fft. Must <= n_fft. noverlap Amount overlap segments, sampling points. Defaults 50%. demean Remove epoch means FFT. keep_trials Whether keep trial information output average trials components components compute PSD . Defaults .","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_psd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Power Spectral Density — plot_psd","text":"ggplot object.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_psd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Power Spectral Density — plot_psd","text":"Welch's method splits data multiple segments averages segments. epoched data, Welch's FFT calculated separately trial. Specific parameters number FFT points amount overlap segments can passed Welch's FFT.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_psd.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Plot Power Spectral Density — plot_psd","text":"plot_psd(eeg_epochs): Plot PSD eeg_epochs. plot_psd(eeg_data): Plot PSD eeg_data. plot_psd(eeg_ICA): Plot PSD eeg_ICA objects plot_psd(data.frame): Plot PSD data.frames. plot_psd(eeg_evoked): Plot PSD eeg_evoked objects plot_psd(eeg_group): Plot PSD eeg_group objects currently supported","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_psd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Power Spectral Density — plot_psd","text":"Matt Craddock, matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_psd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Power Spectral Density — plot_psd","text":"","code":"plot_psd(demo_epochs) #> Removing channel means per epoch... #> Computing Power Spectral Density using Welch's method. #> FFT length: 256 #> Segment length: 84 #> Overlapping points: 42 (50% overlap)   plot_psd(demo_epochs, seg_length = 256) #> Removing channel means per epoch... #> Computing Power Spectral Density using Welch's method. #> FFT length: 256 #> Segment length: 84 #> Overlapping points: 42 (50% overlap)"},{"path":"https://craddm.github.io/eegUtils/reference/plot_tfr.html","id":null,"dir":"Reference","previous_headings":"","what":"Time-frequency plot — plot_tfr","title":"Time-frequency plot — plot_tfr","text":"Creates time-frequency plot eeg_tfr object. plot time x-axis frequency y-axis. electrode supplied, average electrodes.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_tfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time-frequency plot — plot_tfr","text":"","code":"plot_tfr(   data,   electrode = NULL,   time_lim = NULL,   freq_range = NULL,   baseline_type = \"none\",   baseline = NULL,   fill_lims = NULL,   interpolate = FALSE,   na.rm = TRUE,   fun.data = mean )"},{"path":"https://craddm.github.io/eegUtils/reference/plot_tfr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time-frequency plot — plot_tfr","text":"data Object class eeg_tfr electrode Electrode plot. none supplied, averages electrodes. time_lim Time limits plot. freq_range Vector two numbers. (e.g. c(8, 40)). baseline_type baseline correction apply. Defaults none. baseline Baseline period fill_lims Custom colour scale (.e. range power). e.g. c(-5, 5). interpolate Interpolation raster smoother plotting. na.rm Remove NA values silently (TRUE) warning (FALSE). Defaults TRUE. fun.data Statistical function use averaging electrodes/conditions. Defaults mean. Alternatively, supply weighted.mean, attempt weight separate conditions appropriately.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_tfr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time-frequency plot — plot_tfr","text":"ggplot object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_tfr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Time-frequency plot — plot_tfr","text":"Various different baseline options can applied (e.g. \"db\" decibels, \"pc\" percent change, \"divide\" division; see rm_baseline details).","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/reference/plot_tfr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Time-frequency plot — plot_tfr","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_timecourse.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot one-dimensional timecourse data. — plot_timecourse","title":"Plot one-dimensional timecourse data. — plot_timecourse","text":"Typically event-related potentials/fields, also timecourses frequency analyses single frequencies. Averages submitted electrodes. group data, plot_timecourse average within-participants first, using weighted averaging possible, across participants using unweighted averaging. Output ggplot2 object.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_timecourse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot one-dimensional timecourse data. — plot_timecourse","text":"","code":"plot_timecourse(data, ...)  # S3 method for class 'data.frame' plot_timecourse(   data,   electrode = NULL,   time_lim = NULL,   add_CI = FALSE,   baseline = NULL,   colour = NULL,   color = NULL,   mapping = NULL,   facets = NULL,   ... )  # S3 method for class 'eeg_evoked' plot_timecourse(   data,   electrode = NULL,   time_lim = NULL,   add_CI = FALSE,   baseline = NULL,   colour = NULL,   color = NULL,   mapping = NULL,   facets = NULL,   ... )  # S3 method for class 'eeg_ICA' plot_timecourse(   data,   component = NULL,   time_lim = NULL,   add_CI = FALSE,   baseline = NULL,   colour = NULL,   color = NULL,   mapping = NULL,   facets = NULL,   ... )  # S3 method for class 'eeg_epochs' plot_timecourse(   data,   electrode = NULL,   time_lim = NULL,   add_CI = FALSE,   baseline = NULL,   colour = NULL,   color = NULL,   mapping = NULL,   facets = NULL,   ... )  # S3 method for class 'eeg_group' plot_timecourse(   data,   electrode = NULL,   time_lim = NULL,   add_CI = FALSE,   baseline = NULL,   colour = NULL,   color = NULL,   mapping = NULL,   facets = NULL,   ... )  # S3 method for class 'eeg_tfr' plot_timecourse(   data,   electrode = NULL,   time_lim = NULL,   add_CI = FALSE,   baseline = NULL,   colour = NULL,   color = NULL,   mapping = NULL,   freq_range = NULL,   type = \"divide\",   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/plot_timecourse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot one-dimensional timecourse data. — plot_timecourse","text":"data EEG dataset. multiple timepoints. ... arguments passed methods. electrode Electrode(s) plot. time_lim Character vector. Numbers whatever time unit used specifying beginning end time-range plot. e.g. c(-.1, .3) add_CI Add confidence intervals graph. Defaults 95 percent -subject CIs. baseline Character vector. Times use baseline. Takes mean specified period subtracts. e.g. c(-.1,0) colour Variable colour lines . variable passed, one line drawn. color Alias colour. mapping ggplot2 aes() mapping. facets right-hand-side formula specifying variables used create facets. component name number ICA component plot freq_range Choose specific frequency range plot. NULL, calculates mean frequencies. Note imply power included frequency. example, lower frequencies shorter timecourses high frequencies. type Type baseline correction use eeg_tfr objects","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_timecourse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot one-dimensional timecourse data. — plot_timecourse","text":"Returns ggplot2 plot object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_timecourse.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Plot one-dimensional timecourse data. — plot_timecourse","text":"plot_timecourse(data.frame): Plot data.frame timecourse plot_timecourse(eeg_evoked): plot eeg_evoked timecourses plot_timecourse(eeg_ICA): Plot individual components eeg_ICA components plot_timecourse(eeg_epochs): Plot timecourses eeg_epochs objects. plot_timecourse(eeg_group): Plot timecourses eeg_group objects. plot_timecourse(eeg_tfr): Plot timecourses eeg_tfr objects.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_timecourse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot one-dimensional timecourse data. — plot_timecourse","text":"Matt Craddock, matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/plot_timecourse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot one-dimensional timecourse data. — plot_timecourse","text":"","code":"library(ggplot2) plot_timecourse(demo_epochs, \"A29\") #> Creating epochs based on combinations of variables: participant_id   plot_timecourse(demo_epochs, \"A29\", baseline = c(-.1, 0)) #> Baseline: -0.1 - 0s #> Creating epochs based on combinations of variables: participant_id   plot_timecourse(demo_epochs, \"A29\", baseline = c(-.1, 0), add_CI = TRUE) #> Baseline: -0.1 - 0s  plot_timecourse(demo_spatial, \"Oz\", baseline = c(-.1, 0), mapping = aes(colour = epoch_labels)) #> Baseline: -0.1 - 0s #> Creating epochs based on combinations of variables: participant_id epoch_labels   plot_timecourse(demo_spatial, \"Oz\", baseline = c(-.1, 0), facets = ~epoch_labels) #> Baseline: -0.1 - 0s #> Creating epochs based on combinations of variables: participant_id epoch_labels"},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_ICA.html","id":null,"dir":"Reference","previous_headings":"","what":"Print eeg_epochs summary — print.eeg_ICA","title":"Print eeg_epochs summary — print.eeg_ICA","text":"Print basic summary contents eeg_epochs object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_ICA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print eeg_epochs summary — print.eeg_ICA","text":"","code":"# S3 method for class 'eeg_ICA' print(x, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_ICA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print eeg_epochs summary — print.eeg_ICA","text":"x eeg_epochs object printed ... arguments passed","code":""},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Print eeg_data summary — print.eeg_data","title":"Print eeg_data summary — print.eeg_data","text":"Print basic summary contents eeg_data object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print eeg_data summary — print.eeg_data","text":"","code":"# S3 method for class 'eeg_data' print(x, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print eeg_data summary — print.eeg_data","text":"x eeg_data object printed ... arguments passed","code":""},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_epochs.html","id":null,"dir":"Reference","previous_headings":"","what":"Print eeg_epochs summary — print.eeg_epochs","title":"Print eeg_epochs summary — print.eeg_epochs","text":"Print basic summary contents eeg_epochs object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_epochs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print eeg_epochs summary — print.eeg_epochs","text":"","code":"# S3 method for class 'eeg_epochs' print(x, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_epochs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print eeg_epochs summary — print.eeg_epochs","text":"x eeg_epochs object printed ... arguments passed","code":""},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_evoked.html","id":null,"dir":"Reference","previous_headings":"","what":"Print eeg_evoked summary — print.eeg_evoked","title":"Print eeg_evoked summary — print.eeg_evoked","text":"Print basic summary contents eeg_epochs object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_evoked.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print eeg_evoked summary — print.eeg_evoked","text":"","code":"# S3 method for class 'eeg_evoked' print(x, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_evoked.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print eeg_evoked summary — print.eeg_evoked","text":"x eeg_epochs object printed ... arguments passed","code":""},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Print eeg_group summary — print.eeg_group","title":"Print eeg_group summary — print.eeg_group","text":"Print basic summary contents eeg_group object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print eeg_group summary — print.eeg_group","text":"","code":"# S3 method for class 'eeg_group' print(x, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print eeg_group summary — print.eeg_group","text":"x eeg_group object printed ... arguments passed","code":""},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Print eeg_lm summary — print.eeg_lm","title":"Print eeg_lm summary — print.eeg_lm","text":"Print basic summary contents eeg_lm object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print eeg_lm summary — print.eeg_lm","text":"","code":"# S3 method for class 'eeg_lm' print(x, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print eeg_lm summary — print.eeg_lm","text":"x eeg_lm object printed ... arguments passed","code":""},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Print eeg_stats summary — print.eeg_stats","title":"Print eeg_stats summary — print.eeg_stats","text":"Print basic summary contents eeg_stats object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print eeg_stats summary — print.eeg_stats","text":"","code":"# S3 method for class 'eeg_stats' print(x, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print eeg_stats summary — print.eeg_stats","text":"x eeg_stats object printed ... arguments passed","code":""},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_tfr.html","id":null,"dir":"Reference","previous_headings":"","what":"Print eeg_tfr summary — print.eeg_tfr","title":"Print eeg_tfr summary — print.eeg_tfr","text":"Print basic summary contents eeg_tfr object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_tfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print eeg_tfr summary — print.eeg_tfr","text":"","code":"# S3 method for class 'eeg_tfr' print(x, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/print.eeg_tfr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print eeg_tfr summary — print.eeg_tfr","text":"x eeg_tfr object printed ... arguments passed","code":""},{"path":"https://craddm.github.io/eegUtils/reference/print.tfr_average.html","id":null,"dir":"Reference","previous_headings":"","what":"Print tfr_average summary — print.tfr_average","title":"Print tfr_average summary — print.tfr_average","text":"Print basic summary contents tfr_average object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/print.tfr_average.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print tfr_average summary — print.tfr_average","text":"","code":"# S3 method for class 'tfr_average' print(x, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/print.tfr_average.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print tfr_average summary — print.tfr_average","text":"x tfr_average object printed ... arguments passed","code":""},{"path":"https://craddm.github.io/eegUtils/reference/proc_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for processing epoch_events during selection — proc_events","title":"Internal function for processing epoch_events during selection — proc_events","text":"Converts character strings vector epoch numbers matching labels.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/proc_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for processing epoch_events during selection — proc_events","text":"","code":"proc_events(epoch_events, event_type, epoch_nos, event_labels, keep)"},{"path":"https://craddm.github.io/eegUtils/reference/project_elecs.html","id":null,"dir":"Reference","previous_headings":"","what":"Electrode projection — project_elecs","title":"Electrode projection — project_elecs","text":"Project set 3D Cartesian co-ordinates 2D plane plotting. projection can orthographic stereographic. Orthographic closer scalp look , since compensate height/distance xy plane. causes bunching electrodes near limits head. Stereographic preserves general shape features \"unrolling\" electrode positions.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/project_elecs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Electrode projection — project_elecs","text":"","code":"project_elecs(chan_info, method = \"stereographic\")"},{"path":"https://craddm.github.io/eegUtils/reference/project_elecs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Electrode projection — project_elecs","text":"chan_info Channel information eegUtils object method Method projection. \"stereographic\" \"orthographic\". Defaults sterographic.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/quick_hurst.html","id":null,"dir":"Reference","previous_headings":"","what":"Quickly calculate simple Hurst exponent for a matrix — quick_hurst","title":"Quickly calculate simple Hurst exponent for a matrix — quick_hurst","text":"Quickly calculate simple Hurst exponent matrix","code":""},{"path":"https://craddm.github.io/eegUtils/reference/quick_hurst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quickly calculate simple Hurst exponent for a matrix — quick_hurst","text":"","code":"quick_hurst(data)"},{"path":"https://craddm.github.io/eegUtils/reference/quick_hurst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quickly calculate simple Hurst exponent for a matrix — quick_hurst","text":"data matrix EEG signals","code":""},{"path":"https://craddm.github.io/eegUtils/reference/rad2deg.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert radians to degrees — rad2deg","title":"Convert radians to degrees — rad2deg","text":"Convert radians degrees","code":""},{"path":"https://craddm.github.io/eegUtils/reference/rad2deg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert radians to degrees — rad2deg","text":"","code":"rad2deg(x)"},{"path":"https://craddm.github.io/eegUtils/reference/rad2deg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert radians to degrees — rad2deg","text":"x Radians convert","code":""},{"path":"https://craddm.github.io/eegUtils/reference/read_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the raw data for a BVA file. — read_dat","title":"Read the raw data for a BVA file. — read_dat","text":"Read raw data BVA file.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/read_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the raw data for a BVA file. — read_dat","text":"","code":"read_dat(file_name, file_size, bin_format, multiplexed)"},{"path":"https://craddm.github.io/eegUtils/reference/read_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the raw data for a BVA file. — read_dat","text":"file_name Filename .dat file file_size Size .dat file bin_format Storage format. multiplexed Logical; whether data VECTORIZED (FALSE) MULTIPLEXED (TRUE)","code":""},{"path":"https://craddm.github.io/eegUtils/reference/read_vmrk.html","id":null,"dir":"Reference","previous_headings":"","what":"Read BVA markers — read_vmrk","title":"Read BVA markers — read_vmrk","text":"Import parse BVA marker files.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/read_vmrk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read BVA markers — read_vmrk","text":"","code":"read_vmrk(file_name)"},{"path":"https://craddm.github.io/eegUtils/reference/read_vmrk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read BVA markers — read_vmrk","text":"file_name File name .vmrk markers file.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/rearrange_tfr.html","id":null,"dir":"Reference","previous_headings":"","what":"Rearrange and combine tfr_average objects — rearrange_tfr","title":"Rearrange and combine tfr_average objects — rearrange_tfr","text":"Epochs different tfr_average objects necessarily order.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/rearrange_tfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rearrange and combine tfr_average objects — rearrange_tfr","text":"","code":"rearrange_tfr(data, add_obj)"},{"path":"https://craddm.github.io/eegUtils/reference/rearrange_tfr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rearrange and combine tfr_average objects — rearrange_tfr","text":"data first object combined add_obj list additional objects","code":""},{"path":"https://craddm.github.io/eegUtils/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr filter, mutate, rename, select ggplot2 fortify","code":""},{"path":"https://craddm.github.io/eegUtils/reference/remove_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove convolution edges — remove_edges","title":"Remove convolution edges — remove_edges","text":"Create matrix indicating timepoints likely suffer edge effects. Returns time frequency matrix NA","code":""},{"path":"https://craddm.github.io/eegUtils/reference/remove_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove convolution edges — remove_edges","text":"","code":"remove_edges(sigtime, sigma_t)"},{"path":"https://craddm.github.io/eegUtils/reference/remove_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove convolution edges — remove_edges","text":"sigtime timepoints signal sigma_t standard deviations morlet wavelets","code":""},{"path":"https://craddm.github.io/eegUtils/reference/rm_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Baseline correction — rm_baseline","title":"Baseline correction — rm_baseline","text":"Used correct data using mean specified time period. time-domain data, subtract mean data. eeg_tfr objects, variety methods available, including subtraction, conversion \"dB\" change. data frame, search \"electrode\" \"epoch\" columns, groups found. electrode column always required; epoch column . Note baseline correction always applied single-trial basis. baseline correction based subtraction, makes difference compared averaging first baseline correcting, divisive measures used time-frequency data, distinction can important, can lead counterintuitive results.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/rm_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baseline correction — rm_baseline","text":"","code":"rm_baseline(data, time_lim = NULL, ...)  # S3 method for class 'eeg_data' rm_baseline(data, time_lim = NULL, verbose = TRUE, ...)  # S3 method for class 'eeg_epochs' rm_baseline(data, time_lim = NULL, verbose = TRUE, ...)  # S3 method for class 'data.frame' rm_baseline(data, time_lim = NULL, verbose = TRUE, ...)  # S3 method for class 'eeg_tfr' rm_baseline(data, time_lim = NULL, type = \"divide\", verbose = TRUE, ...)  # S3 method for class 'eeg_evoked' rm_baseline(data, time_lim = NULL, verbose = TRUE, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/rm_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Baseline correction — rm_baseline","text":"data Data baseline corrected. time_lim Numeric character vector (e.g. time_lim <- c(-.1, 0)) defining time period use baseline. value NULL, uses mean whole epoch data epoched, channel mean data continuous. ... parameters passed functions verbose Defaults TRUE. Output descriptive messages console. type Type baseline correction apply. Options (\"divide\", \"ratio\", \"absolute\", \"db\", \"pc\")","code":""},{"path":"https://craddm.github.io/eegUtils/reference/rm_baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Baseline correction — rm_baseline","text":"eegUtils object data.frame, depending input.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/rm_baseline.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Baseline correction — rm_baseline","text":"rm_baseline(eeg_data): remove baseline continuous eeg_data rm_baseline(eeg_epochs): Remove baseline eeg_epochs rm_baseline(data.frame): Legacy method data.frames rm_baseline(eeg_tfr): Method eeg_tfr objects rm_baseline(eeg_evoked): Method eeg_evoked objects","code":""},{"path":"https://craddm.github.io/eegUtils/reference/rm_baseline.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Baseline correction — rm_baseline","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/rm_baseline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Baseline correction — rm_baseline","text":"","code":"rm_baseline(demo_epochs) #> Removing channel means per epoch... #> Epoched EEG data #>  #> Number of channels\t: 11  #> Number of epochs\t: 80  #> Epoch limits\t\t: -0.197 - 0.451 seconds #> Electrode names\t\t: A5 A13 A21 A29 A31 B5 B6 B8 B16 B18 B26  #> Sampling rate\t\t: 128  Hz #> Reference\t\t: average  rm_baseline(demo_epochs, c(-.1, 0)) #> Baseline: -0.1 - 0s #> Epoched EEG data #>  #> Number of channels\t: 11  #> Number of epochs\t: 80  #> Epoch limits\t\t: -0.197 - 0.451 seconds #> Electrode names\t\t: A5 A13 A21 A29 A31 B5 B6 B8 B16 B18 B26  #> Sampling rate\t\t: 128  Hz #> Reference\t\t: average"},{"path":"https://craddm.github.io/eegUtils/reference/rob_se.html","id":null,"dir":"Reference","previous_headings":"","what":"robust standard error calculation — rob_se","title":"robust standard error calculation — rob_se","text":"robust standard error calculation","code":""},{"path":"https://craddm.github.io/eegUtils/reference/rob_se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"robust standard error calculation — rob_se","text":"","code":"rob_se(mdf, squared_resids, inverted_dm)"},{"path":"https://craddm.github.io/eegUtils/reference/rotate_angle.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate channel locations — rotate_angle","title":"Rotate channel locations — rotate_angle","text":"import, channel locations may rotated (e.g. Fpz pointing towards ears.)","code":""},{"path":"https://craddm.github.io/eegUtils/reference/rotate_angle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate channel locations — rotate_angle","text":"","code":"rotate_angle(chan_info, degrees)"},{"path":"https://craddm.github.io/eegUtils/reference/rotate_angle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate channel locations — rotate_angle","text":"chan_info channel information structure degrees degrees rotate","code":""},{"path":"https://craddm.github.io/eegUtils/reference/rotate_angle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate channel locations — rotate_angle","text":"tibble()","code":""},{"path":"https://craddm.github.io/eegUtils/reference/rotate_angle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate channel locations — rotate_angle","text":"","code":"plot_electrodes(demo_epochs)  channels(demo_epochs) <- rotate_angle(channels(demo_epochs), 90) plot_electrodes(demo_epochs)   rotate_angle(channels(demo_epochs), 90) #> # A tibble: 11 × 9 #>    electrode radius theta   phi cart_x cart_y cart_z         x         y #>    <chr>      <dbl> <dbl> <dbl>  <dbl>  <dbl>  <dbl>     <dbl>     <dbl> #>  1 A5             1   -60   -51  -46.3   57.2  42.5   3.78e+ 1 -4.66e+ 1 #>  2 A13            1   -46     0  -61.1    0    59.0   4.6 e+ 1 -5.63e-15 #>  3 A21            1   -60    51  -46.3  -57.2  42.5   3.78e+ 1  4.66e+ 1 #>  4 A29            1    92   -90    0    -85.0  -2.97  1.13e-14  9.2 e+ 1 #>  5 A31            1    46   -90    0    -61.1  59.0   5.63e-15  4.6 e+ 1 #>  6 B5             1    69    90    0     79.4  30.5  -8.45e-15 -6.9 e+ 1 #>  7 B6             1    46    90    0     61.1  59.0  -5.63e-15 -4.6 e+ 1 #>  8 B8             1    60    51   46.3   57.2  42.5  -3.78e+ 1 -4.66e+ 1 #>  9 B16            1     0     0    0      0    85     0         0        #> 10 B18            1    46     0   61.1    0    59.0  -4.6 e+ 1  5.63e-15 #> 11 B26            1    60   -51   46.3  -57.2  42.5  -3.78e+ 1  4.66e+ 1"},{"path":"https://craddm.github.io/eegUtils/reference/run_ICA.html","id":null,"dir":"Reference","previous_headings":"","what":"Independent Component Analysis for EEG data — run_ICA","title":"Independent Component Analysis for EEG data — run_ICA","text":"Performs Independent Component Analysis electroencephalographic data. Currently available epoched data. Implements three different methods ICA - 'fastica', 'extended Infomax', 'Second-Order Blind Identification (SOBI)'. resulting eeg_ICA objects can used largely like eeg_epochs objects.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/run_ICA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Independent Component Analysis for EEG data — run_ICA","text":"","code":"run_ICA(data, ...)  # S3 method for class 'eeg_epochs' run_ICA(   data,   method = \"sobi\",   maxit = 1000,   tol = 1e-06,   pca = NULL,   centre = TRUE,   alg = \"gradient\",   rateanneal = c(60, 0.9),   rate = 0.1,   verbose = TRUE,   return = c(\"full\", \"weights\"),   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/run_ICA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Independent Component Analysis for EEG data — run_ICA","text":"data Data ICAed. ... parameters passed function. method \"sobi\" (default), \"fastica\", \"infomax\", \"imax\". \"infomax\" uses implementation ica package, whereas imax uses implementation infomax package, based EEGLAB implementation. maxit Maximum number iterations Infomax Fastica ICA algorithms. tol Convergence tolerance fastica infomax. Defaults 1e-06. pca Reduce number dimensions using PCA running ICA. Numeric,  >1 < number channels centre Defaults TRUE. Centre data zero subtracting column mean. See notes usage. alg Use \"gradient descent\" \"newton\" algorithm extended infomax. Defaults \"gradient\". Ignored method != \"infomax\". rateanneal Annealing rate extended infomax. Ignored method != \"infomax\". rate Learning rate extended infomax. Ignored method != \"infomax\". verbose Print informative messages console. return \"full\" \"weights\". \"full\" returns mixing unmixing matrices source timecourses. \"weights\" returns mixing unmixing matrices. Defaults \"full\".","code":""},{"path":"https://craddm.github.io/eegUtils/reference/run_ICA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Independent Component Analysis for EEG data — run_ICA","text":"eeg_ICA object containing ICA decomposition","code":""},{"path":"https://craddm.github.io/eegUtils/reference/run_ICA.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Independent Component Analysis for EEG data — run_ICA","text":"run_ICA(eeg_epochs): Run ICA eeg_epochs object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/run_ICA.html","id":"notes-on-ica-usage","dir":"Reference","previous_headings":"","what":"Notes on ICA usage","title":"Independent Component Analysis for EEG data — run_ICA","text":"recommended mean-centre data appropriately running ICA. implementations FASTICA extended-Infomax ica package, SOBI ICA option enabled default, implementation FASTICA fICA package enforces mean-centring columns data. epoched data, recommended centre epoch zero, rather centre overall channel mean. can achieved rm_baseline() function. SOBI ICA automatically, whereas ICA implementations centre channel means, epoch means. addition, PCA required data full rank. typical using average reference, data rank n_electrodes - 1.","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/reference/run_ICA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Independent Component Analysis for EEG data — run_ICA","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/run_ICA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Independent Component Analysis for EEG data — run_ICA","text":"","code":"sobi_demo <-   run_ICA(demo_epochs,           pca = 10) #> Reducing data to 10 dimensions using PCA. #> Running SOBI ICA.  sobi_demo #> Epoched ICA decomposition #>  #> Number of components\t: 10  #> Number of epochs\t: 80  #> Epoch limits\t\t: -0.197 - 0.451 seconds #> Sampling rate\t\t: 128  Hz  # We can plot the resulting spatial filters using `topoplot()`  topoplot(sobi_demo, 1:2) #> Plotting 2 components #> Using electrode locations from data. #> Plotting head r 95 mm   if (FALSE)  view_ica(sobi_demo)  # \\dontrun{}"},{"path":"https://craddm.github.io/eegUtils/reference/run_SSD.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for running SSD algorithm — run_SSD","title":"Internal function for running SSD algorithm — run_SSD","text":"Internal function running SSD algorithm","code":""},{"path":"https://craddm.github.io/eegUtils/reference/run_SSD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for running SSD algorithm — run_SSD","text":"","code":"run_SSD(data, sig_range, noise_range, RESS = FALSE, verbose = TRUE, order = 2)"},{"path":"https://craddm.github.io/eegUtils/reference/run_SSD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function for running SSD algorithm — run_SSD","text":"data eeg_epochs object decomposed sig_range Frequency range signal interest noise_range Frequency range noise RESS Run RESS rather SSD. Defaults FALSE. verbose Informative messages consoles. Defaults TRUE. order filter order IIR filters","code":""},{"path":"https://craddm.github.io/eegUtils/reference/run_fir.html","id":null,"dir":"Reference","previous_headings":"","what":"Run FIR filter using overlap-add FFT — run_fir","title":"Run FIR filter using overlap-add FFT — run_fir","text":"Run FIR filter using overlap-add FFT","code":""},{"path":"https://craddm.github.io/eegUtils/reference/run_fir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run FIR filter using overlap-add FFT — run_fir","text":"","code":"run_fir(data, filt_coef, filter_order)"},{"path":"https://craddm.github.io/eegUtils/reference/run_fir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run FIR filter using overlap-add FFT — run_fir","text":"data Data filtered. filt_coef Filter coefficients filter_order Order filter","code":""},{"path":"https://craddm.github.io/eegUtils/reference/samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Get number of samples — samples","title":"Get number of samples — samples","text":"Get number samples","code":""},{"path":"https://craddm.github.io/eegUtils/reference/samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get number of samples — samples","text":"","code":"samples(.data)"},{"path":"https://craddm.github.io/eegUtils/reference/samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get number of samples — samples","text":".data Object get total number sampling points ","code":""},{"path":"https://craddm.github.io/eegUtils/reference/select_elecs.html","id":null,"dir":"Reference","previous_headings":"","what":"Select electrodes from a given dataset — select_elecs","title":"Select electrodes from a given dataset — select_elecs","text":"generic function selection electrodes EEG dataset.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/select_elecs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select electrodes from a given dataset — select_elecs","text":"","code":"select_elecs(data, ...)  # Default S3 method select_elecs(data, electrode = NULL, keep = TRUE, ...)  # S3 method for class 'eeg_data' select_elecs(data, electrode, keep = TRUE, df_out = FALSE, ...)  # S3 method for class 'eeg_evoked' select_elecs(data, electrode = NULL, keep = TRUE, df_out = FALSE, ...)  # S3 method for class 'eeg_ICA' select_elecs(data, component, keep = TRUE, df_out = FALSE, ...)  # S3 method for class 'eeg_tfr' select_elecs(data, electrode, keep = TRUE, df_out = FALSE, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/select_elecs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select electrodes from a given dataset — select_elecs","text":"data EEG dataset. ... Arguments used related methods electrode character vector electrode labels selection removal. keep Defaults TRUE. Set false remove selected electrodes. df_out Defaults FALSE. Set TRUE return dataframe rather eeg_data object. component Component select","code":""},{"path":"https://craddm.github.io/eegUtils/reference/select_elecs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select electrodes from a given dataset — select_elecs","text":"Data frame data chosen electrodes eeg_data object selected electrodes removed/kept.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/select_elecs.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Select electrodes from a given dataset — select_elecs","text":"select_elecs(default): Select electrodes generic data frame. select_elecs(eeg_data): Select electrodes eeg_data object. select_elecs(eeg_evoked): Select electrode eeg_evoked object select_elecs(eeg_ICA): Select components eeg_ICA objects. select_elecs(eeg_tfr): Select electrodes eeg_tfr objects.","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/reference/select_elecs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Select electrodes from a given dataset — select_elecs","text":"Matt Craddock, matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/select_elecs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select electrodes from a given dataset — select_elecs","text":"","code":"names(demo_epochs$signals) #>  [1] \"A5\"  \"A13\" \"A21\" \"A29\" \"A31\" \"B5\"  \"B6\"  \"B8\"  \"B16\" \"B18\" \"B26\" keep_A5 <- select_elecs(demo_epochs, electrode = \"A5\") remove_A5 <- select_elecs(demo_epochs, electrode = \"A5\", keep = FALSE)  select_elecs(demo_epochs, c(\"A21\", \"A29\")) #> Epoched EEG data #>  #> Number of channels\t: 2  #> Number of epochs\t: 80  #> Epoch limits\t\t: -0.197 - 0.451 seconds #> Electrode names\t\t: A21 A29  #> Sampling rate\t\t: 128  Hz #> Reference\t\t: average"},{"path":"https://craddm.github.io/eegUtils/reference/select_epochs.html","id":null,"dir":"Reference","previous_headings":"","what":"Select epochs — select_epochs","title":"Select epochs — select_epochs","text":"generic function selecting epochs epoched data set.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/select_epochs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select epochs — select_epochs","text":"","code":"select_epochs(data, ...)  # Default S3 method select_epochs(data, ...)  # S3 method for class 'eeg_epochs' select_epochs(   data,   epoch_events = NULL,   epoch_no = NULL,   keep = TRUE,   df_out = FALSE,   ... )  # S3 method for class 'eeg_ICA' select_epochs(   data,   epoch_events = NULL,   epoch_no = NULL,   keep = TRUE,   df_out = FALSE,   ... )  # S3 method for class 'eeg_tfr' select_epochs(   data,   epoch_events = NULL,   epoch_no = NULL,   keep = TRUE,   df_out = FALSE,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/select_epochs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select epochs — select_epochs","text":"data eeg_epochs object select epochs. ... Parameters passed specific methods epoch_events Select epochs containing specified events. Can numeric character string. override epoch_no input. epoch_no Select epochs epoch number. keep Defaults TRUE, meaning select specified epochs. Set FALSE remove specified epochs. df_out Output data.frame instead eeg_data object.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/select_epochs.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Select epochs — select_epochs","text":"select_epochs(default): Select generic object select_epochs(eeg_epochs): Selection epochs eeg_epochs objects. select_epochs(eeg_ICA): Selection epochs eeg_ICA objects. select_epochs(eeg_tfr): Selection epochs eeg_tfr objects.","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/reference/select_epochs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Select epochs — select_epochs","text":"Matt Craddock, matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/select_epochs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select epochs — select_epochs","text":"","code":"select_epochs(demo_epochs, epoch_no = 1:5) #> Epoched EEG data #>  #> Number of channels\t: 11  #> Number of epochs\t: 5  #> Epoch limits\t\t: -0.197 - 0.451 seconds #> Electrode names\t\t: A5 A13 A21 A29 A31 B5 B6 B8 B16 B18 B26  #> Sampling rate\t\t: 128  Hz #> Reference\t\t: average  demo_ica <- run_ICA(demo_epochs, pca = 10) #> Reducing data to 10 dimensions using PCA. #> Running SOBI ICA. select_epochs(demo_ica, epoch_no = 1:5) #> Epoched ICA decomposition #>  #> Number of components\t: 10  #> Number of epochs\t: 5  #> Epoch limits\t\t: -0.197 - 0.451 seconds #> Sampling rate\t\t: 128  Hz"},{"path":"https://craddm.github.io/eegUtils/reference/select_freqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Select frequencies — select_freqs","title":"Select frequencies — select_freqs","text":"Select specific frequencies eeg_tfr objects. Can used selecting either single frequencies anything within range.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/select_freqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select frequencies — select_freqs","text":"","code":"select_freqs(data, freq_range)  # S3 method for class 'eeg_tfr' select_freqs(data, freq_range)"},{"path":"https://craddm.github.io/eegUtils/reference/select_freqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select frequencies — select_freqs","text":"data eeg_tfr object. freq_range range frequencies retain. Can scale lower upper bounds. (e.g. c(5, 30))","code":""},{"path":"https://craddm.github.io/eegUtils/reference/select_freqs.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Select frequencies — select_freqs","text":"select_freqs(eeg_tfr): Function selecting specific frequencies eeg_tfr objects.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/select_freqs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select frequencies — select_freqs","text":"","code":"demo_tfr <- compute_tfr(demo_epochs, foi = c(4, 30), n_freq = 10, n_cycles = 5) #> Computing TFR using Morlet wavelet convolution #> Output frequencies using linear spacing: 4 6.89 9.78 12.67 15.56 18.44 21.33 24.22 27.11 30 #> Removing channel means per epoch... #> Returning signal averaged over all trials. select_freqs(demo_tfr, c(8, 12)) #> Epoched EEG TFR data #>  #> Frequency range\t\t:\t 9.78  #> Number of channels\t:\t 11  #> Electrode names\t\t:\t A5 A13 A21 A29 A31 B5 B6 B8 B16 B18 B26  #> Number of epochs\t:\t 1  #> Epoch limits\t\t:\t -0.197 - 0.451 seconds #> Sampling rate\t\t:\t 128  Hz"},{"path":"https://craddm.github.io/eegUtils/reference/select_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Select timerange — select_times","title":"Select timerange — select_times","text":"Generic function selecting specific time ranges given dataset. Input can dataframe, object class eeg_data, eeg_epochs, eeg_evoked. Note finds closest times specified, time range returned may slightly longer shorter requested.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/select_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select timerange — select_times","text":"","code":"select_times(data, ...)  # Default S3 method select_times(data, time_lim = NULL, ...)  # S3 method for class 'eeg_data' select_times(data, time_lim = NULL, df_out = FALSE, ...)  # S3 method for class 'eeg_epochs' select_times(data, time_lim, df_out = FALSE, ...)  # S3 method for class 'eeg_evoked' select_times(data, time_lim, df_out = FALSE, ...)  # S3 method for class 'eeg_tfr' select_times(data, time_lim = NULL, df_out = FALSE, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/select_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select timerange — select_times","text":"data Data select ... arguments passed methods. time_lim character vector two numbers indicating time range selected e.g. c(min, max), list select specific times. df_out Returns data frame rather object type passed .","code":""},{"path":"https://craddm.github.io/eegUtils/reference/select_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select timerange — select_times","text":"Data frame data within specified range. eeg_data object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/select_times.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Select timerange — select_times","text":"select_times(default): Default select times function select_times(eeg_data): Select times eeg_data object select_times(eeg_epochs): Select times eeg_epochs objects select_times(eeg_evoked): Select times eeg_evoked objects select_times(eeg_tfr): Select times eeg_tfr object","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/reference/select_times.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Select timerange — select_times","text":"Matt Craddock, matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/select_times.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select timerange — select_times","text":"","code":"## Select timepoints from -.1 to .3 demo_epochs #> Epoched EEG data #>  #> Number of channels\t: 11  #> Number of epochs\t: 80  #> Epoch limits\t\t: -0.197 - 0.451 seconds #> Electrode names\t\t: A5 A13 A21 A29 A31 B5 B6 B8 B16 B18 B26  #> Sampling rate\t\t: 128  Hz #> Reference\t\t: average  short_epochs <- select_times(demo_epochs, time_lim = c(-.1, .3)) short_epochs #> Epoched EEG data #>  #> Number of channels\t: 11  #> Number of epochs\t: 80  #> Epoch limits\t\t: -0.096 - 0.295 seconds #> Electrode names\t\t: A5 A13 A21 A29 A31 B5 B6 B8 B16 B18 B26  #> Sampling rate\t\t: 128  Hz #> Reference\t\t: average  short_epochs <- select_times(demo_epochs, time_lim = list(-.1, .15, .3)) #> Returning closest time points to those requested: -0.104 0.146 0.295  head(short_epochs$timings) #> # A tibble: 6 × 3 #>   epoch sample   time #>   <dbl>  <dbl>  <dbl> #> 1     1   4076 -0.104 #> 2     1   4204  0.146 #> 3     1   4280  0.295 #> 4     2   6985 -0.104 #> 5     2   7113  0.146 #> 6     2   7189  0.295"},{"path":"https://craddm.github.io/eegUtils/reference/select_window.html","id":null,"dir":"Reference","previous_headings":"","what":"Create windowing function — select_window","title":"Create windowing function — select_window","text":"Create windowing function use creating windowed-sinc kernel","code":""},{"path":"https://craddm.github.io/eegUtils/reference/select_window.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create windowing function — select_window","text":"","code":"select_window(type, m, a = NULL)"},{"path":"https://craddm.github.io/eegUtils/reference/select_window.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create windowing function — select_window","text":"type Window function apply m Filter order alpha/beta used window functions","code":""},{"path":"https://craddm.github.io/eegUtils/reference/set_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Set palette and limits for topoplot — set_palette","title":"Set palette and limits for topoplot — set_palette","text":"Set palette limits topoplot","code":""},{"path":"https://craddm.github.io/eegUtils/reference/set_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set palette and limits for topoplot — set_palette","text":"","code":"set_palette(topo, palette, limits = NULL)"},{"path":"https://craddm.github.io/eegUtils/reference/set_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set palette and limits for topoplot — set_palette","text":"topo ggplot2 object produced topoplot command palette Requested palette limits Limits colour scale","code":""},{"path":"https://craddm.github.io/eegUtils/reference/sobi_ICA.html","id":null,"dir":"Reference","previous_headings":"","what":"SOBI ICA — sobi_ICA","title":"SOBI ICA — sobi_ICA","text":"Internal function running SOBI ICA eeg_epochs object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/sobi_ICA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOBI ICA — sobi_ICA","text":"","code":"sobi_ICA(data, maxiter, tol, pca, centre, verbose = TRUE, whitening = \"pca\")"},{"path":"https://craddm.github.io/eegUtils/reference/sobi_ICA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SOBI ICA — sobi_ICA","text":"data Data ICAed. maxiter Maximum number iterations joint diagonalization tol convergence tolerance. pca Number PCA components. centre Mean centre signals. verbose Print informative messages. whitening Defaults pca, options pca zca","code":""},{"path":"https://craddm.github.io/eegUtils/reference/sobi_ICA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SOBI ICA — sobi_ICA","text":". Belouchrani . Cichocki. Adapted R Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/spec_inv.html","id":null,"dir":"Reference","previous_headings":"","what":"Spectral inversion — spec_inv","title":"Spectral inversion — spec_inv","text":"Convert high-pass low-pass, band-pass band-stop, vice versa.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/spec_inv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spectral inversion — spec_inv","text":"","code":"spec_inv(filt_kern)"},{"path":"https://craddm.github.io/eegUtils/reference/spec_inv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spectral inversion — spec_inv","text":"filt_kern Filter kernel inverted","code":""},{"path":"https://craddm.github.io/eegUtils/reference/sph_to_cart.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert spherical co-ordinates to Cartesian 3D co-ordinates — sph_to_cart","title":"Convert spherical co-ordinates to Cartesian 3D co-ordinates — sph_to_cart","text":"Convert spherical co-ordinates Cartesian 3D co-ordinates","code":""},{"path":"https://craddm.github.io/eegUtils/reference/sph_to_cart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert spherical co-ordinates to Cartesian 3D co-ordinates — sph_to_cart","text":"","code":"sph_to_cart(theta, phi, radius = 85)"},{"path":"https://craddm.github.io/eegUtils/reference/sph_to_cart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert spherical co-ordinates to Cartesian 3D co-ordinates — sph_to_cart","text":"theta Theta degrees phi Phi degrees radius Radius head (mm)","code":""},{"path":"https://craddm.github.io/eegUtils/reference/spheric_spline.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a spherical spline smooth for interpolation of electrodes — spheric_spline","title":"Calculate a spherical spline smooth for interpolation of electrodes — spheric_spline","text":"Calculate spherical spline smooth interpolation electrodes","code":""},{"path":"https://craddm.github.io/eegUtils/reference/spheric_spline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a spherical spline smooth for interpolation of electrodes — spheric_spline","text":"","code":"spheric_spline(good_elecs, all_elecs)"},{"path":"https://craddm.github.io/eegUtils/reference/spheric_spline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a spherical spline smooth for interpolation of electrodes — spheric_spline","text":"good_elecs Electrode positions need interpolation all_elecs Electrode positions including interpolated","code":""},{"path":"https://craddm.github.io/eegUtils/reference/spheric_spline.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate a spherical spline smooth for interpolation of electrodes — spheric_spline","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/split_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Segment data — split_vec","title":"Segment data — split_vec","text":"Split data segments Welch PSD. leftover data discarded (.e. seg_length 256 signal length 400, 1 segment returned)","code":""},{"path":"https://craddm.github.io/eegUtils/reference/split_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segment data — split_vec","text":"","code":"split_vec(vec, seg_length, overlap, detrend = \"mean\")"},{"path":"https://craddm.github.io/eegUtils/reference/split_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segment data — split_vec","text":"vec Data vector split segments. seg_length Length segments FFT'd (samples). overlap Overlap segments (samples). detrend Detrend segments. Defaults \"mean\" - removes mean segment. Anything else turns detrending.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/split_vec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Segment data — split_vec","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/stat_scalpcontours.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an interpolated scalp surface — stat_scalpcontours","title":"Create an interpolated scalp surface — stat_scalpcontours","text":"stat_scalpcontours creates interpolated surface irregular set x-y coordinates, typically required topographical EEG plot, calculates contours.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/stat_scalpcontours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an interpolated scalp surface — stat_scalpcontours","text":"","code":"stat_scalpcontours(   mapping = NULL,   data = NULL,   position = \"identity\",   na.rm = FALSE,   show.legend = FALSE,   inherit.aes = TRUE,   grid_res = 200,   interp_limit = c(\"skirt\", \"head\"),   method = \"biharmonic\",   r = NULL,   bins = 6,   binwidth = NULL,   breaks = NULL,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/stat_scalpcontours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an interpolated scalp surface — stat_scalpcontours","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). grid_res Resolution interpolation grid. (Defaults 200 points). interp_limit Interpolate \"skirt\" inside \"head\". method \"biharmonic\" \"gam\" smooth create interpolated surface r Radius interpolated surface bins Number contour bins. Overridden binwidth. binwidth width contour bins. Overridden breaks. breaks Numeric vector set contour breaks. Overrides binwidth bins. default, vector length ten pretty() breaks. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend.","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/reference/stat_scalpcontours.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an interpolated scalp surface — stat_scalpcontours","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/stat_scalpmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an interpolated scalp surface — stat_scalpmap","title":"Create an interpolated scalp surface — stat_scalpmap","text":"stat_scalpmap creates interpolated surface irregular set x-y coordinates, typically required topographical EEG plot. Since surface approximately round, function attempts blank portions surface lay outside area within electrodes. geom_head() adds headshape plot. geom_mask() adds masking ring smooth edges scalp map generated stat_scalpmap(), give circular appearance. geom_ears simply draws pair ears attached head shape. geom_channels adds either points text labels channel locations. convenience function prevent overplotting input data contains many rows data.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/stat_scalpmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an interpolated scalp surface — stat_scalpmap","text":"","code":"stat_scalpmap(   mapping = NULL,   data = NULL,   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   grid_res = 200,   interpolate = FALSE,   interp_limit = c(\"skirt\", \"head\"),   method = \"biharmonic\",   r = NULL,   ... )  geom_head(   mapping = NULL,   data = NULL,   show.legend = NA,   na.rm = TRUE,   inherit.aes = TRUE,   interp_limit = \"skirt\",   r = 95,   ... )  geom_mask(   mapping = NULL,   data = NULL,   show.legend = NA,   na.rm = FALSE,   colour = \"white\",   size = rel(5),   linewidth = rel(5),   r = 95,   interp_limit = \"skirt\",   ... )  geom_ears(   mapping = NULL,   data = NULL,   show.legend = NA,   na.rm = FALSE,   r = 95,   ... )  geom_channels(   mapping = NULL,   data = NULL,   geom = \"point\",   show.legend = NA,   inherit.aes = TRUE,   na.rm = TRUE,   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/stat_scalpmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an interpolated scalp surface — stat_scalpmap","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). grid_res Resolution interpolation grid. (Defaults 200 points). interpolate TRUE interpolate linearly, FALSE (default) interpolate. interp_limit Topoplot \"skirt\" inside \"head\". method \"biharmonic\" \"gam\" r Radius head ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. colour geom_mask, colour masking ring. size geom_mask, width masking ring. Deprecated. linewidth geom_mask, width masking ring. geom \"point\" points \"text\" labels. Default \"point\".","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/reference/stat_scalpmap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an interpolated scalp surface — stat_scalpmap","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/stereo_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Stereographic electrode projection — stereo_norm","title":"Stereographic electrode projection — stereo_norm","text":"Produce set x y coordinates plotting 3D Cartesian coordinates. stereographic projection 3D coordinates, compensates distance electrode projecting point flattens scalp.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/stereo_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stereographic electrode projection — stereo_norm","text":"","code":"stereo_norm(chan_info)"},{"path":"https://craddm.github.io/eegUtils/reference/stereo_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stereographic electrode projection — stereo_norm","text":"chan_info Channel information eegUtils objects","code":""},{"path":"https://craddm.github.io/eegUtils/reference/stereo_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stereographic electrode projection — stereo_norm","text":"data.frame x y columns indictating electrode positions degrees","code":""},{"path":"https://craddm.github.io/eegUtils/reference/tag_epochs.html","id":null,"dir":"Reference","previous_headings":"","what":"Tag epochs with labels — tag_epochs","title":"Tag epochs with labels — tag_epochs","text":"Tag epochs labels indicating details experimental condition, based occurrence event triggers events() structure. adds new column epochs structure eeg_epochs object.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/tag_epochs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tag epochs with labels — tag_epochs","text":"","code":"tag_epochs(.data, ...)  # Default S3 method tag_epochs(.data, ...)  # S3 method for class 'eeg_epochs' tag_epochs(.data, event_type = NULL, event_label = NULL, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/tag_epochs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tag epochs with labels — tag_epochs","text":".data eegUtils object ... Additional arguments. event_type Label epochs according specific event_types (typically trigger) event_label Label epochs according specific event_labels","code":""},{"path":"https://craddm.github.io/eegUtils/reference/tag_epochs.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Tag epochs with labels — tag_epochs","text":"tag_epochs(eeg_epochs): Tag epochs eeg_epochs object.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/tag_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Tag events — tag_events","title":"Tag events — tag_events","text":"Give trigger events meaningful labels. Existing labels overwritten. Use hierarchical labelling tag event multiple labels: separate labels \"/\" symbol. (e.g. \"cond1\" trigger belongs one condition, \"cond1/cond2\" trigger belong one condition).","code":""},{"path":"https://craddm.github.io/eegUtils/reference/tag_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tag events — tag_events","text":"","code":"tag_events(data, ...)  # S3 method for class 'eeg_data' tag_events(data, trigs, event_label, ...)  # S3 method for class 'eeg_epochs' tag_events(data, trigs, event_label, ...)"},{"path":"https://craddm.github.io/eegUtils/reference/tag_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tag events — tag_events","text":"data object class eeg_data eeg_epochs ... Parameters passed S3 methods trigs Character vector trigger numbers event_label Labels events.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/tag_events.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Tag events — tag_events","text":"tag_events(eeg_data): Tag events eeg_data object tag_events(eeg_epochs): Tag events epoched dataset","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/reference/tag_events.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tag events — tag_events","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/tf_hanning.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Hanning time-frequency analysis — tf_hanning","title":"Perform Hanning time-frequency analysis — tf_hanning","text":"Internal function performing Hanning wavelet transforms using convolution frequency domain","code":""},{"path":"https://craddm.github.io/eegUtils/reference/tf_hanning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Hanning time-frequency analysis — tf_hanning","text":"","code":"tf_hanning(   data,   foi,   n_freq,   spacing,   n_cycles,   keep_trials,   output,   downsample,   trim_edges = trim_edges,   demean = TRUE,   verbose )"},{"path":"https://craddm.github.io/eegUtils/reference/tf_hanning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Hanning time-frequency analysis — tf_hanning","text":"data Data eeg_epochs format. foi Frequencies interest. Scalar character vector lowest highest frequency resolve. n_freq Number frequencies resolved. spacing Use linear log spacing frequencies. n_cycles Number cycles frequency. keep_trials Keep single trials average returning. output Sets whether output power, phase, fourier coefficients. downsample Downsampling factor (integer). demean Remove mean transforming. verbose Print informative messages console.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/tf_morlet.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Morlet time-frequency analysis — tf_morlet","title":"Perform Morlet time-frequency analysis — tf_morlet","text":"Internal function performing Morlet wavelet transforms using convolution frequency domain","code":""},{"path":"https://craddm.github.io/eegUtils/reference/tf_morlet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Morlet time-frequency analysis — tf_morlet","text":"","code":"tf_morlet(   data,   foi,   n_freq,   spacing,   n_cycles,   keep_trials,   output,   downsample,   demean = TRUE,   trim_edges = trim_edges,   verbose )"},{"path":"https://craddm.github.io/eegUtils/reference/tf_morlet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Morlet time-frequency analysis — tf_morlet","text":"data Data eeg_epochs format. foi Frequencies interest. Scalar character vector lowest highest frequency resolve. n_freq Number frequencies resolved. spacing Use linear log spacing frequencies. n_cycles Number cycles frequency. keep_trials Keep single trials average returning. output Sets whether output power, phase, fourier coefficients. downsample Downsampling factor (integer). demean Remove mean transforming. verbose Print informative messages console.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/topo_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert topographical 2d to cartesian 2d — topo_norm","title":"Convert topographical 2d to cartesian 2d — topo_norm","text":"Expects input degrees","code":""},{"path":"https://craddm.github.io/eegUtils/reference/topo_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert topographical 2d to cartesian 2d — topo_norm","text":"","code":"topo_norm(angle, radius)"},{"path":"https://craddm.github.io/eegUtils/reference/topo_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert topographical 2d to cartesian 2d — topo_norm","text":"angle Angle radius Radius","code":""},{"path":"https://craddm.github.io/eegUtils/reference/topoplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Topographical Plotting Function for EEG — topoplot","title":"Topographical Plotting Function for EEG — topoplot","text":"Allows topographical plotting functional data. Output ggplot2 object.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/topoplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Topographical Plotting Function for EEG — topoplot","text":"","code":"topoplot(data, ...)  # Default S3 method topoplot(data, ...)  # S3 method for class 'data.frame' topoplot(   data,   time_lim = NULL,   limits = NULL,   chanLocs = NULL,   method = \"Biharmonic\",   r = NULL,   grid_res = 200,   palette = \"RdBu\",   interp_limit = \"skirt\",   contour = TRUE,   chan_marker = \"point\",   quantity = \"amplitude\",   montage = NULL,   highlights = NULL,   scaling = 1,   groups = NULL,   verbose = TRUE,   k = 40,   fill_title = expression(paste(\"Amplitude (\", mu, \"V)\")),   ... )  # S3 method for class 'eeg_data' topoplot(   data,   time_lim = NULL,   limits = NULL,   chanLocs = NULL,   method = \"Biharmonic\",   r = NULL,   grid_res = 200,   palette = \"RdBu\",   interp_limit = \"skirt\",   contour = TRUE,   chan_marker = \"point\",   quantity = \"amplitude\",   montage = NULL,   highlights = NULL,   scaling = 1,   verbose = TRUE,   groups = NULL,   k = 40,   fill_title = expression(paste(\"Amplitude (\", mu, \"V)\")),   ... )  # S3 method for class 'eeg_epochs' topoplot(   data,   time_lim = NULL,   limits = NULL,   chanLocs = NULL,   method = \"Biharmonic\",   r = NULL,   grid_res = 200,   palette = \"RdBu\",   interp_limit = \"skirt\",   contour = TRUE,   chan_marker = \"point\",   quantity = \"amplitude\",   montage = NULL,   highlights = NULL,   scaling = 1,   groups = NULL,   verbose = TRUE,   k = 40,   fill_title = expression(paste(\"Amplitude (\", mu, \"V)\")),   ... )  # S3 method for class 'eeg_ICA' topoplot(   data,   component,   time_lim = NULL,   limits = NULL,   chanLocs = NULL,   method = \"Biharmonic\",   r = NULL,   grid_res = 200,   palette = \"RdBu\",   interp_limit = \"skirt\",   contour = TRUE,   chan_marker = \"point\",   quantity = \"amplitude\",   montage = NULL,   highlights = NULL,   scaling = 1,   verbose = TRUE,   groups = NULL,   k = 40,   fill_title = \"a.u.\",   ... )  # S3 method for class 'eeg_tfr' topoplot(   data,   time_lim = NULL,   limits = NULL,   chanLocs = NULL,   method = \"Biharmonic\",   r = NULL,   grid_res = 200,   palette = \"RdBu\",   interp_limit = \"skirt\",   contour = TRUE,   chan_marker = \"point\",   quantity = \"power\",   montage = NULL,   highlights = NULL,   scaling = 1,   freq_range = NULL,   verbose = TRUE,   groups = NULL,   k = 40,   fill_title = expression(paste(\"Power (\", mu, V^2, \")\")),   ... )"},{"path":"https://craddm.github.io/eegUtils/reference/topoplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Topographical Plotting Function for EEG — topoplot","text":"data EEG dataset. input data.frame, must columns electrode, x, y, amplitude. x y (Cartesian) electrode co-ordinates. ... Various arguments passed specific functions time_lim Timepoint(s) plot. Can one time, range average , list individual times. none supplied, function average across timepoints supplied data. limits Limits fill scale - given character vector two values specifying start endpoints e.g. limits = c(-2,-2). ignore anything else. Defaults range data. chanLocs Allows passing channel locations (see electrode_locations) method Interpolation method. \"Biharmonic\" \"gam\". \"Biharmonic\" implements method used Matlab's EEGLAB. \"gam\" fits Generalized Additive Model k = 40 knots. Defaults biharmonic spline interpolation. r Radius cartoon head_shape mm. Default value 95 (mm) using interp_limit = \"skirt\". grid_res Resolution interpolated grid. Higher = smoother slower. Defaults 200 points per edge. palette Defaults RdBu none supplied. Can palette RColorBrewer viridis. unsupported palette specified, switches Greens. interp_limit \"skirt\" \"head\". Defaults \"skirt\". \"skirt\" interpolates just past farthest electrode respect boundary head_shape. \"head\" interpolates radius plotted head, moves electrodes inside head. contour Plot contour lines topography (defaults TRUE) chan_marker Set marker electrode locations. \"point\" = point, \"name\" = electrode name, \"none\" = marker. Defaults \"point\". quantity Allows plotting arbitrary quantitative column. Defaults amplitude. Use quoted column names. E.g. \"p.value\", \"t_statistic\". montage Name existing montage set. Defaults NULL. (currently 'biosemi64alpha' available default 10/20 system) highlights Electrodes highlight (white). scaling Scaling multiplication factor labels plot lines. Defaults 1. groups Column name groups retain. required create facetted plots. verbose Warning messages electrodes locations. Defaults TRUE. k Degrees freedom used spline using method = gam. Defaults 40. fill_title Allows specification title colourbar. Defaults `expression(paste(\"Amplitude (\", mu, \"V)\")), appropriate typical time-domain data. component Component plot (numeric) freq_range Range frequencies average .","code":""},{"path":"https://craddm.github.io/eegUtils/reference/topoplot.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Topographical Plotting Function for EEG — topoplot","text":"topoplot(default): Default method data frames. topoplot(data.frame): Topographical plotting data.frames non eeg_data objects. topoplot(eeg_data): Topographical plotting eeg_data objects. topoplot(eeg_epochs): Topographical plotting eeg_epochs objects. topoplot(eeg_ICA): Topographical plot eeg_ICA objects topoplot(eeg_tfr): Topographical plotting eeg_tfr objects.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/topoplot.html","id":"notes-on-usage-of-generalized-additive-models-for-interpolation","dir":"Reference","previous_headings":"","what":"Notes on usage of Generalized Additive Models for interpolation","title":"Topographical Plotting Function for EEG — topoplot","text":"function fits GAM using gam function mgcv. Specifically, fits spline using model function gam(z ~ s(x, y, bs = \"ts\", k = 40). Using GAMs smooths much experimental. surface produced predictions GAM model fitted supplied data. Values electrode necessarily match actual values data: high-frequency variation tend smoothed . Thus, method used caution. addition method can used 40 electrodes.","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/reference/topoplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Topographical Plotting Function for EEG — topoplot","text":"Matt Craddock, matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/topoplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Topographical Plotting Function for EEG — topoplot","text":"","code":"topoplot(demo_epochs) #> Creating epochs based on combinations of variables: epoch_label participant_id  #> Using electrode locations from data. #> Plotting head r 95 mm  topoplot(demo_epochs, time_lim = c(.1, .2)) #> Creating epochs based on combinations of variables: epoch_label participant_id  #> Using electrode locations from data. #> Plotting head r 95 mm  topoplot(demo_spatial, time_lim = list(0, .1, .2)) #> Creating epochs based on combinations of variables: participant_id epoch_labels  #> Returning closest time points to those requested: -0.00391 0.0977 0.199  #> Using electrode locations from data. #> Removing channels with no location. #> Plotting head r 95 mm"},{"path":"https://craddm.github.io/eegUtils/reference/unpad.html","id":null,"dir":"Reference","previous_headings":"","what":"Unpad a vector — unpad","title":"Unpad a vector — unpad","text":"remove specified number points beginning end vector","code":""},{"path":"https://craddm.github.io/eegUtils/reference/unpad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unpad a vector — unpad","text":"","code":"unpad(x, n)"},{"path":"https://craddm.github.io/eegUtils/reference/unpad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unpad a vector — unpad","text":"x Vector unpad/trim n Number points remove","code":""},{"path":"https://craddm.github.io/eegUtils/reference/update_r.html","id":null,"dir":"Reference","previous_headings":"","what":"Update radius — update_r","title":"Update radius — update_r","text":"Update radius","code":""},{"path":"https://craddm.github.io/eegUtils/reference/update_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update radius — update_r","text":"","code":"update_r(r = 95, data, interp_limit)"},{"path":"https://craddm.github.io/eegUtils/reference/validate_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Chan_info checker — validate_channels","title":"Chan_info checker — validate_channels","text":"Performs several checks structure channel info: 1) Checks \"electrode\" character, factor. 2) rounds numeric values 2 decimal places. 3) Checks missing channels chan_info signal names supplied; populates NA finds .","code":""},{"path":"https://craddm.github.io/eegUtils/reference/validate_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chan_info checker — validate_channels","text":"","code":"validate_channels(chan_info, sig_names = NULL)"},{"path":"https://craddm.github.io/eegUtils/reference/validate_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chan_info checker — validate_channels","text":"chan_info channel info structure sig_names signal names eegUtils signals","code":""},{"path":"https://craddm.github.io/eegUtils/reference/validate_eeg_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check eeg_data structure — validate_eeg_data","title":"Check eeg_data structure — validate_eeg_data","text":"Check missing fields add necessary.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/validate_eeg_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check eeg_data structure — validate_eeg_data","text":"","code":"validate_eeg_data(.data)"},{"path":"https://craddm.github.io/eegUtils/reference/view_artefacts.html","id":null,"dir":"Reference","previous_headings":"","what":"Artefact browser — view_artefacts","title":"Artefact browser — view_artefacts","text":"interactive Shiny app allows exploration channel epoch statistics","code":""},{"path":"https://craddm.github.io/eegUtils/reference/view_artefacts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Artefact browser — view_artefacts","text":"","code":"view_artefacts(data)"},{"path":"https://craddm.github.io/eegUtils/reference/view_artefacts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Artefact browser — view_artefacts","text":"data Object explored.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/view_artefacts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Artefact browser — view_artefacts","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/view_artefacts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Artefact browser — view_artefacts","text":"","code":"if (FALSE)  view_artefacts(demo_epochs)  # \\dontrun{}"},{"path":"https://craddm.github.io/eegUtils/reference/view_ica.html","id":null,"dir":"Reference","previous_headings":"","what":"EEG decomposition viewer — view_ica","title":"EEG decomposition viewer — view_ica","text":"Shiny viewer Independent Component Analysis Spatio-spectral Decomposition/RESS components provides interface looking topographies, timecourses, power spectral densities individual components. Can used select reject artefactual components.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/view_ica.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EEG decomposition viewer — view_ica","text":"","code":"view_ica(data)"},{"path":"https://craddm.github.io/eegUtils/reference/view_ica.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EEG decomposition viewer — view_ica","text":"data eeg_ICA object","code":""},{"path":"https://craddm.github.io/eegUtils/reference/view_ica.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EEG decomposition viewer — view_ica","text":"list consisting (optionally) character vector components marked rejection character vector components marked kept eeg_epochs object reconstructed eeg_ICA object, components marked rejection removed.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/view_ica.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EEG decomposition viewer — view_ica","text":"Matt Craddock matt@mattcraddock.com","code":""},{"path":"https://craddm.github.io/eegUtils/reference/wavelet_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalise Morlet wavelets — wavelet_norm","title":"Normalise Morlet wavelets — wavelet_norm","text":"Normalise FFT'd Morlet wavelet family recommended Mike X Cohen, dividing wavelet absolute maximum. result frequency passed unit amplitude, resulting convolution signal return units approximately original scale (.e. uV^2 / Hz). alternative Frobenius norm?","code":""},{"path":"https://craddm.github.io/eegUtils/reference/wavelet_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalise Morlet wavelets — wavelet_norm","text":"","code":"wavelet_norm(mf_zp, n_freq)"},{"path":"https://craddm.github.io/eegUtils/reference/wavelet_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalise Morlet wavelets — wavelet_norm","text":"mf_zp zero-padded, FFT'd morlet wavelet family n_freq Number frequencies","code":""},{"path":"https://craddm.github.io/eegUtils/reference/welch_fft.html","id":null,"dir":"Reference","previous_headings":"","what":"Welch FFT — welch_fft","title":"Welch FFT — welch_fft","text":"Internal function calculating PSD using Welch's method. Hardcoded use Hamming window.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/welch_fft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Welch FFT — welch_fft","text":"","code":"welch_fft(data, seg_length, n_fft, noverlap, n_sig, srate)"},{"path":"https://craddm.github.io/eegUtils/reference/welch_fft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Welch FFT — welch_fft","text":"data Object perform FFT . seg_length length segment data. n_fft length FFT. noverlap overlap segments. n_sig number samples total. srate Sampling rate data.","code":""},{"path":"https://craddm.github.io/eegUtils/reference/zero_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a zero centred vector — zero_vec","title":"Generate a zero centred vector — zero_vec","text":"Generate zero centred vector","code":""},{"path":"https://craddm.github.io/eegUtils/reference/zero_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a zero centred vector — zero_vec","text":"","code":"zero_vec(vec_length)"},{"path":"https://craddm.github.io/eegUtils/reference/zero_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a zero centred vector — zero_vec","text":"vec_length many points want vector ","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"function-changes-0-8-0","dir":"Changelog","previous_headings":"","what":"Function changes","title":"eegUtils 0.8.0","text":"plot_timecourse() now requires facets mappings explicitly stated call, rather added afterwards. allows use weighted averages required. plot_timecourse.eeg_tfr() now defaults baseline correction, takes type argument baseline type specified. Added new plot_gfp() function calculating plotting Global Field Power. topoplot() now supports plotting multiple timepoints - pass list times time_lim argument. topoplot() now supports custom fill titles fill_title argument, automatically switches necessary (e.g. now says “Power mV^2”). Fill titles now also centred. browse_data.eeg_ICA() now provides option select components rejection, returns character vector selected components. Recoded browse_data() use bslib styling. view_ica() now allows select components rejection, double-click topographies inspect individually, return cleaned data. eeg_average() now supports averaging conditions eeg_evoked files eeg_average() now records weights - number epochs went average - uses subsequent steps possible eeg_epochs/eeg_evoked / eeg_tfr objects. compute_tfr() now argument trim_edges allows users switch automatic removal epoch edges transformation. Defaults TRUE. rm_baseline() now adds record baseline period Changed logic eeg_combine.eeg_epochs(). Now checks duplicate epochs directly using epoch, participant_id recording, corrects duplicates. means recording participant_id matching across eeg_epochs objects timing correction applied.","code":""},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"internal-changesbug-fixes-0-8-0","dir":"Changelog","previous_headings":"","what":"Internal changes/bug fixes","title":"eegUtils 0.8.0","text":"Recoded faster_epochs() longer use data.table. added parse_cycles() function use compute_tfr() Using electrode_locations() data.frame return data frame electrode names full upper case. Now returns electrodes original case. eeg_evoked objects now contain reference information. ar_for_ica file started, moving functions artefact_rejection.R select_times prevented converting single column data.frames vectors subsetting. plot_timecourse.eeg_tfr now correctly uses freq_range parameter. Improvements internal processing logic view_ica() improve performance. import_raw(..., fast_bdf = TRUE) now discard Annotations rather fail import BDF files Annotations. removed dependency Matrix - now using qr()$rank run_ICA rather using Matrix::rankMatrix() determine rank input signals. Added numerous dropped_aes variables custom ggplot2 stat_ functions compatibility ggplot2 3.4.0. Replaced size aesthetic linewidth compatibility ggplot2 3.4.0. Lots minor code style improvements Deprecated function iir_filt removed Refactored run_ICA adopted faster SOBI methods Used internal legendre polynomial function removed pracma dependency Used internal whitening methods sobi_ICA removed whitenening dependency","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"function-changes-0-7-0","dir":"Changelog","previous_headings":"","what":"Function changes","title":"eegUtils 0.7.0","text":"Add imax method run_ICA(). allows use infomax ICA algorithm infomax package, reimplementation extended-Infomax algorithm used EEGLAB Matlab toolbox. erp_scalp() interactive_scalp() now appropriately use channel locations included data. informative messages using compute_tfr(). plot_tfr() now applies baseline correction single-trial basis possible, may show different results using non-linear baseline correction (e.g. divide dB) topoplot() now allows provide multiple component numbers plotting eeg_ICA object, automatically produce appropriately facetted plot. topoplot() now k parameter control smoothing using method = \"gam\". added additional demo_spatial data spatial cueing experiment. plot_difference() function added plotting ERP difference waves. currently handles two levels. Added hanning taper support compute_tfr. Note scaling factors used compute_tfr calculations adjusted, exact numerical values returned change. However, just scaling factor - relative distances values remained unchanged. ar_FASTER() experimental support eeg_group objects objects eeg_evoked groups. perform rejection reports many times participants data breaks threshold number measures. import_raw() default participant_id now changed NA instead character(1), promote better use eeg_combine(). eeg_combine() now refuse combine objects participant_id missing (.e. NA), warn combining objects previous default value ““. prevent accidentally treating data different participants participant. topoplot() now provides informative messages head radius used plotting. default calculation r using interp_limit = \"head\" changed now set outermost electrode’s position + 10% buffer. Smaller r can set manually. added get_participant_id, set_participant_id, get_recording set_recording interact epochs metadata eegUtils object. eeg_combine() handles eeg_tfr() objects better, now returns error trying combine single-trial data. plot_timecourse() now handles eeg_tfr() objects.","code":""},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"internal-changes--bug-fixes-0-7-0","dir":"Changelog","previous_headings":"","what":"Internal changes / bug fixes","title":"eegUtils 0.7.0","text":"erp_scalp() interactive_scalp() now use cleaner evaluation colour argument using rlang Fixed adding CSD new reference using compute_csd() using scaling number cycles compute_tfr(), now also use spacing parameter determine log linear scaling. Fixed bug eeg_average() used c(\"eeg_group\", \"eeg_tfr\") objects. Fixed bug incorrect number epochs calculated epoching eeg_data objects multiple “target” triggers appearing epoch. Fixed error erp_raster() anat_order == FALSE new epoch_queries file functions setting getting epochs structure new check_items file functions check consistency various structures eeg_combine() eeg_tfr() longer drops single dimensions, causing issues one channel epoch object. plot_timecourse.eeg_tfr now correctly passes baseline period rm_baseline() filter.eeg_tfr() sometimes dropping single dimensions using abind::asub(), now fixed","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"function-changes-0-6-3","dir":"Changelog","previous_headings":"","what":"Function changes","title":"eegUtils 0.6.3","text":"Added log spaced frequencies compute_tfr(), new spacing argument. plot_tfr automatically detects spacing plots figure appropriately. Added na.rm option erp_image() either keep plot trials NA values due smoothing. default ’ll removed. Added informative messages compute_psd().","code":""},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"internal-changes--bug-fixes-0-6-3","dir":"Changelog","previous_headings":"","what":"Internal changes / bug fixes","title":"eegUtils 0.6.3","text":"minor documentation fixes. plot_tfr() error selecting specific frequency range fixed. Switched new style vdiffr tests fixed erp_image() smoothing time instead epochs.","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"function-changes-0-6-2","dir":"Changelog","previous_headings":"","what":"Function changes","title":"eegUtils 0.6.2","text":"added support EEGLAB .set files saved newer Matlab file formats. changed first argument eeg_filter() data instead .data added informative user messages importing data adding electrode locations. erp_image() now supports eeg_tfr objects.","code":""},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"internal-changes--bug-fixes-0-6-2","dir":"Changelog","previous_headings":"","what":"Internal changes / bug fixes","title":"eegUtils 0.6.2","text":"combining three continuous eeg_data objects, eeg_combine() substantially undercorrect timing events third file - now fixed. groups parameter topoplot() now correctly passed types object. stat_tests.R file removed, reimplemented elsewhere Long standing issues import channel locations EEGLAB files hopefully fixed… rm_baseline() eeg_evoked longer uses data.table .data.frame.eeg_evoked() handles grouped data better. import_set() now handles EEGLAB formats better.","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"function-changes-0-6-1","dir":"Changelog","previous_headings":"","what":"Function changes","title":"eegUtils 0.6.1","text":"ar_eogcor now bipolarize argument can set false HEOG/VEOG channels already bipolarized. stat_scalpcontours() geom_topo() now contours added errors attempting use compute_psd compute_tfr eeg_group objects. compute_tfr() now works better eeg_evoked objects contain multiple conditions.","code":""},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"internal-changes--bug-fixes-0-6-1","dir":"Changelog","previous_headings":"","what":"Internal changes / bug fixes","title":"eegUtils 0.6.1","text":"eeg_reference now handles multiple reference channels better rereferencing get_scalpmap handles eeg_ICA components better channels locations Travis-CI removed. cart_to_spherical coord flipping bug fixed (hopefully…) filter now converts tibble internally coerce signals vector one channel. added copyright info summary_contour file eeg_combine.eeg_evoked made behave consistently creating grouped data .data.frame() functions moved df_converters.r","code":""},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"eegutils-060","dir":"Changelog","previous_headings":"","what":"eegUtils 0.6.0","title":"eegUtils 0.6.0","text":"IMPORTANT: changes logic topoplot() may make appearance quite different. Specifically, changes way underlying interpolation grid calculated things like diameter cartoon head calculated. changes often lead different minimum maximum amplitudes across image, thus changes appearance plot due different scales- don’t alarmed!","code":""},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"function-changes-0-6-0","dir":"Changelog","previous_headings":"","what":"Function changes","title":"eegUtils 0.6.0","text":"epoch_data baseline correction now defaults baseline correction Added filter method eeg_tfr objects fit_glm() overhauled. Now far faster allows specification models using standard R formulae. New eeg_lm class introduced output fit_glm(). plot_butterfly.eeg_lm() method added .data.frame() methods added eeg_lm objects. view_ica() Shiny viewer eeg_ICA eeg_decomp objects added. view_artefacts()Shiny viewer channel epoch stats added. plot_timecourse() now takes mapping argument, allows use ggplot2 aes() mappings eeg_average.eeg_tfr() now follows behaviour eeg_average() methods respecting epochs structure. compute_itc() added computing inter-trial coherence eeg_tfr objects. cols added eeg_average.eeg_tfr eeg_combine.tfr_average() added handle pre-averaged eeg_tfr objects compute_tfr() now allows non-constant number cycles compute_tfr() now uses different scaling factor, raw units now microvolts-squared. added import_erplab() function plot_timecourse() now allows CIs eeg_group objects.","code":""},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"internal-changes--bug-fixes-0-6-0","dir":"Changelog","previous_headings":"","what":"Internal changes / bug fixes","title":"eegUtils 0.6.0","text":"plot_tfr() now always drops NA/NaN values averages appropriately electrodes conditions. import_set() handles continuous EEG data EEGLAB much better Now using whitening package whitening SOBI ICA select_epochs eeg_ICA objects fixed correctly remove epochs signals added tests filter.eeg_ICA filter.eeg_tfr fixed filter.eeg_data filter.eeg_evoked select_elecs eeg_ICA now correctly removes components unmixing matrix switched back using left_join dplyr tag_events function easy fix sorting events tagging. fixed odd interaction select() validate_channels() reordered channel names chan_info eeg_decomp now better job filtering ssd method various tibble related warnings errors cleaned . method = \"gam\" now yield sensible results geom_topo() run_ICA() eeg_decomp() methods now return components ordered percent variance explained (high low) removed scaling components SOBI ICA method browse_data().eeg_ica grid res reduced eeg_reference().eeg_epochs always average referencing, now fixed. cleaner code topoplot() biharmonic smooth compute_psd() now demeans individual segments Welch FFT; also longer errors one segment per channel eeg_tfr() internal structure modified keep 4 dimensions even averaging, consistency stat_summary_by_fill() added averaging raster plots effectively. convert_tfr() now properly returns converted data import_raw() fix Brain Vision Analyzer files date fields markers added version field objects","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"function-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Function changes","title":"eegUtils 0.5.0","text":"Default settings Infomax ICA changed similar EEGLAB/Fieldtrip. Faster reading bdf implemented. Old behaviour can retained using fast_bdf = FALSE parameter import_raw() eeg_combine now supports combining lists. eeg_reference now supports eeg_epochs eeg_evoked objects. ### Internal changes / bug fixes plot_butterfly now faster . Much faster reader BDF implemented. eeg_filter added demean parameter removing channel/epoch means filtering now optional. Defaults TRUE. ar_acf() checks low autocorrelation ar_chanfoc() checks excessive channel focality (e.g. components load mostly one channel) ar_trialfoc() checks trial focality (components load mostly trials) ar_eogcor() checks correlation EOG channels topoplot plotting radius logic altered compute_csd now uses eeg_reference rather reref_eeg Unmixing matrix SSD decompositions fixed. compute_tfr reworked faster. Faster baseline correction implemented using Rcpp. Padding now used compute_tfr, greatly improves speed/accuracy; units may change change scaling factor. epoch_data now uses robust way determining time limits/samples include epoch longer fails combinations time limit sampling rate eeg_average returns objects class(eeg_evoked, eeg_epochs) Updated R requirement >= 3.2.0 Updated rlang requirement >= 0.4.0 compute_psd fix single segment data updated use nest unnest keeping tidyr 1.0.0 .data.frame.eeg_tfr() now fixed output correctly","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"function-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Function changes","title":"eegUtils 0.4.0","text":"cond_label parameter deprecated Information new epochs structure now automatically added data.frame tag_epochs function added labelling run_ICA now includes fICA package version fastica, now supports running PCA ICA. apply_ICA function added remove ICA components. Behaviour select_times() changed use exact supplied times rather finding nearest times data. select() now works selecting electrodes eeg_data eeg_epochs objects. filter() filters time points epochs eeg_data eeg_epochs objects. mutate() adds columns signals eeg_data eeg_epochs objects. topoplot() now groups parameter allows possibility facetting event labels. Biosemi montages added events() function added easily access modify events structure eegUtils objects. channels() function added easily access modify chan_info structure eegUtils objects. epochs() function added access modify epochs structure. ar_eogreg() function added removing eye movement activity using regression. eeg_filter() supports use multiple threads/cores future package. iir_filt() deprecated geom_topo() extension ggplot2 added. Allows plotting topographical scalp maps using standard ggplot2 functions. Default grid_res topography related plots increased 200.","code":""},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"internal-changes--bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Internal changes / bug fixes","title":"eegUtils 0.4.0","text":"reref_eeg() iir_filt() eeg_FASTER() reref_eeg() now correctly excludes electrodes requested. iir_filt() now correctly respects epoch boundaries. New field epochs added eeg_data eeg_epochs objects. chan_info changes make chan_info consistent across systems. Corrected scaling factor PSD eeg_combine now checks fixes eeg_data timing consistency eeg_tfr objects now use differently organised underlying matrices. eeg_ICA fixed unmixing matrices, transposed.","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"function-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Function changes","title":"eegUtils 0.3.0","text":"topoplot() now scaling parameter scale size lines markers drawn plot. plot_tfr() function now useable, baseline correction also added. rm_baseline() now handles eeg_tfr objects. .data.frame() method added eeg_tfr objects. compute_tfr() function now available use Morlet wavelets. plot_psd() now allows changing FFT parameters (e.g. number FFT points, segment length) Data selectors added eeg_tfr objects (e.g. select_elecs())","code":""},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"internal-changes-bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Internal changes/ bug fixes","title":"eegUtils 0.3.0","text":"plot_timecourse() overhauled S3 method. plot_butterfly() reworked internally efficient rm_baseline() simplified internally, reworked use matrices; split separate file. select_elecs() now works eeg_evoked objects eeg_decomp function progress performing SSD analyses Various methods added TFR analyses topoplot() improvements internally. Now offers potential facetting. dplyr functions implemented internally objects.","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"function-changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Function changes","title":"eegUtils 0.2.1","text":"topoplot() added highlights parameter allow specific electrodes highlighted. run_ICA() now offers extended Infomax Fastica thanks ica package plotly now “suggested” package rather dependency plot_psd() function added calculate plot PSD eeg_epochs eeg_data objects plot_tfr() function added handle eeg_tfr objects. erp_image() now works eeg_ICA objects Generic print methods added eeg_epochs eeg_data compute_tfr() function added performed TFA eeg_epochs epoch_data() now warns events found rather stops. stops events found.","code":""},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"internal-changes-bug-fixes-0-2-1","dir":"Changelog","previous_headings":"","what":"Internal changes/ bug fixes","title":"eegUtils 0.2.1","text":"correctly excludes multiple named electrodes (.e. passed characters rather numbers), previously silently failed. longer records reference data ref_data field tf_morlet recoded called internally recoded call welch_fft() order support possibility different FFT methods. now drops DC component (frequency 0) welch_fft() internal function added eeg_downsample() now makes sure epoch length multiple downsampling factor avoid problems timing jitter erp_image() now S3 method now returns source activations “signals” data frame, component names now returns correct unmixing matrix added. computation g-matrix h-matrix refactored, spherical spline calculation altered accordingly added eeg_FASTER() now properly selects electrodes epochs removal","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"function-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Function changes","title":"eegUtils 0.2.0","text":".data.frame.eeg_epochs() now cond_labels parameter select epochs specific events add event label additional column. .data.frame() methods now drop sample column. .data.frame.eeg_ICA() now cond_labels parameter select epochs specific events add event label additional column. reref_eeg() now removes reference channels data. eeg_FASTER() - FASTER artefact rejection method now (mostly) implemented (experimental).","code":""},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"internal-changes--bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Internal changes / bug fixes","title":"eegUtils 0.2.0","text":"plot_butterfly() dplyr use removed. run_ica() refactored SOBI method, JADE dependency removed. montage_check() command parses montage info passed electrode_locations() label_check() added help parse event labels proc_events() added help parse event labels select_epochs() calls topoplot() now tries average/select across time/epochs converting long data, less memory use select_elecs() also removes electrodes chan_info select_epochs() fixed bug events timings inconsistent using keep = FALSE Electrode/channel related functions (selection) now moved channel_management.r New default electrode locations (347 locations 10-05 layout) provided","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"function-changes-0-1-15","dir":"Changelog","previous_headings":"","what":"Function changes","title":"eegUtils 0.1.15","text":"eeg_evoked() class introduced hold ERPS eeg_ICA() class introduced hold ICA decompositions eeg_average() function calculate averages (e.g. ERPs) eeg_epochs objects .data.frame.eeg_evoked() introduced handle conversion eeg_evoked objects data frames.","code":""},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"internal-changes--bug-fixes-0-1-15","dir":"Changelog","previous_headings":"","what":"Internal changes / bug fixes","title":"eegUtils 0.1.15","text":"compute_psd() function development, converted S3method. topoplot() properly checks existing chan_info eeg_data objects plot_timecourse() plot_butterfly() modified deal eeg_evoked objects. plot_butterfly() updated better handle data frames topoplot.eeg_ICA() added make topolots ICA components rm_baseline() reworked S3 method faster much less memory intensive. plot_butterfly() converted S3 method. Initial commits addition Morlet wavelet time-frequency analysis Initial commits statisical comparisons added","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"function-changes-0-1-14","dir":"Changelog","previous_headings":"","what":"Function changes","title":"eegUtils 0.1.14","text":"eeg_downsample() function added downsample EEG data integer factor. tag_events() function added give labels event codes. list_events() added display unique event codes associated labels. select_epochs() now allows selection epochs event code event label. erp_raster() - plot ERPs across scalp ERP image eeg_combine() - combine multiple eeg_data eeg_epochs objects one","code":""},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"internal-changes-bug-fixes-0-1-14","dir":"Changelog","previous_headings":"","what":"Internal changes/ bug fixes","title":"eegUtils 0.1.14","text":"eeg_epochs() now also handles downsampled data appropriately. select_times() longer leaves “epoch” column eeg_epochs objects. topoplot() now calls separate function (gam_topo()) create GAM smooths browse_data() major speed-ups, longer converts long format necessary. Converted S3method. interactive_scalp() fixed plotting individual electrodes","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"function-changes-0-1-13","dir":"Changelog","previous_headings":"","what":"Function changes","title":"eegUtils 0.1.13","text":"interp_elecs() function perform spherical spline interpolation individual electrodes eeg_ar_thresh() simple absolute value thresholding added plot_electrodes() Produces 2D interactive 3D plot electrode locations","code":""},{"path":[]},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"function-changes-0-1-12","dir":"Changelog","previous_headings":"","what":"Function changes","title":"eegUtils 0.1.12","text":"iir_filt() now also filters reference channels load_set() command added load EEGLAB .set files","code":""},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"internal-changes-0-1-12","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"eegUtils 0.1.12","text":"select_times.eeg_data select_times.eeg_epochs iir_filt.eeg_data iir_filt.eeg_epochs","code":""},{"path":"https://craddm.github.io/eegUtils/news/index.html","id":"eegutils-0111","dir":"Changelog","previous_headings":"","what":"eegUtils 0.1.11","title":"eegUtils 0.1.11","text":"Added NEWS.md file track changes package.","code":""}]
